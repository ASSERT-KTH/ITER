projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(Signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readInput();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,compressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DecompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,compressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(SignatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.re
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0L);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,null);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,SignatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}If(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);returnnewGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);InputStreamin=newGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.rereset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,-signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0.0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGZipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGuvernedSnappyCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGuvernedSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(in,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);in=newGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGZIPCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DecompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GZipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,null)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=newGuvernedSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.create(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,signatureLength);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,SignatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength,UntilEOF);
