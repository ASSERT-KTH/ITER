bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	14	None	replace
3	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	14	2	replace
4	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	14	2	replace
5	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	14	None	replace
6	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	14	None	replace
7	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
8	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	3	2	add
9	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	3	2	add
10	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	3	None	add
11	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [CE]  cannot  find  symbol  DECOMPRESSED  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }	  	non-compiled	[CE]  cannot  find  symbol  DECOMPRESSED	3	None	add
12	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	non-compiled	[CE]  ';'  expected	3	None	add
13	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	3	None	add
14	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length);  [CE]  cannot  find  symbol  length  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol  length	24	None	replace
15	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,int)  [FE]                CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  signatureLength);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,int)	24	None	replace
16	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,int)  [FE]                  CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,int)	24	None	replace
17	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readLine());  [CE]  cannot  find  symbol  [FE]                    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readLine());  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readLine());	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
18	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,int)  [FE]                      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  signatureLength);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,int)	24	None	replace
19	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  illegal  start  of  expression  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	10	2	replace
21	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	10	2	replace
22	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	10	2	replace
23	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	10	2	replace
24	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	10	None	replace
25	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
26	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	10	None	replace
28	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	4	None	replace
29	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  illegal  start  of  expression  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  illegal  start  of  expression  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  0);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,int)  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  0);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  0);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,int)	23	None	replace
34	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  1);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int)  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  1);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  1);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int)	23	None	replace
35	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  4);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int)  [FE]                CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  4);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  4);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int)	23	None	replace
36	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  3);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int)  [FE]                  CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  3);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  3);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int)	23	None	replace
37	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean)  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean)	22	None	replace
38	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP2);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String)  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP2);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP2);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String)	22	None	replace
39	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String)  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String)	22	None	replace
40	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean)  [FE]                CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean)	22	None	replace
41	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  e);  [CE]  cannot  find  symbol  e  [FE]                  CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  e);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  e);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE);    	non-compiled	[CE]  cannot  find  symbol  e	22	None	replace
42	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String)  [FE]                    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String)	22	None	replace
43	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  PACK200);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)  [FE]                      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  PACK200);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  PACK200);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)	22	None	replace
44	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean)  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean)	17	None	replace
45	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int)  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  signatureLength);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  signatureLength);	  return    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int)	17	None	replace
46	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)	17	None	replace
47	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2);	  return    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)	17	None	replace
48	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)  [FE]                CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)	17	None	replace
49	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream)  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    UntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream)	21	None	replace
50	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	      	compilable	  [FE]  CompressorException  	16	2	replace
51	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	      	compilable	  [FE]  CompressorException  	16	2	replace
52	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  in.mark(signatureLength);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength);	      	compilable	  [FE]  CompressorException  	16	2	replace
53	[BUG]  [BUGGY]  in.mark(signatureLength);  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  in.mark(signatureLength);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);	      	compilable	  [FE]  CompressorException  	16	2	replace
54	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	      	compilable	  [FE]  CompressorException  	16	2	replace
55	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	      	compilable	  [FE]  CompressorException  	16	2	replace
56	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	      	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	16	None	replace
57	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	      	compilable	  [FE]  CompressorException  	16	2	replace
58	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	      	compilable	  [FE]  CompressorException  	16	2	replace
59	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	      	compilable	  [FE]  CompressorException  	16	2	replace
60	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [FE]  CompressorException  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	      	compilable	  [FE]  CompressorException  	16	2	replace
61	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	5	2	add
62	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	5	2	add
63	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	5	None	add
64	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  ';'  expected	5	None	add
65	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(Signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  Signature  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(Signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(Signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  Signature	5	None	add
66	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
67	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	6	None	replace
68	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signatureLength);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signatureLength);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	6	None	replace
69	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
70	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
71	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
72	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	8	None	replace
73	[BUG]  [BUGGY]  InputStream  in  =  in.readInput();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  InputStream  in  =  in.readInput();  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readInput();	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	8	None	replace
74	[BUG]  [BUGGY]  InputStream  in  =  in.readIn();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  InputStream  in  =  in.readIn();  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readIn();	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	8	None	replace
75	[BUG]  [BUGGY]  InputStream  in  =  in.readInt();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  InputStream  in  =  in.readInt();  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readInt();	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	8	None	replace
76	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signature,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	8	None	replace
77	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  compressConcatenated);  [CE]  cannot  find  symbol  compressConcatenated  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  compressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  compressConcatenated);	  return    new    GzipCompressorInputStream(in,    UntilEOF);    	non-compiled	[CE]  cannot  find  symbol  compressConcatenated	19	None	replace
78	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    UntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	19	None	replace
79	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DecompressUntilEOF);  [CE]  cannot  find  symbol  DecompressUntilEOF  [FE]                CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  DecompressUntilEOF);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DecompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    UntilEOF);    	non-compiled	[CE]  cannot  find  symbol  DecompressUntilEOF	19	None	replace
80	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  compressUntilEOF);  [CE]  cannot  find  symbol  compressUntilEOF  [FE]                  CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  compressUntilEOF);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  compressUntilEOF);	  return    new    GzipCompressorInputStream(in,    UntilEOF);    	non-compiled	[CE]  cannot  find  symbol  compressUntilEOF	19	None	replace
81	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  CompressorException  	7	2	add
82	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  CompressorException  	7	2	add
83	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	7	None	add
84	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  [CE]  'catch'  without  'try'  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {	  	non-compiled	[CE]  'catch'  without  'try'	7	None	add
85	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  ';'  expected	7	None	add
86	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	7	None	add
87	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(signature,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  InputStream  in  =  new  GzipInputStream(signature,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(signature,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	12	None	replace
88	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
89	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	20	2	replace
90	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]                CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	20	2	replace
91	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                  CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	20	2	replace
92	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]                  CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	20	2	replace
93	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	20	None	replace
94	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	compilable	  [FE]  CompressorException  	11	2	add
95	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	compilable	  [FE]  CompressorException  	11	2	add
96	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [CE]  not  a  statement  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re	  	non-compiled	[CE]  not  a  statement	11	None	add
97	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  SignatureLength  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	11	None	add
98	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  ';'  expected  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	non-compiled	[CE]  ';'  expected	11	None	add
99	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	11	None	add
100	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]      if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	        if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	  	compilable	  [FE]  CompressorException  	15	2	add
101	[BUG]  [BUGGY]      if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]      if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	        if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	  	compilable	  [FE]  CompressorException  	15	2	add
102	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  0,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,int)  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  0,  signatureLength);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  0,  signatureLength);	  return    new    GzipCompressorInputStream(in,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,int)	18	None	replace
103	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  0,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,boolean)  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  0,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  0,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,boolean)	18	None	replace
104	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  0L);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,long)  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  0L);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  0L);	  return    new    GzipCompressorInputStream(in,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,long)	18	None	replace
105	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  null);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,<null>)  [FE]                CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  null);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  null);	  return    new    GzipCompressorInputStream(in,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,<null>)	18	None	replace
106	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	13	2	add
107	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	13	2	add
108	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	13	None	add
109	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  ';'  expected	13	None	add
110	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	2	2	replace
111	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	2	2	replace
112	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	2	2	replace
113	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	2	2	replace
114	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	2	2	replace
115	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	2	2	replace
116	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	2	2	replace
117	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	2	2	replace
118	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return  new  GzipCompressorInputStream(in,  decompressUntilEOF);	  	non-compiled	[CE]  unreachable  statement	1	None	add
119	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]      NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	non-compiled	[CE]  cannot  find  symbol  UntilEOF	1	None	add
120	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
121	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	1	None	add
122	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);	  	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	1	None	add
123	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]              NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  UntilEOF	1	None	add
124	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  pending  [FE]                NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	non-compiled	[CE]  cannot  find  symbol  pending	1	None	add
125	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  pendingEOF  [FE]                  NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	non-compiled	[CE]  cannot  find  symbol  pendingEOF	1	None	add
126	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	9	2	add
127	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	9	2	add
128	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  	non-compiled	[CE]  ')'  expected	9	None	add
129	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  	non-compiled	[CE]  ')'  expected	9	None	add
130	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  	non-compiled	[CE]  ')'  expected	9	None	add
131	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress	  	non-compiled	[CE]  ')'  expected	9	None	add
132	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  SNAPPY_RAW);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)	22	None	replace
133	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  UntilEOF);  [CE]  cannot  find  symbol  UntilEOF  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  UntilEOF);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  UntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE);    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	22	None	replace
134	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
135	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
136	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
137	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
138	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
139	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	8	None	replace
140	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	11	None	add
141	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	11	None	add
142	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  reset();  }  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  reset();  }	  	non-compiled	[CE]  ';'  expected	11	None	add
143	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	      	non-compiled	[CE]  cannot  find  symbol  UntilEOF	16	None	replace
144	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	return  new  GzipCompressorInputStream(in);	      	compilable	  [FE]  CompressorException  	16	2	replace
145	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in);  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in);	      	compilable	  [FE]  CompressorException  	16	2	replace
146	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	      	compilable	  [FE]  CompressorException  	16	2	replace
147	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	      	compilable	  [FE]  CompressorException  	16	2	replace
148	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  pendingEOF  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }	      	non-compiled	[CE]  cannot  find  symbol  pendingEOF	16	None	replace
149	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in);  }	      	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	16	None	replace
150	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  in);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,InputStream)  [FE]    NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  in);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(decompressConcatenated,  in);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,InputStream)	2	None	replace
151	[BUG]  [BUGGY]  return  new  GZipCompressorInputStream(in,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GZipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GZipCompressorInputStream(in,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
152	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	3	None	add
153	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
154	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
155	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
156	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [CE]  ';'  expected  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
157	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
158	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
159	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	10	None	replace
160	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	10	None	replace
161	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	10	None	replace
162	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	10	None	replace
163	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	10	None	replace
164	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	10	None	replace
165	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	14	None	replace
166	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	14	2	replace
167	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	14	2	replace
168	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	14	None	replace
169	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	14	None	replace
170	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  UntilEOF  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	12	None	replace
171	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  pending  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  pending	12	None	replace
172	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	12	None	replace
173	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	12	None	replace
174	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	12	None	replace
175	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	compilable	  [FE]  CompressorException  	12	2	replace
176	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [FE]  CompressorException  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	compilable	  [FE]  CompressorException  	12	2	replace
177	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);	  	non-compiled	[CE]  unreachable  statement	1	None	add
178	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]      NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  UntilEOF	1	None	add
179	[BUG]  [BUGGY]      if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GZIPCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]      if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GZIPCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	        if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GZIPCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  UntilEOF	15	None	add
180	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	5	None	add
181	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DecompressConcatenated);  [CE]  cannot  find  symbol  DecompressConcatenated  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  DecompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DecompressConcatenated);	  return    new    GzipCompressorInputStream(in,    UntilEOF);    	non-compiled	[CE]  cannot  find  symbol  DecompressConcatenated	19	None	replace
182	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  0);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,int)  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  0);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  0);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,int)	23	None	replace
183	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,int)  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  signatureLength);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,int)	24	None	replace
184	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	20	None	replace
185	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	20	None	replace
186	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                  CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	20	None	replace
187	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	13	None	add
188	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	7	None	add
189	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	7	None	add
190	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
191	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
192	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
193	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
194	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
195	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
196	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	9	None	add
197	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	1	None	add
198	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	1	None	add
199	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	1	None	add
200	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(signature,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(byte[],Boolean)  [FE]    NullPointerException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(signature,  decompressUntilEOF);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(signature,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(byte[],Boolean)	2	None	replace
201	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	13	None	add
202	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	10	None	replace
203	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  not  a  statement  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	10	None	replace
204	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  not  a  statement  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	14	None	replace
205	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
206	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String)  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String)	22	None	replace
207	[BUG]  [BUGGY]      if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  unreachable  statement  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]      if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	        if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  unreachable  statement	15	None	add
208	[BUG]  [BUGGY]      if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]      if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	        if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	15	None	add
209	[BUG]  [BUGGY]      if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]      if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	        if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	15	None	add
210	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]      if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	        if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	  	compilable	  [FE]  CompressorException  	15	2	add
211	[BUG]  [BUGGY]      if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]      if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	        if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	  	compilable	  [FE]  CompressorException  	15	2	add
212	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	6	None	replace
213	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in);  [CE]  cannot  find  symbol  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
214	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
215	[BUG]  [BUGGY]  InputStream  in  =  in.read();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  InputStream  in  =  in.read();  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.read();	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	8	None	replace
216	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
217	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
218	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	12	None	replace
219	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	12	None	replace
220	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in.read());  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int)  [FE]          CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  in.read());  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in.read());	  return    new    GzipCompressorInputStream(in,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int)	18	None	replace
221	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readLine());  [CE]  cannot  find  symbol  [FE]            CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readLine());  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in.readLine());	  return    new    GzipCompressorInputStream(in,    0);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
222	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)  [FE]        CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200);	  return    new    GzipCompressorInputStream(in,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)	17	None	replace
223	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]    CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	9	None	add
224	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	20	None	replace
225	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  pendingEOF  [FE]                CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	20	None	replace
226	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  UntilEOF);  [CE]  cannot  find  symbol  UntilEOF  [FE]              CompressorException    [CONTEXT]    in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {    [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  UntilEOF);  [BUGGY]    }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  UntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	24	None	replace
