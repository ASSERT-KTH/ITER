bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  illegal  start  of  expression  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
2	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	128	None	replace
3	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	128	None	replace
4	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	128	None	replace
5	[BUG]  [BUGGY]  if(FramedSnappyCompressor.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressor.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressor.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	128	None	replace
6	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  not  a  statement  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  not  a  statement	128	None	replace
7	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	128	None	replace
8	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,InputStream,boolean)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    0,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,InputStream,boolean)	103	None	replace
9	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  0,  decompressConcatenated,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,boolean,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  0,  decompressConcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  0,  decompressConcatenated,  signatureLength);	  return    new    GzipCompressorInputStream(in,    0,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,boolean,int)	103	None	replace
10	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	56	None	replace
11	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	56	None	replace
12	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	56	None	replace
13	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	56	None	replace
14	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	121	None	replace
15	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	121	None	replace
16	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	121	None	replace
17	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                    NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	compilable	  [FE]  CompressorException  	121	2	replace
18	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  CompressorException  [FE]                    NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	compilable	  [FE]  CompressorException  	121	2	replace
19	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ')'  expected	121	None	replace
20	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  final  parameter  in  may  not  be  assigned  [FE]                        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  final  parameter  in  may  not  be  assigned	121	None	replace
21	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readLine(),  signatureLength);  [CE]  cannot  find  symbol  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readLine(),  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readLine(),  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
22	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.getChars(signatureLength),  in.readLine());  [CE]  cannot  find  symbol  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.getChars(signatureLength),  in.readLine());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.getChars(signatureLength),  in.readLine());	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
23	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  Integer.toString(signatureLength),  in.readLine());  [CE]  cannot  find  symbol  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  Integer.toString(signatureLength),  in.readLine());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  Integer.toString(signatureLength),  in.readLine());	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
24	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  IOUtils.readFully(in),  in.readLine());  [CE]  no  suitable  method  found  for  readFully(InputStream)  [FE]                              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  IOUtils.readFully(in),  in.readLine());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  IOUtils.readFully(in),  in.readLine());	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.readLine());    	non-compiled	[CE]  no  suitable  method  found  for  readFully(InputStream)	17	None	replace
25	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.getCharacterEncoding());  [CE]  cannot  find  symbol  [FE]                                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.getCharacterEncoding());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.getCharacterEncoding());	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
26	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in);  return  new  GzipCompressorInputStream(in);  [CE]  unreachable  statement  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in);  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in);    return  new  GzipCompressorInputStream(in);	  	non-compiled	[CE]  unreachable  statement	144	None	add
27	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  unreachable  statement  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in);    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  unreachable  statement	144	None	add
28	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in);    if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	144	None	add
29	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  unreachable  statement  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in);    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  unreachable  statement	144	None	add
30	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  unreachable  statement  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in);    if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  unreachable  statement	144	None	add
31	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in);    if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  UntilEOF	144	None	add
32	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in);    if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	144	None	add
33	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  unreachable  statement  [FE]                  CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in);    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  unreachable  statement	144	None	add
34	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	192	None	replace
35	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	192	None	replace
36	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in,  0);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in,  0);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in,  0);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	192	None	replace
37	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  pendingEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  pendingEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  pendingEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	192	None	replace
38	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0.0)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0.0)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0.0)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	192	None	replace
39	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  ||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
40	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  ||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
41	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  ||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
42	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  [CE]  illegal  start  of  expression  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);	  ||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
43	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  ||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
44	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);  [CE]  illegal  start  of  expression  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);	  ||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
45	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  BZIP2);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,String)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  BZIP2);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  BZIP2);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength,    UntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,String)	226	None	replace
46	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,String)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength,    UntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,String)	226	None	replace
47	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,String)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength,    UntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,String)	226	None	replace
48	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  Boolean.valueOf);  [CE]  cannot  find  symbol  valueOf  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  Boolean.valueOf);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  Boolean.valueOf);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength,    UntilEOF);    	non-compiled	[CE]  cannot  find  symbol  valueOf	226	None	replace
49	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  0);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,int)  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  0);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength,    UntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,int)	226	None	replace
50	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  4);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,int)  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  4);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  4);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength,    UntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,int)	226	None	replace
51	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  GZIP);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,String)  [FE]                              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  GZIP);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  GZIP);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength,    UntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,String)	226	None	replace
52	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	166	2	add
53	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	166	2	add
54	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  If(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  If(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  ';'  expected	166	None	add
55	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(Signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  Signature  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(Signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(Signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  Signature	166	None	add
56	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,boolean)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,boolean)	132	None	replace
57	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  SNAPPY_FRAMED);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  SNAPPY_FRAMED);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  SNAPPY_FRAMED);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)	132	None	replace
58	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)	132	None	replace
59	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  SNAPPY_RAW,  SNAPPY_FRAMED);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,String,String)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  SNAPPY_RAW,  SNAPPY_FRAMED);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  SNAPPY_RAW,  SNAPPY_FRAMED);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,String,String)	132	None	replace
60	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)	132	None	replace
61	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  SNAPPY_RAW,  SNAPPY_FRAMED);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String,String)  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  SNAPPY_RAW,  SNAPPY_FRAMED);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  SNAPPY_RAW,  SNAPPY_FRAMED);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String,String)	132	None	replace
62	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,int)  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,int)	132	None	replace
63	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	168	2	replace
64	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	168	2	replace
65	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	168	None	replace
66	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	168	2	replace
67	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	168	2	replace
68	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	168	None	replace
69	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signature.length);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signature.length);	  in.mark(signatureLength);    	compilable	  [FE]  CompressorException  	53	2	replace
70	[BUG]  [BUGGY]  in.mark(signature.length);  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signature.length);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signature.length);	  in.mark(signatureLength);    	compilable	  [FE]  CompressorException  	53	2	replace
71	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength  +  1);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength  +  1);	  in.mark(signatureLength);    	compilable	  [FE]  CompressorException  	53	2	replace
72	[BUG]  [BUGGY]  in.mark(signatureLength  +  1);  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength  +  1);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength  +  1);	  in.mark(signatureLength);    	compilable	  [FE]  CompressorException  	53	2	replace
73	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength  -  1);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength  -  1);	  in.mark(signatureLength);    	compilable	  [FE]  CompressorException  	53	2	replace
74	[BUG]  [BUGGY]  in.mark(signatureLength  -  1);  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength  -  1);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength  -  1);	  in.mark(signatureLength);    	compilable	  [FE]  CompressorException  	53	2	replace
75	[BUG]  [BUGGY]  in.write(GzipCompressorInputStream.getBytes(signature));  [CE]  cannot  find  symbol  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.write(GzipCompressorInputStream.getBytes(signature));  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.write(GzipCompressorInputStream.getBytes(signature));	  in.mark(signatureLength);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
76	[BUG]  [BUGGY]  in.write('n');  [CE]  cannot  find  symbol  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.write('n');  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.write('n');	  in.mark(signatureLength);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
77	[BUG]  [BUGGY]  in.write(GzipCompressorInputStream.toByteArray());  [CE]  cannot  find  symbol  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.write(GzipCompressorInputStream.toByteArray());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.write(GzipCompressorInputStream.toByteArray());	  in.mark(signatureLength);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
78	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signature);	  InputStream    in    =    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	67	None	replace
79	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  DEFLATE);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  DEFLATE);	  InputStream    in    =    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	67	None	replace
80	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);	  InputStream    in    =    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	67	None	replace
81	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature.length);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature.length);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signature.length);	  InputStream    in    =    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	67	None	replace
82	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  0);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  0);	  InputStream    in    =    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	67	None	replace
83	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [CE]  illegal  start  of  expression  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
84	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
85	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readLine(),  signatureLength);  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readLine(),  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in.readLine(),  signatureLength);	  return    new    GzipCompressorInputStream(in,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
86	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readLine(),  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readLine(),  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in.readLine(),  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
87	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  IOUtils.readFully(in),  in.readLine());  [CE]  no  suitable  method  found  for  readFully(InputStream)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  IOUtils.readFully(in),  in.readLine());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  IOUtils.readFully(in),  in.readLine());	  return    new    GzipCompressorInputStream(in,    in.readLine());    	non-compiled	[CE]  no  suitable  method  found  for  readFully(InputStream)	221	None	replace
88	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated.readLine());  [CE]  boolean  cannot  be  dereferenced  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated.readLine());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated.readLine());	  return    new    GzipCompressorInputStream(in,    in.readLine());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	221	None	replace
89	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readLine(),  DEFLATE);  [CE]  cannot  find  symbol  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readLine(),  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in.readLine(),  DEFLATE);	  return    new    GzipCompressorInputStream(in,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
90	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  IOUtils.readFully(in).readLine());  [CE]  no  suitable  method  found  for  readFully(InputStream)  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  IOUtils.readFully(in).readLine());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  IOUtils.readFully(in).readLine());	  return    new    GzipCompressorInputStream(in,    in.readLine());    	non-compiled	[CE]  no  suitable  method  found  for  readFully(InputStream)	221	None	replace
91	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	new  GzipCompressorInputStream(in,  decompressConcatenated);	  return    new    GzipCompressorInputStream(decompressConcatenated,    in);    	compilable	  [FE]  CompressorException  	150	2	replace
92	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  decompressConcatenated);  [FE]  CompressorException  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  decompressConcatenated);	  return    new    GzipCompressorInputStream(decompressConcatenated,    in);    	compilable	  [FE]  CompressorException  	150	2	replace
93	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(decompressConcatenated,  in);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,InputStream)  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(decompressConcatenated,  in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(decompressConcatenated,  in);	  return    new    GzipCompressorInputStream(decompressConcatenated,    in);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,InputStream)	150	None	replace
94	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  in,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,InputStream,Boolean)  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(decompressConcatenated,  in,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(decompressConcatenated,    in);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,InputStream,Boolean)	150	None	replace
95	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in.decompressConcatenated,  decompressConcatenated);  [CE]  cannot  find  symbol  decompressConcatenated  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in.decompressConcatenated,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in.decompressConcatenated,  decompressConcatenated);	  return    new    GzipCompressorInputStream(decompressConcatenated,    in);    	non-compiled	[CE]  cannot  find  symbol  decompressConcatenated	150	None	replace
96	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(decompressConcatenated,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,Boolean)  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(decompressConcatenated,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(decompressConcatenated,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(decompressConcatenated,    in);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,Boolean)	150	None	replace
97	[BUG]  [BUGGY]  in  =  decompressConcatenated?  GzipCompressorInputStream.fromInputStream(in):  null;  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  decompressConcatenated?  GzipCompressorInputStream.fromInputStream(in):  null;  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  decompressConcatenated?  GzipCompressorInputStream.fromInputStream(in):  null;	  return    new    GzipCompressorInputStream(decompressConcatenated,    in);    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
98	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	188	2	replace
99	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [FE]  CompressorException  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	188	2	replace
100	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	188	2	replace
101	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [FE]  CompressorException  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	188	2	replace
102	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	188	None	replace
103	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	188	None	replace
104	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
105	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	188	2	replace
106	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	188	2	replace
107	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip3CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip3CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip3CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
108	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  decompressUntilEOF);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(in,  decompressUntilEOF);	  InputStream    in    =    new    GzipInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	72	None	replace
109	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  DEFLATE);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(in,  DEFLATE);	  InputStream    in    =    new    GzipInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	72	None	replace
110	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated,  signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated,  signatureLength);	  InputStream    in    =    new    GzipInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	72	None	replace
111	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(signature.length,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(signature.length,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(signature.length,  decompressConcatenated);	  InputStream    in    =    new    GzipInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	72	None	replace
112	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(signatureLength,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(signatureLength,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(signatureLength,  decompressConcatenated);	  InputStream    in    =    new    GzipInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	72	None	replace
113	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated,  DEFLATE);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated,  DEFLATE);	  InputStream    in    =    new    GzipInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	72	None	replace
114	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                  NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	123	None	replace
115	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                    NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	123	2	replace
116	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [FE]  CompressorException  [FE]                    NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	123	2	replace
117	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                      NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	123	2	replace
118	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [FE]  CompressorException  [FE]                      NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	123	2	replace
119	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	123	2	replace
120	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  [FE]  CompressorException  [FE]                        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	123	2	replace
121	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	123	2	replace
122	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  CompressorException  [FE]                          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	123	2	replace
123	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	123	None	replace
124	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	123	None	replace
125	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
126	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
127	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
128	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
129	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in);  }	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
130	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	152	2	replace
131	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	152	2	replace
132	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
133	[BUG]  [BUGGY]  if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  BZip2Compressor  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  BZip2Compressor	152	None	replace
134	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated);  }  [CE]  constructor  FramedSnappyCompressorInputStream  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  constructor  FramedSnappyCompressorInputStream  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	152	None	replace
135	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip3CompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip3CompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip3CompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
136	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  illegal  start  of  expression  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  ||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
137	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  illegal  start  of  expression  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  ||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
138	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  illegal  start  of  expression  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  ||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
139	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  illegal  start  of  expression  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  ||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
140	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  illegal  start  of  expression  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  ||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
141	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);  }  [CE]  illegal  start  of  expression  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);  }	  ||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
142	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean,boolean)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean,boolean)	44	None	replace
143	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,Boolean)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,Boolean)	44	None	replace
144	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  e);  [CE]  cannot  find  symbol  e  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  e);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  e);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressUntilEOF);    	non-compiled	[CE]  cannot  find  symbol  e	44	None	replace
145	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,Boolean)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,Boolean)	44	None	replace
146	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,String)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,String)	44	None	replace
147	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,InputStream,Boolean)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,InputStream,Boolean)	44	None	replace
148	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompress  [CE]  '('  or  '['  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompress	  	non-compiled	[CE]  '('  or  '['  expected	61	None	add
149	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  [CE]  illegal  start  of  expression  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
150	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	61	2	add
151	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	61	2	add
152	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  G  [CE]  '('  or  '['  expected  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  G  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  G	  	non-compiled	[CE]  '('  or  '['  expected	61	None	add
153	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  Gzip  [CE]  '('  or  '['  expected  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  Gzip  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  Gzip	  	non-compiled	[CE]  '('  or  '['  expected	61	None	add
154	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorIn  [CE]  '('  or  '['  expected  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorIn  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorIn	  	non-compiled	[CE]  '('  or  '['  expected	61	None	add
155	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(  [CE]  illegal  start  of  expression  [FE]                CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
156	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(signature,  UntilEOF);  [CE]  cannot  find  symbol  UntilEOF  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(signature,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(signature,  UntilEOF);	  return    new    GzipCompressorInputStream(in,    compressUntilEOF);    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	80	None	replace
157	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	119	None	replace
158	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	119	None	replace
159	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0  [CE]  not  a  statement  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
160	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  not  a  statement  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
161	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  not  a  statement  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
162	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  not  a  statement  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
163	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  [CE]  not  a  statement  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
164	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);  [CE]  not  a  statement  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
165	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  [CE]  not  a  statement  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
166	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  0);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,int)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  0);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    UntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,int)	133	None	replace
167	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  -1);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  -1);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  -1);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    UntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,int)	133	None	replace
168	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA,  UntilEOF);  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA,  UntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    UntilEOF);    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	133	None	replace
169	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	162	2	replace
170	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	162	2	replace
171	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	162	None	replace
172	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	162	None	replace
173	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	162	None	replace
174	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	162	None	replace
175	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	201	2	replace
176	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	201	2	replace
177	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	201	None	replace
178	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
179	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
180	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
181	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	153	None	replace
182	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	153	None	replace
183	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	153	None	replace
184	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  null))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  null))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  null))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	153	None	replace
185	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0.0))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0.0))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0.0))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	153	None	replace
186	[BUG]  [BUGGY]  CompositeCompressorInputStream  in  =  compositeCompressorInputStream(in,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  CompositeCompressorInputStream  in  =  compositeCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	CompositeCompressorInputStream  in  =  compositeCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
187	[BUG]  [BUGGY]  CompositeCompressorInputStream  in  =  compositeCompressorInputStream(in,  DEFLATE);  [CE]  cannot  find  symbol  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  CompositeCompressorInputStream  in  =  compositeCompressorInputStream(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	CompositeCompressorInputStream  in  =  compositeCompressorInputStream(in,  DEFLATE);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
188	[BUG]  [BUGGY]  CompositeCompressorInputStream  in  =  compositeCompressorInputStream(in,  signatureLength);  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  CompositeCompressorInputStream  in  =  compositeCompressorInputStream(in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	CompositeCompressorInputStream  in  =  compositeCompressorInputStream(in,  signatureLength);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
189	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	compilable	  [FE]  CompressorException  	141	2	replace
190	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [FE]  CompressorException  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	compilable	  [FE]  CompressorException  	141	2	replace
191	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	compilable	  [FE]  CompressorException  	141	2	replace
192	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [FE]  CompressorException  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	compilable	  [FE]  CompressorException  	141	2	replace
193	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	compilable	  [FE]  CompressorException  	141	2	replace
194	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	compilable	  [FE]  CompressorException  	141	2	replace
195	[BUG]  [BUGGY]  if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  BZip2Compressor  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  BZip2Compressor	141	None	replace
196	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [CE]  not  a  statement  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  not  a  statement	141	None	replace
197	[BUG]  [BUGGY]  if(FramedSnappyCompressor.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  FramedSnappyCompressor  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressor.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressor.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  FramedSnappyCompressor	141	None	replace
198	[BUG]  [BUGGY]  if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  BZip2Compressor  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  BZip2Compressor	141	None	replace
199	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  illegal  start  of  expression  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
200	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	129	None	replace
201	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	129	None	replace
202	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	129	None	replace
203	[BUG]  [BUGGY]  if(FramedSnappyCompressor.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressor.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressor.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	129	None	replace
204	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	129	None	replace
205	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  LZMA);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,String)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  LZMA);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  LZMA);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    LZMA);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,String)	206	None	replace
206	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    LZMA);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)	206	None	replace
207	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  LZMA);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,String)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  LZMA);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  LZMA);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    LZMA);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,String)	206	None	replace
208	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    LZMA);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)	206	None	replace
209	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(signature,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(byte[],boolean)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(signature,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(signature,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    compressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(byte[],boolean)	77	None	replace
210	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompress);  [CE]  cannot  find  symbol  decompress  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompress);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompress);	  return    new    GzipCompressorInputStream(in,    compressConcatenated);    	non-compiled	[CE]  cannot  find  symbol  decompress	77	None	replace
211	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	134	None	replace
212	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	134	None	replace
213	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	134	None	replace
214	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	134	None	replace
215	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	134	None	replace
216	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean)	78	None	replace
217	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)	78	None	replace
218	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  signatureLength);	  return    new    GzipCompressorInputStream(in,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int)	78	None	replace
219	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  SNAPPY_FRAMED);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  SNAPPY_FRAMED);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  SNAPPY_FRAMED);	  return    new    GzipCompressorInputStream(in,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)	78	None	replace
220	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_FRAMED);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_FRAMED);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  SNAPPY_FRAMED);	  return    new    GzipCompressorInputStream(in,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	78	None	replace
221	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	138	None	replace
222	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  0);  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  0);	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	138	None	replace
223	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0.0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0.0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0.0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	138	None	replace
224	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	138	None	replace
225	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	138	None	replace
226	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in.mark(signatureLength),  decompressUntilEOF);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in.mark(signatureLength),  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in.mark(signatureLength),  decompressUntilEOF);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	117	None	replace
227	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature,  decompressUntilEOF);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signature,  decompressUntilEOF);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	117	None	replace
228	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  decompressUntilEOF);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  decompressUntilEOF);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	117	None	replace
229	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
230	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
231	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
232	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	118	None	replace
233	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.close();  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	118	2	replace
234	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.close();  }  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.close();  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	118	2	replace
235	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  pending  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  pending	10	None	replace
236	[BUG]  [BUGGY]  InputStream  in  =  in.getInputStream();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  in.getInputStream();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.getInputStream();	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	95	None	replace
237	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,String)  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,String)	42	None	replace
238	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,int)  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,int)	42	None	replace
239	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  PACK200);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  PACK200);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  PACK200);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)	42	None	replace
240	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	158	None	replace
241	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	158	None	replace
242	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	158	None	replace
243	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	158	None	replace
244	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  MutableCompressorInputStream(in);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	158	None	replace
245	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0.0))  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0.0))  {  return  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0.0))  {  return  new  MutableCompressorInputStream(in);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	158	None	replace
246	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  pending))  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]                              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  pending))  {  return  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  pending))  {  return  new  MutableCompressorInputStream(in);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	158	None	replace
247	[BUG]  [BUGGY]  'catch'  without  'try'  [CE]  unclosed  character  literal  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  'catch'  without  'try'  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	'catch'  without  'try'	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    	non-compiled	[CE]  unclosed  character  literal	84	None	replace
248	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  illegal  start  of  expression  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
249	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  [CE]  illegal  start  of  expression  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
250	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  [CE]  illegal  start  of  expression  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
251	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	167	2	replace
252	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	167	2	replace
253	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	167	2	replace
254	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	167	2	replace
255	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	167	None	replace
256	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	167	2	replace
257	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	167	2	replace
258	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in,  0);  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in,  0);	  MutableCompressorInputStream.matches(signature,    decompressUntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	193	None	replace
259	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  UntilEOF);	  MutableCompressorInputStream.matches(signature,    decompressUntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	193	None	replace
260	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    decompressUntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	193	None	replace
261	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    decompressUntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	193	None	replace
262	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);	  MutableCompressorInputStream.matches(signature,    decompressUntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	193	None	replace
263	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompress  [CE]  '('  or  '['  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompress	  	non-compiled	[CE]  '('  or  '['  expected	8	None	add
264	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  [CE]  illegal  start  of  expression  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
265	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  G  [CE]  '('  or  '['  expected  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  G  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  G	  	non-compiled	[CE]  '('  or  '['  expected	8	None	add
266	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))	  	compilable	  [FE]  CompressorException  	8	2	add
267	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))	  	compilable	  [FE]  CompressorException  	8	2	add
268	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {	  	non-compiled	[CE]  'catch'  without  'try'	8	None	add
269	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  Gzip  [CE]  '('  or  '['  expected  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  Gzip  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  Gzip	  	non-compiled	[CE]  '('  or  '['  expected	8	None	add
270	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureL  [CE]  ')'  expected  [FE]                CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureL  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureL	  	non-compiled	[CE]  ')'  expected	8	None	add
271	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  [CE]  <identifier>  expected  [FE]                  CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new	  	non-compiled	[CE]  <identifier>  expected	8	None	add
272	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	143	None	replace
273	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	143	None	replace
274	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.read());  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.read());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.read());	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int)	49	None	replace
275	[BUG]  [BUGGY]  InputStream  in  =  this.in.read();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  this.in.read();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  this.in.read();	  InputStream    in    =    in.read();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	215	None	replace
276	[BUG]  [BUGGY]  InputStream  in  =  IOUtils.readFully(signature,  signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  IOUtils.readFully(signature,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  IOUtils.readFully(signature,  signatureLength);	  InputStream    in    =    in.read();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	215	None	replace
277	[BUG]  [BUGGY]  InputStream  in  =  in.readInputStream();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  in.readInputStream();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readInputStream();	  InputStream    in    =    in.read();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	215	None	replace
278	[BUG]  [BUGGY]  InputStream  in  =  IOUtils.readFully(in,  signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  IOUtils.readFully(in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  IOUtils.readFully(in,  signatureLength);	  InputStream    in    =    in.read();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	215	None	replace
279	[BUG]  [BUGGY]  InputStream  in  =  IOUtils.readFully(signature);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  IOUtils.readFully(signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  IOUtils.readFully(signature);	  InputStream    in    =    in.read();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	215	None	replace
280	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(SignatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  SignatureLength	86	None	replace
281	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(SignatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  SignatureLength	86	None	replace
282	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureL  [CE]  ')'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureL  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureL	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(SignatureLength);    }    	non-compiled	[CE]  ')'  expected	86	None	replace
283	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength  [CE]  ')'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(SignatureLength);    }    	non-compiled	[CE]  ')'  expected	86	None	replace
284	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  [CE]  'catch'  without  'try'  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(SignatureLength);    }    	non-compiled	[CE]  'catch'  without  'try'	86	None	replace
285	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	135	None	replace
286	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	135	None	replace
287	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	135	None	replace
288	[BUG]  [BUGGY]  nisipLength  =  GzipCompressorInputStream.matches(signature,  signatureLength);  [CE]  cannot  find  symbol  nisipLength  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisipLength  =  GzipCompressorInputStream.matches(signature,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisipLength  =  GzipCompressorInputStream.matches(signature,  signatureLength);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  nisipLength	189	None	replace
289	[BUG]  [BUGGY]  nisipLength  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  in.mark(signatureLength);  [CE]  cannot  find  symbol  nisipLength  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisipLength  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  in.mark(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisipLength  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  in.mark(signatureLength);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  nisipLength	189	None	replace
290	[BUG]  [BUGGY]  nisipLength  =  GzipCompressorInputStream.matches(signature,  signatureLength)&&  in.mark(signatureLength);  [CE]  cannot  find  symbol  nisipLength  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisipLength  =  GzipCompressorInputStream.matches(signature,  signatureLength)&&  in.mark(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisipLength  =  GzipCompressorInputStream.matches(signature,  signatureLength)&&  in.mark(signatureLength);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  nisipLength	189	None	replace
291	[BUG]  [BUGGY]  nisipLength  =  GzipCompressorInputStream.matches(signature,  signatureLength));  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisipLength  =  GzipCompressorInputStream.matches(signature,  signatureLength));  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisipLength  =  GzipCompressorInputStream.matches(signature,  signatureLength));	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	189	None	replace
292	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.reset();        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	compilable	  [FE]  CompressorException  	94	2	add
293	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.reset();        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	compilable	  [FE]  CompressorException  	94	2	add
294	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [CE]  not  a  statement  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.reset();        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re	  	non-compiled	[CE]  not  a  statement	94	None	add
295	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  SignatureLength  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.reset();        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	94	None	add
296	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.reset();        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	compilable	  [FE]  CompressorException  	94	2	add
297	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.reset();        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	compilable	  [FE]  CompressorException  	94	2	add
298	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.reset();        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	compilable	  [FE]  CompressorException  	94	2	add
299	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.reset();        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	compilable	  [FE]  CompressorException  	94	2	add
300	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.reset();        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	94	None	add
301	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]                CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.reset();        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	94	None	add
302	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	50	2	add
303	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	50	2	add
304	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.set(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.set(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    in.set(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
305	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.put(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.put(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    in.put(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
306	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	50	None	add
307	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.set(signatureLength);  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.set(signatureLength);  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    in.set(signatureLength);  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
308	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(Signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  Signature  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(Signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    in.mark(signatureLength);  if(GzipCompressorInputStream.matches(Signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  Signature	50	None	add
309	[BUG]  [BUGGY]  ';'  expected  =  IOUtils.readFully(in,  signature);  [CE]  not  a  statement  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ';'  expected  =  IOUtils.readFully(in,  signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	';'  expected  =  IOUtils.readFully(in,  signature);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.re    reset();    }    	non-compiled	[CE]  not  a  statement	142	None	replace
310	[BUG]  [BUGGY]  ';'  expected  =  IOUtils.readFully(in,  signatureLength);  [CE]  not  a  statement  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ';'  expected  =  IOUtils.readFully(in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	';'  expected  =  IOUtils.readFully(in,  signatureLength);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.re    reset();    }    	non-compiled	[CE]  not  a  statement	142	None	replace
311	[BUG]  [BUGGY]  ';'  expected  =  in.mark(signature.length);  [CE]  not  a  statement  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ';'  expected  =  in.mark(signature.length);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	';'  expected  =  in.mark(signature.length);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.re    reset();    }    	non-compiled	[CE]  not  a  statement	142	None	replace
312	[BUG]  [BUGGY]  ';'  expected  =  IOUtils.readFully(in,  signatureLength));  [CE]  not  a  statement  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ';'  expected  =  IOUtils.readFully(in,  signatureLength));  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	';'  expected  =  IOUtils.readFully(in,  signatureLength));	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.re    reset();    }    	non-compiled	[CE]  not  a  statement	142	None	replace
313	[BUG]  [BUGGY]  ';'  expected  =  IOUtils.readFully(in,  signatureLength),  in.mark(signature.length);  [CE]  not  a  statement  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ';'  expected  =  IOUtils.readFully(in,  signatureLength),  in.mark(signature.length);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	';'  expected  =  IOUtils.readFully(in,  signatureLength),  in.mark(signature.length);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.re    reset();    }    	non-compiled	[CE]  not  a  statement	142	None	replace
314	[BUG]  [BUGGY]  ';'  expected  =  in.mark(signatureLength);  [CE]  not  a  statement  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ';'  expected  =  in.mark(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	';'  expected  =  in.mark(signatureLength);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.re    reset();    }    	non-compiled	[CE]  not  a  statement	142	None	replace
315	[BUG]  [BUGGY]  ';'  expected  =  IOUtils.readFully(in,  signatureLength)-  in.mark(signature.length);  [CE]  not  a  statement  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ';'  expected  =  IOUtils.readFully(in,  signatureLength)-  in.mark(signature.length);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	';'  expected  =  IOUtils.readFully(in,  signatureLength)-  in.mark(signature.length);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.re    reset();    }    	non-compiled	[CE]  not  a  statement	142	None	replace
316	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signature.length);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signature.length);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	51	2	replace
317	[BUG]  [BUGGY]  in.mark(signature.length);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signature.length);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signature.length);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	51	2	replace
318	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	51	2	replace
319	[BUG]  [BUGGY]  in.mark(signatureLength);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	51	2	replace
320	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	51	None	replace
321	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	51	2	replace
322	[BUG]  [BUGGY]  in.mark(signatureLength);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	51	2	replace
323	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signature.length);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signature.length);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	51	2	replace
324	[BUG]  [BUGGY]  in.mark(signature.length);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signature.length);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signature.length);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	51	2	replace
325	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength);  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	51	2	replace
326	[BUG]  [BUGGY]  in.mark(signatureLength);  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	51	2	replace
327	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [CE]  final  parameter  in  may  not  be  assigned  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    InputStream    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  final  parameter  in  may  not  be  assigned	122	None	replace
328	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength);	  InputStream    in    =    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	28	None	replace
329	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature.length,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature.length,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signature.length,  decompressConcatenated);	  InputStream    in    =    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	28	None	replace
330	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  decompressConcatenated);	  InputStream    in    =    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	28	None	replace
331	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  signatureLength);	  InputStream    in    =    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	28	None	replace
332	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  SignatureLength	107	None	replace
333	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  illegal  start  of  expression  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
334	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	161	None	replace
335	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	161	None	replace
336	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	161	None	replace
337	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	161	None	replace
338	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	161	None	replace
339	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  illegal  start  of  expression  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompress    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
340	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompress    	non-compiled	[CE]  ')'  expected	131	None	replace
341	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompress    	non-compiled	[CE]  ')'  expected	131	None	replace
342	[BUG]  [BUGGY]  if(FramedSnappyCompressor.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressor.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressor.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompress    	non-compiled	[CE]  ')'  expected	131	None	replace
343	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  not  a  statement  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompress    	non-compiled	[CE]  not  a  statement	131	None	replace
344	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompress    	non-compiled	[CE]  ')'  expected	131	None	replace
345	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	178	2	replace
346	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	178	2	replace
347	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	178	None	replace
348	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	178	None	replace
349	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	178	2	replace
350	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	178	2	replace
351	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
352	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  0,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,int,int)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  0,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  0,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,int,int)	182	None	replace
353	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  0);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  0);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean,int)	182	None	replace
354	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  in.length,  0);  [CE]  cannot  find  symbol  length  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  in.length,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  in.length,  0);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    0);    	non-compiled	[CE]  cannot  find  symbol  length	182	None	replace
355	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  4);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,int)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  4);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  4);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,int)	182	None	replace
356	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    pendingEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	compilable	  [FE]  NullPointerException  	125	2	replace
357	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    pendingEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	compilable	  [FE]  NullPointerException  	125	2	replace
358	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(signature,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(byte[],Boolean)  [FE]                        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(signature,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(signature,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    pendingEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(byte[],Boolean)	125	None	replace
359	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(Boolean)  [FE]                          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    pendingEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(Boolean)	125	None	replace
360	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length  -  1);  [CE]  cannot  find  symbol  length  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length  -  1);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length  -  1);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.length);    	non-compiled	[CE]  cannot  find  symbol  length	14	None	replace
361	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length  +  1);  [CE]  cannot  find  symbol  length  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length  +  1);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length  +  1);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.length);    	non-compiled	[CE]  cannot  find  symbol  length	14	None	replace
362	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length  -  2);  [CE]  cannot  find  symbol  length  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length  -  2);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length  -  2);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.length);    	non-compiled	[CE]  cannot  find  symbol  length	14	None	replace
363	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  byte.length);  [CE]  class  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  byte.length);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  byte.length);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.length);    	non-compiled	[CE]  class  expected	14	None	replace
364	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  CompressorException  	57	2	add
365	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  CompressorException  	57	2	add
366	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	57	None	add
367	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  ';'  expected	57	None	add
368	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(SignatureLength);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(SignatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(SignatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	57	None	add
369	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  [CE]  'catch'  without  'try'  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {	  	non-compiled	[CE]  'catch'  without  'try'	57	None	add
370	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompress  [CE]  illegal  start  of  expression  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompress	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
371	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
372	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream  [CE]  illegal  start  of  expression  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
373	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(  [CE]  illegal  start  of  expression  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
374	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorIn  [CE]  illegal  start  of  expression  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorIn  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorIn	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
375	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(Signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	65	2	replace
376	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(Signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	65	2	replace
377	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(Signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	65	2	replace
378	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(Signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	65	2	replace
379	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(Signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	65	2	replace
380	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(Signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	65	2	replace
381	[BUG]  [BUGGY]  if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [CE]  cannot  find  symbol  BZip2Compressor  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(Signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  BZip2Compressor	65	None	replace
382	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	172	None	replace
383	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	172	None	replace
384	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompress))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  decompress  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompress))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompress))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  decompress	172	None	replace
385	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  in.mark(signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	172	None	replace
386	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	156	None	replace
387	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GuvernedSnappyCompressorInputStream(in);	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	156	None	replace
388	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GuvernedSnappyCompressorInputStream(in);	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	156	None	replace
389	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GuvernedSnappyCompressorInputStream(in);	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	156	None	replace
390	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in,  decompressConcatenated);	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	156	None	replace
391	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [CE]  ';'  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	156	None	replace
392	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
393	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
394	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
395	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  -1))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  -1))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  -1))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	157	None	replace
396	[BUG]  [BUGGY]  If(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  If(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	88	None	replace
397	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  If(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	88	None	replace
398	[BUG]  [BUGGY]  If(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }	  If(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	88	None	replace
399	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  If(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	88	None	replace
400	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  signature);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  signature);	  InputStream    in    =    new    GzipCompressorInputStream(signature,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	76	None	replace
401	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature,  DEFLATE);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signature,  DEFLATE);	  InputStream    in    =    new    GzipCompressorInputStream(signature,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	76	None	replace
402	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  0))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
403	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
404	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
405	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  0,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,int,int)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  0,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  0,  signatureLength);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,int,int)	33	None	replace
406	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  4);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  4);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  4);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,int)	33	None	replace
407	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  in.length);  [CE]  cannot  find  symbol  length  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  in.length);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  in.length);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated,    0);    	non-compiled	[CE]  cannot  find  symbol  length	33	None	replace
408	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  0,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int,boolean)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  0,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  0,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int,boolean)	33	None	replace
409	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  SNAPPY_FRAMED);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  SNAPPY_FRAMED);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  SNAPPY_FRAMED);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)	46	None	replace
410	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  PACK200);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  PACK200);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  PACK200);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)	46	None	replace
411	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	146	2	add
412	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	146	2	add
413	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  If(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  If(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  ';'  expected	146	None	add
414	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(Signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  Signature  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(Signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(Signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  Signature	146	None	add
415	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  -SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  -SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  -SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	146	None	add
416	[BUG]  [BUGGY]  InputStream  in  =  this.in.readInput();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  this.in.readInput();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  this.in.readInput();	  InputStream    in    =    in.readInput();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	73	None	replace
417	[BUG]  [BUGGY]  InputStream  in  =  IOUtils.readInputStream(in,  signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  IOUtils.readInputStream(in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  IOUtils.readInputStream(in,  signatureLength);	  InputStream    in    =    in.readInput();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	73	None	replace
418	[BUG]  [BUGGY]  InputStream  in  =  JOUtils.readInputStream(in,  signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  JOUtils.readInputStream(in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  JOUtils.readInputStream(in,  signatureLength);	  InputStream    in    =    in.readInput();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	73	None	replace
419	[BUG]  [BUGGY]  InputStream  in  =  IOUtils.readInputStream(in);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  IOUtils.readInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  IOUtils.readInputStream(in);	  InputStream    in    =    in.readInput();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	73	None	replace
420	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	137	None	replace
421	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	137	None	replace
422	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  0);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  0);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  0);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	137	None	replace
423	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	137	None	replace
424	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	137	None	replace
425	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }	  MutableCompressorInputStream.matches(signature,    decompressUntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	190	None	replace
426	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  SNAPPY_FRAMED);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  SNAPPY_FRAMED);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  SNAPPY_FRAMED);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    e);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)	41	None	replace
427	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP2,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP2,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP2,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    e);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)	41	None	replace
428	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  DELETE);  [CE]  cannot  find  symbol  DELETE  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  DELETE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  DELETE);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    e);    	non-compiled	[CE]  cannot  find  symbol  DELETE	41	None	replace
429	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,boolean)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,boolean)	48	None	replace
430	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,Boolean)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,Boolean)	48	None	replace
431	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	196	None	replace
432	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  illegal  start  of  expression  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
433	[BUG]  [BUGGY]  in.mark(signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  not  a  statement  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  not  a  statement	196	None	replace
434	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	196	None	replace
435	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  not  a  statement  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  not  a  statement	196	None	replace
436	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	196	None	replace
437	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	compilable	  [FE]  NullPointerException  	114	2	add
438	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	compilable	  [FE]  NullPointerException  	114	2	add
439	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	114	None	add
440	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	114	None	add
441	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESS_EOF);  }  [CE]  cannot  find  symbol  DECOMPRESS_EOF  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESS_EOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESS_EOF);  }	  	non-compiled	[CE]  cannot  find  symbol  DECOMPRESS_EOF	114	None	add
442	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	3	2	add
443	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	3	2	add
444	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	3	None	add
445	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  ';'  expected	3	None	add
446	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	3	None	add
447	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(Signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  Signature  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(Signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(Signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  Signature	3	None	add
448	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  illegal  start  of  expression  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
449	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  illegal  start  of  expression  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
450	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean,int)	183	None	replace
451	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  decompressConcatenated,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,boolean,int)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  decompressConcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  decompressConcatenated,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,boolean,int)	183	None	replace
452	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in,  decompressUntilEOF,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,InputStream,Boolean,int)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in,  decompressUntilEOF,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in,  decompressUntilEOF,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,InputStream,Boolean,int)	183	None	replace
453	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  in,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,InputStream,int)  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  in,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,InputStream,int)	183	None	replace
454	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  in.length);  [CE]  cannot  find  symbol  length  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  in.length);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  in.length);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol  length	183	None	replace
455	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  SignatureLength	223	None	replace
456	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	223	None	replace
457	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  SignatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	223	None	replace
458	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  while(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	while(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	223	2	replace
459	[BUG]  [BUGGY]  while(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  while(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	while(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	223	2	replace
460	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	223	2	replace
461	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	223	2	replace
462	[BUG]  [BUGGY]  nisip  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisip  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisip  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	223	None	replace
463	[BUG]  [BUGGY]  ||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  illegal  start  of  expression  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
464	[BUG]  [BUGGY]  ||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
465	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	92	None	replace
466	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	92	None	replace
467	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  BZip2CompressorInputStream.matches(signature,  UntilEOF));  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  BZip2CompressorInputStream.matches(signature,  UntilEOF));  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  BZip2CompressorInputStream.matches(signature,  UntilEOF));	  if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	92	None	replace
468	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	92	None	replace
469	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  	compilable	  [FE]  NullPointerException  	116	2	add
470	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  	compilable	  [FE]  NullPointerException  	116	2	add
471	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	116	None	add
472	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  	compilable	  [FE]  NullPointerException  	116	2	add
473	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  	compilable	  [FE]  NullPointerException  	116	2	add
474	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  	compilable	  [FE]  NullPointerException  	116	2	add
475	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  	compilable	  [FE]  NullPointerException  	116	2	add
476	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]            NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	116	None	add
477	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  	non-compiled	[CE]  ';'  expected	116	None	add
478	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]                NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	116	None	add
479	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
480	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
481	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [CE]  illegal  start  of  expression  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
482	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  [CE]  illegal  start  of  expression  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
483	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	195	None	replace
484	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  pending)  {  return  new  MutableCompressorInputStream(in,  pending);  }  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  pending)  {  return  new  MutableCompressorInputStream(in,  pending);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  pending)  {  return  new  MutableCompressorInputStream(in,  pending);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	195	None	replace
485	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	159	None	replace
486	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	159	None	replace
487	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	194	None	replace
488	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	194	None	replace
489	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	194	None	replace
490	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	194	None	replace
491	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	194	None	replace
492	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);  }  [CE]  ';'  expected  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	194	None	replace
493	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    pending))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  ';'  expected	171	None	replace
494	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    pending))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  ';'  expected	171	None	replace
495	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  null,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,<null>,boolean)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  null,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  null,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,<null>,boolean)	105	None	replace
496	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  IOUtils.readFully(signature,  signatureLength));  [CE]  no  suitable  method  found  for  readFully(byte[],int)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  IOUtils.readFully(signature,  signatureLength));  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  IOUtils.readFully(signature,  signatureLength));	  return    new    GzipCompressorInputStream(in,    null);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(byte[],int)	105	None	replace
497	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  null,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,<null>,int)  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  null,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  null,  signatureLength);	  return    new    GzipCompressorInputStream(in,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,<null>,int)	105	None	replace
498	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  IOUtils.readFully(signature,  signatureLength),  null);  [CE]  no  suitable  method  found  for  readFully(byte[],int)  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  IOUtils.readFully(signature,  signatureLength),  null);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  IOUtils.readFully(signature,  signatureLength),  null);	  return    new    GzipCompressorInputStream(in,    null);    	non-compiled	[CE]  no  suitable  method  found  for  readFully(byte[],int)	105	None	replace
499	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  null,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,<null>,String)  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  null,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  null,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,<null>,String)	105	None	replace
500	[BUG]  [BUGGY]  nisip  =  IOUtils.readFully(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisip  =  IOUtils.readFully(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisip  =  IOUtils.readFully(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
501	[BUG]  [BUGGY]  nisip  =  IOUtils.readFully(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisip  =  IOUtils.readFully(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisip  =  IOUtils.readFully(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
502	[BUG]  [BUGGY]  nisip  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  decompressConcatenated  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisip  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  decompressConcatenated  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisip  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  decompressConcatenated  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
503	[BUG]  [BUGGY]  nisip  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  decompressConcatenated  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisip  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  decompressConcatenated  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisip  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  decompressConcatenated  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
504	[BUG]  [BUGGY]  nisip  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  decompressConcatenated  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  ';'  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisip  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  decompressConcatenated  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisip  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  decompressConcatenated  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
505	[BUG]  [BUGGY]  nisip  =  IOUtils.readFully(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength)]  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  ';'  expected  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisip  =  IOUtils.readFully(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength)]  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisip  =  IOUtils.readFully(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength)]  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
506	[BUG]  [BUGGY]  nisip  =  IOUtils.readFully(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisip  =  IOUtils.readFully(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisip  =  IOUtils.readFully(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
507	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	169	None	replace
508	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	169	None	replace
509	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }	  GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	169	None	replace
510	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	169	None	replace
511	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	169	None	replace
512	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(in,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GzipCompressorInputStream.matches(in,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(in,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	169	None	replace
513	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(signature,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(byte[],Boolean)  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(signature,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(signature,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(signature,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(byte[],Boolean)	200	None	replace
514	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  signature,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,byte[],Boolean)  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  signature,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(decompressConcatenated,  signature,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(signature,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,byte[],Boolean)	200	None	replace
515	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	new  GzipCompressorInputStream(in,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(signature,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	200	2	replace
516	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(signature,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	200	2	replace
517	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  NullPointerException  	112	2	add
518	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  NullPointerException  	112	2	add
519	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  NullPointerException  	112	2	add
520	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  NullPointerException  	112	2	add
521	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	112	None	add
522	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  NullPointerException  	112	2	add
523	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  NullPointerException  	112	2	add
524	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]            NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	112	None	add
525	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  ';'  expected	112	None	add
526	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.mark(signatureLength);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]                NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	112	None	add
527	[BUG]  [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	140	None	replace
528	[BUG]  [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	140	None	replace
529	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  decompressConcatenated);  [CE]  cannot  find  symbol  BZIP  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    BZIP2);    	non-compiled	[CE]  cannot  find  symbol  BZIP	47	None	replace
530	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,boolean)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    BZIP2);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,boolean)	47	None	replace
531	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  BZIP2);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,String)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  BZIP2);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  BZIP2);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    BZIP2);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,String)	47	None	replace
532	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  SNAPPY_RAW);  [CE]  cannot  find  symbol  BZIP  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    BZIP2);    	non-compiled	[CE]  cannot  find  symbol  BZIP	47	None	replace
533	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  DEFLATE);  [CE]  cannot  find  symbol  BZIP  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    BZIP2);    	non-compiled	[CE]  cannot  find  symbol  BZIP	47	None	replace
534	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  BZIP2);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  BZIP2);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  BZIP2);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    BZIP2);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)	47	None	replace
535	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	compilable	  [FE]  CompressorException  	120	2	replace
536	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  CompressorException  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	compilable	  [FE]  CompressorException  	120	2	replace
537	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  0))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  0))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	compilable	  [FE]  CompressorException  	120	2	replace
538	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  0))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  [FE]  CompressorException  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  0))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  0))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	compilable	  [FE]  CompressorException  	120	2	replace
539	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	120	None	replace
540	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]                  NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	120	None	replace
541	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(signature,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(signature,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(signature,  decompressConcatenated);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.create(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
542	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  signatureLength);  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  signatureLength);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.create(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
543	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  e);  [CE]  cannot  find  symbol  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  e);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  e);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.create(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
544	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(signatureLength,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(signatureLength,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(signatureLength,  decompressConcatenated);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.create(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
545	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  0);  [CE]  cannot  find  symbol  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  0);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.create(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
546	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  DEFLATE);  [CE]  cannot  find  symbol  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  DEFLATE);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.create(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
547	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressUntilEOF);  [CE]  cannot  find  symbol  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressUntilEOF);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.create(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
548	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  signatureLength);	  InputStream    in    =    new    GzipCompressorInputStream(signatureLength);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	68	None	replace
549	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated);	  InputStream    in    =    new    GzipCompressorInputStream(signatureLength);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	68	None	replace
550	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
551	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
552	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
553	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
554	[BUG]  [BUGGY]  ||  in.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  in.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  in.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
555	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
556	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
557	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in,  decompressUntilEOF);  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in,  decompressUntilEOF);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
558	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
559	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
560	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  GuvernedSnappyCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  GuvernedSnappyCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  GuvernedSnappyCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
561	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GuvernedSnappyCompressorInputStream(in,  0);  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GuvernedSnappyCompressorInputStream(in,  0);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GuvernedSnappyCompressorInputStream(in,  0);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
562	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  0,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,int,int)  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  0,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  0,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,int,int)	18	None	replace
563	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  in);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,InputStream)  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  in);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,InputStream)	18	None	replace
564	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  signatureLength,  e);  [CE]  cannot  find  symbol  e  [FE]                              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  signatureLength,  e);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  signatureLength,  e);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol  e	18	None	replace
565	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  0);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,int)  [FE]                                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  0);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,int)	18	None	replace
566	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  signatureLength,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,int,String)  [FE]                                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  signatureLength,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  signatureLength,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,int,String)	18	None	replace
567	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length,  signatureLength);  [CE]  cannot  find  symbol  length  [FE]                                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol  length	18	None	replace
568	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
569	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	27	None	replace
570	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	27	None	replace
571	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(signature,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(signature,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(signature,  decompressConcatenated);	  MutableCompressorInputStream    in    =    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
572	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  decompressUntilEOF);  [CE]  cannot  find  symbol  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  decompressUntilEOF);	  MutableCompressorInputStream    in    =    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
573	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(signatureLength,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(signatureLength,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(signatureLength,  decompressConcatenated);	  MutableCompressorInputStream    in    =    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
574	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(decompressConcatenated,  signatureLength);  [CE]  cannot  find  symbol  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(decompressConcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(decompressConcatenated,  signatureLength);	  MutableCompressorInputStream    in    =    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
575	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(signature.length,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(signature.length,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(signature.length,  decompressConcatenated);	  MutableCompressorInputStream    in    =    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
576	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(decompressConcatenated,  in);  [CE]  cannot  find  symbol  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(decompressConcatenated,  in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(decompressConcatenated,  in);	  MutableCompressorInputStream    in    =    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
577	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(decompressConcatenated,  signature);  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(decompressConcatenated,  signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(decompressConcatenated,  signature);	  MutableCompressorInputStream    in    =    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
578	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  illegal  start  of  expression  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
579	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	164	None	replace
580	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	164	None	replace
581	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	164	None	replace
582	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	164	None	replace
583	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	164	None	replace
584	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  in.length);  [CE]  cannot  find  symbol  length  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  in.length);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  in.length);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    0,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol  length	16	None	replace
585	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength,  e);  [CE]  cannot  find  symbol  e  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength,  e);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength,  e);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    0,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol  e	16	None	replace
586	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,int,Boolean)  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    0,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,int,Boolean)	16	None	replace
587	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length,  0,  signatureLength);  [CE]  cannot  find  symbol  length  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length,  0,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length,  0,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    0,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol  length	16	None	replace
588	[BUG]  [BUGGY]  ||  in.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  in.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  in.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
589	[BUG]  [BUGGY]  ||  GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
590	[BUG]  [BUGGY]  ||  GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
591	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in);  }  [CE]  cannot  find  symbol  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
592	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	155	None	replace
593	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	155	None	replace
594	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	155	None	replace
595	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	155	None	replace
596	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	155	None	replace
597	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  GzipCompressorInputStream))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  GzipCompressorInputStream))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  GzipCompressorInputStream))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	155	None	replace
598	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZIPCompressorInputStream(in);  }  [CE]  cannot  find  symbol  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZIPCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZIPCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GZIPCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
599	[BUG]  [BUGGY]  if(GZIPCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZIPCompressorInputStream(in);  }  [CE]  cannot  find  symbol  GZIPCompressorInputStream  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZIPCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZIPCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZIPCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZIPCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GZIPCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  GZIPCompressorInputStream	179	None	replace
600	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GZIPCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GZIPCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GZIPCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GZIPCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	179	None	replace
601	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GZIPCompressorInputStream(in);  }  [CE]  cannot  find  symbol  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GZIPCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GZIPCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GZIPCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
602	[BUG]  [BUGGY]  if(GZIPCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GZIPCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZIPCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GZIPCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZIPCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GZIPCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GZIPCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	179	None	replace
603	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	  	compilable	  [FE]  CompressorException  	100	2	add
604	[BUG]  [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	  	compilable	  [FE]  CompressorException  	100	2	add
605	[BUG]  [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	100	None	add
606	[BUG]  [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	  	non-compiled	[CE]  ';'  expected	100	None	add
607	[BUG]  [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  [CE]  'catch'  without  'try'  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {	  	non-compiled	[CE]  'catch'  without  'try'	100	None	add
608	[BUG]  [BUGGY]  InputStream  in  =  new  InputStream(in,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  InputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  InputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	82	None	replace
609	[BUG]  [BUGGY]  nisip  =  IOUtils.readFully(in,  signature);  [CE]  cannot  find  symbol  nisip  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisip  =  IOUtils.readFully(in,  signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisip  =  IOUtils.readFully(in,  signature);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  nisip	82	None	replace
610	[BUG]  [BUGGY]  nisip  =  IOUtils.readFully(in,  signatureLength);  [CE]  cannot  find  symbol  nisip  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisip  =  IOUtils.readFully(in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisip  =  IOUtils.readFully(in,  signatureLength);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  nisip	82	None	replace
611	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
612	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	115	None	replace
613	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
614	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	compilable	  [FE]  CompressorException  	115	2	replace
615	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  CompressorException  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	compilable	  [FE]  CompressorException  	115	2	replace
616	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]            NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	115	None	replace
617	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]              NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	115	None	replace
618	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int)  [FE]                NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  0);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int)	115	None	replace
619	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GZipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	184	None	replace
620	[BUG]  [BUGGY]  If(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GZipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	184	None	replace
621	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GZipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	184	None	replace
622	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GZipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	184	None	replace
623	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  pending  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GZipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  pending	184	None	replace
624	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.mark(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength);    in.mark(signatureLength);	  	compilable	  [FE]  CompressorException  	52	2	add
625	[BUG]  [BUGGY]  in.mark(signatureLength);  in.mark(signatureLength);  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.mark(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.mark(signatureLength);	  	compilable	  [FE]  CompressorException  	52	2	add
626	[BUG]  [BUGGY]  in.mark(signatureLength);  in.set(signatureLength);  [CE]  cannot  find  symbol  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.set(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.set(signatureLength);	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
627	[BUG]  [BUGGY]  in.mark(signatureLength);  in.set(signatureLength,  GzipCompressorInputStream.getSize());  [CE]  cannot  find  symbol  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.set(signatureLength,  GzipCompressorInputStream.getSize());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.set(signatureLength,  GzipCompressorInputStream.getSize());	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
628	[BUG]  [BUGGY]  in.mark(signatureLength);  in.set(signatureLength,  GzipCompressorInputStream.DEFLATE);  [CE]  cannot  find  symbol  DEFLATE  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.set(signatureLength,  GzipCompressorInputStream.DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.set(signatureLength,  GzipCompressorInputStream.DEFLATE);	  	non-compiled	[CE]  cannot  find  symbol  DEFLATE	52	None	add
629	[BUG]  [BUGGY]  in.mark(signatureLength);  in.set(signatureLength,  GzipCompressorInputStream.getVersion());  [CE]  cannot  find  symbol  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.set(signatureLength,  GzipCompressorInputStream.getVersion());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.set(signatureLength,  GzipCompressorInputStream.getVersion());	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
630	[BUG]  [BUGGY]  in.mark(signatureLength);  in.set(signatureLength,  GzipCompressorInputStream.DEFAULT_COMPRESSION);  [CE]  cannot  find  symbol  DEFAULT_COMPRESSION  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.set(signatureLength,  GzipCompressorInputStream.DEFAULT_COMPRESSION);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.set(signatureLength,  GzipCompressorInputStream.DEFAULT_COMPRESSION);	  	non-compiled	[CE]  cannot  find  symbol  DEFAULT_COMPRESSION	52	None	add
631	[BUG]  [BUGGY]  in.mark(signatureLength);  in.set(signatureLength,  decompressUntilEOF);  [CE]  cannot  find  symbol  [FE]                CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.set(signatureLength,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.set(signatureLength,  decompressUntilEOF);	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
632	[BUG]  [BUGGY]  in.mark(signatureLength);  in.set(signatureLength,  GzipCompressorInputStream.DEFAULT);  [CE]  cannot  find  symbol  DEFAULT  [FE]                  CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.set(signatureLength,  GzipCompressorInputStream.DEFAULT);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.set(signatureLength,  GzipCompressorInputStream.DEFAULT);	  	non-compiled	[CE]  cannot  find  symbol  DEFAULT	52	None	add
633	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  illegal  start  of  expression  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
634	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	160	None	replace
635	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	160	None	replace
636	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	160	None	replace
637	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	160	None	replace
638	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	          if(GzipCompressorInputStream.matches(signature,    null))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	209	None	replace
639	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  null);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  null);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  null);	          if(GzipCompressorInputStream.matches(signature,    null))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	209	None	replace
640	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    null))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	209	None	replace
641	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  	compilable	  [FE]  CompressorException  	59	2	add
642	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  	compilable	  [FE]  CompressorException  	59	2	add
643	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  SignatureLength  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	59	None	add
644	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  	non-compiled	[CE]  ';'  expected	59	None	add
645	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.re  [CE]  not  a  statement  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.re  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.re	  	non-compiled	[CE]  not  a  statement	59	None	add
646	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	205	None	replace
647	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	205	None	replace
648	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	205	None	replace
649	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	205	None	replace
650	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  1);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  1);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  1);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,int)	34	None	replace
651	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	185	2	replace
652	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	185	2	replace
653	[BUG]  [BUGGY]  InputStream  in  =  BZip2CompressorInputStream.matches(signature,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  BZip2CompressorInputStream.matches(signature,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  BZip2CompressorInputStream.matches(signature,  decompressConcatenated);	  if(BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	185	None	replace
654	[BUG]  [BUGGY]  InputStream  in  =  BZip2CompressorInputStream.matches(signature,  UntilEOF);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  BZip2CompressorInputStream.matches(signature,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  BZip2CompressorInputStream.matches(signature,  UntilEOF);	  if(BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	185	None	replace
655	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	212	None	replace
656	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	212	None	replace
657	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	212	None	replace
658	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	212	None	replace
659	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	212	None	replace
660	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	212	None	replace
661	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)	222	None	replace
662	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,boolean)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,boolean)	222	None	replace
663	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,int)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  signatureLength);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,int)	222	None	replace
664	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  PACK200,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  PACK200,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  PACK200,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)	222	None	replace
665	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)	222	None	replace
666	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  illegal  start  of  expression  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
667	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	130	None	replace
668	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	130	None	replace
669	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	130	None	replace
670	[BUG]  [BUGGY]  CompositeCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  not  a  statement  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  CompositeCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	CompositeCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
671	[BUG]  [BUGGY]  CompositeCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  not  a  statement  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  CompositeCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	CompositeCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
672	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  not  a  statement  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
673	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  [CE]  not  a  statement  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
674	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  not  a  statement  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
675	[BUG]  [BUGGY]  in.mark(signatureLength,  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength,  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength,  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(in,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  ';'  expected	174	None	replace
676	[BUG]  [BUGGY]  in.mark(signatureLength,  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength,  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength,  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(in,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  ';'  expected	174	None	replace
677	[BUG]  [BUGGY]  in.mark(signatureLength,  GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength,  GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength,  GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(in,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  ';'  expected	174	None	replace
678	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [CE]  not  a  statement  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re	  if(GzipCompressorInputStream.matches(in,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  not  a  statement	174	None	replace
679	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	  	compilable	  [FE]  CompressorException  	210	2	add
680	[BUG]  [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	  	compilable	  [FE]  CompressorException  	210	2	add
681	[BUG]  [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [CE]  cannot  find  symbol  SignatureLength  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	210	None	add
682	[BUG]  [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	  	non-compiled	[CE]  ';'  expected	210	None	add
683	[BUG]  [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  [CE]  'catch'  without  'try'  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {	  	non-compiled	[CE]  'catch'  without  'try'	210	None	add
684	[BUG]  [BUGGY]  if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  BZip2Compressor  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  BZip2Compressor	85	None	replace
685	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
686	[BUG]  [BUGGY]  ||  in.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  in.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  in.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
687	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  0))  {  return  new  GzipCompressorInputStream(in,  0);  [CE]  illegal  start  of  expression  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  0))  {  return  new  GzipCompressorInputStream(in,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  0))  {  return  new  GzipCompressorInputStream(in,  0);	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
688	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	20	2	add
689	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	20	2	add
690	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  	non-compiled	[CE]  ')'  expected	20	None	add
691	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  	non-compiled	[CE]  ')'  expected	20	None	add
692	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  	non-compiled	[CE]  ')'  expected	20	None	add
693	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress	  	non-compiled	[CE]  ')'  expected	20	None	add
694	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	20	None	add
695	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  illegal  start  of  expression  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
696	[BUG]  [BUGGY]  &&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  illegal  start  of  expression  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  &&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
697	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenation))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  illegal  start  of  expression  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenation))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressConcatenation))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
698	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcaten))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  illegal  start  of  expression  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcaten))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressConcaten))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
699	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	202	None	replace
700	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	197	None	replace
701	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	197	None	replace
702	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	197	None	replace
703	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ')'  expected	197	None	replace
704	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	21	None	replace
705	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	21	None	replace
706	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	136	None	replace
707	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	136	None	replace
708	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  -1))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  -1))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  -1))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	136	None	replace
709	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP,  DEFLATE);  [CE]  cannot  find  symbol  BZIP  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    BZIP2);    	non-compiled	[CE]  cannot  find  symbol  BZIP	38	None	replace
710	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  BZIP2);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,String)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  BZIP2);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  BZIP2);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    BZIP2);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,String)	38	None	replace
711	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP1,  DEFLATE);  [CE]  cannot  find  symbol  BZIP1  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP1,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP1,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    BZIP2);    	non-compiled	[CE]  cannot  find  symbol  BZIP1	38	None	replace
712	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  BZIP2,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  BZIP2,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  BZIP2,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    BZIP2);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean)	38	None	replace
713	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	54	2	add
714	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	54	2	add
715	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  If(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  If(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  ';'  expected	54	None	add
716	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(Signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  Signature  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(Signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(Signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  Signature	54	None	add
717	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
718	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0.0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0.0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0.0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
719	[BUG]  [BUGGY]  ||  in.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  illegal  start  of  expression  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  in.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  in.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
720	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	187	None	replace
721	[BUG]  [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	187	None	replace
722	[BUG]  [BUGGY]  if(FramedCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	187	None	replace
723	[BUG]  [BUGGY]  InputStream  in  =  in.readUTF();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  in.readUTF();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readUTF();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	75	None	replace
724	[BUG]  [BUGGY]  InputStream  in  =  this.in.readInt();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  this.in.readInt();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  this.in.readInt();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	75	None	replace
725	[BUG]  [BUGGY]  InputStream  in  =  in.readFully();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  in.readFully();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readFully();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	75	None	replace
726	[BUG]  [BUGGY]  InputStream  in  =  in.readInt()  -  1;  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  in.readInt()  -  1;  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readInt()  -  1;	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	75	None	replace
727	[BUG]  [BUGGY]  InputStream  in  =  IOUtils.readInt();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  IOUtils.readInt();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  IOUtils.readInt();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	75	None	replace
728	[BUG]  [BUGGY]  InputStream  in  =  in.readInt()  &  0xff;  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  in.readInt()  &  0xff;  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readInt()  &  0xff;	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	75	None	replace
729	[BUG]  [BUGGY]  InputStream  in  =  this.in.readIn();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  this.in.readIn();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  this.in.readIn();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	74	None	replace
730	[BUG]  [BUGGY]  InputStream  in  =  IOUtils.readIn(signature,  signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  IOUtils.readIn(signature,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  IOUtils.readIn(signature,  signatureLength);	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	74	None	replace
731	[BUG]  [BUGGY]  InputStream  in  =  in.readIn(),  in.readCharacters();  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  in.readIn(),  in.readCharacters();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readIn(),  in.readCharacters();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  ';'  expected	74	None	replace
732	[BUG]  [BUGGY]  InputStream  in  =  IOUtils.readIn(signature);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  IOUtils.readIn(signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  IOUtils.readIn(signature);	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	74	None	replace
733	[BUG]  [BUGGY]  InputStream  in  =  in.readInput(signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  in.readInput(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readInput(signatureLength);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	113	None	replace
734	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  InputStream    in    =    GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
735	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  InputStream    in    =    GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
736	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  InputStream    in    =    GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
737	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  InputStream    in    =    GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
738	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  InputStream    in    =    GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
739	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  InputStream    in    =    GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
740	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  CompressorException  	81	2	add
741	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  CompressorException  	81	2	add
742	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  [CE]  'catch'  without  'try'  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {	  	non-compiled	[CE]  'catch'  without  'try'	81	None	add
743	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	81	None	add
744	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  CompressorException  	81	2	add
745	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  CompressorException  	81	2	add
746	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	81	None	add
747	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	81	None	add
748	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]                CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	81	None	add
749	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	24	2	replace
750	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	24	2	replace
751	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)	39	None	replace
752	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  PACK200);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,String)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  PACK200);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  PACK200);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,String)	39	None	replace
753	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,int)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,int)	39	None	replace
754	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  PACK200,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean)  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  PACK200,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  PACK200,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean)	39	None	replace
755	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  PACK200);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,String)  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  PACK200);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  PACK200);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,String)	39	None	replace
756	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  DEFLATE);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  DEFLATE);	          if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	208	None	replace
757	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    0.0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	149	None	replace
758	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0.0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	149	None	replace
759	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  0.0);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  0.0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  0.0);	  if(GzipCompressorInputStream.matches(signature,    0.0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	149	None	replace
760	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signatureLength,  0.0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signatureLength,  0.0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signatureLength,  0.0))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0.0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	149	None	replace
761	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0.0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
762	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in,  0,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,InputStream,int,int)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in,  0,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in,  0,  signatureLength);	  return    new    GzipCompressorInputStream(in,    0,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,InputStream,int,int)	102	None	replace
763	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  0,  in.length);  [CE]  cannot  find  symbol  length  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  0,  in.length);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  0,  in.length);	  return    new    GzipCompressorInputStream(in,    0,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol  length	102	None	replace
764	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  0,  signatureLength,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,int,boolean)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  0,  signatureLength,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  0,  signatureLength,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    0,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,int,boolean)	102	None	replace
765	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readLine(),  0,  signatureLength);  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readLine(),  0,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in.readLine(),  0,  signatureLength);	  return    new    GzipCompressorInputStream(in,    0,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
766	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	22	2	add
767	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	22	2	add
768	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  	non-compiled	[CE]  ')'  expected	22	None	add
769	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [CE]  cannot  find  symbol  DECOMPRESSED  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }	  	non-compiled	[CE]  cannot  find  symbol  DECOMPRESSED	22	None	add
770	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompress	  	non-compiled	[CE]  ')'  expected	22	None	add
771	[BUG]  [BUGGY]  InputStream  in  =  getInputStream();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  getInputStream();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  getInputStream();	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	101	None	replace
772	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
773	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
774	[BUG]  [BUGGY]  ||  in.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  in.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  in.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
775	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.mark(signatureLength));  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.mark(signatureLength));  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.mark(signatureLength));  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	218	None	replace
776	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  ')'  expected	218	None	replace
777	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [CE]  not  a  statement  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re	  if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  not  a  statement	218	None	replace
778	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(signature,  decompressUntilEOF);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(signature,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(signature,  decompressUntilEOF);	  InputStream    in    =    new    GzipInputStream(signature,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	87	None	replace
779	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(decompressConcatenated,  signature);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(decompressConcatenated,  signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(decompressConcatenated,  signature);	  InputStream    in    =    new    GzipInputStream(signature,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	87	None	replace
780	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(signature,  DEFLATE);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(signature,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(signature,  DEFLATE);	  InputStream    in    =    new    GzipInputStream(signature,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	87	None	replace
781	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(decompressConcatenated,  signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(decompressConcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(decompressConcatenated,  signatureLength);	  InputStream    in    =    new    GzipInputStream(signature,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	87	None	replace
782	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  not  a  statement  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	204	None	replace
783	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  not  a  statement  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	204	None	replace
784	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  not  a  statement  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	204	None	replace
785	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  not  a  statement  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	204	None	replace
786	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  not  a  statement  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	204	None	replace
787	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  not  a  statement  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	204	None	replace
788	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  not  a  statement  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	204	None	replace
789	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(signature,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(signature,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(signature,  decompressConcatenated);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.getInstance(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
790	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  signatureLength);  [CE]  cannot  find  symbol  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  signatureLength);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.getInstance(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
791	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(signatureLength,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(signatureLength,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(signatureLength,  decompressConcatenated);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.getInstance(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
792	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  e);  [CE]  cannot  find  symbol  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  e);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  e);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.getInstance(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
793	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  DEFLATE);  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  DEFLATE);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.getInstance(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
794	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  decompressUntilEOF);  [CE]  cannot  find  symbol  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  decompressUntilEOF);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.getInstance(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
795	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  decompressConcatenated);	  GuvernedSnappyCompressorInputStream    in    =    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
796	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(signatureLength);  [CE]  cannot  find  symbol  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(signatureLength);	  GuvernedSnappyCompressorInputStream    in    =    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
797	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  signatureLength);  [CE]  cannot  find  symbol  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  signatureLength);	  GuvernedSnappyCompressorInputStream    in    =    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
798	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(signature);  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(signature);	  GuvernedSnappyCompressorInputStream    in    =    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
799	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  DEFLATE);  [CE]  cannot  find  symbol  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  DEFLATE);	  GuvernedSnappyCompressorInputStream    in    =    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
800	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(signatureLength,  in);  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(signatureLength,  in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(signatureLength,  in);	  GuvernedSnappyCompressorInputStream    in    =    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
801	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  compressConcatenated);  [CE]  cannot  find  symbol  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  compressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  compressConcatenated);	  GuvernedSnappyCompressorInputStream    in    =    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
802	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	126	2	add
803	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	126	2	add
804	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(G  [CE]  ')'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(G  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(G	  	non-compiled	[CE]  ')'  expected	126	None	add
805	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  	non-compiled	[CE]  ')'  expected	126	None	add
806	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(  [CE]  illegal  start  of  expression  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
807	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompress  [CE]  ')'  expected  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompress	  	non-compiled	[CE]  ')'  expected	126	None	add
808	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  	non-compiled	[CE]  ')'  expected	126	None	add
809	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]                CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress	  	non-compiled	[CE]  ')'  expected	126	None	add
810	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	163	None	replace
811	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	163	None	replace
812	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	163	None	replace
813	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	163	None	replace
814	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in.read(),  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,boolean)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in.read(),  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in.read(),  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    in.read());    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,boolean)	220	None	replace
815	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  IOUtils.readFully(in,  signatureLength));  [CE]  no  suitable  method  found  for  readFully(InputStream,int)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  IOUtils.readFully(in,  signatureLength));  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  IOUtils.readFully(in,  signatureLength));	  return    new    GzipCompressorInputStream(in,    in.read());    	non-compiled	[CE]  no  suitable  method  found  for  readFully(InputStream,int)	220	None	replace
816	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  IOUtils.readFully(in,  signatureLength),  in.read());  [CE]  no  suitable  method  found  for  readFully(InputStream,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  IOUtils.readFully(in,  signatureLength),  in.read());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  IOUtils.readFully(in,  signatureLength),  in.read());	  return    new    GzipCompressorInputStream(in,    in.read());    	non-compiled	[CE]  no  suitable  method  found  for  readFully(InputStream,int)	220	None	replace
817	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readFully());  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readFully());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in.readFully());	  return    new    GzipCompressorInputStream(in,    in.read());    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
818	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readUTF());  [CE]  cannot  find  symbol  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readUTF());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in.readUTF());	  return    new    GzipCompressorInputStream(in,    in.read());    	non-compiled	[CE]  cannot  find  symbol	220	None	replace
819	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	165	None	replace
820	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	165	None	replace
821	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	165	None	replace
822	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	165	None	replace
823	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pendingEOF)||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  pendingEOF  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pendingEOF)||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  pendingEOF)||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	165	None	replace
824	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	106	2	add
825	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	106	2	add
826	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompress  [CE]  ')'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompress	  	non-compiled	[CE]  ')'  expected	106	None	add
827	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorIn  [CE]  ')'  expected  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorIn  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorIn	  	non-compiled	[CE]  ')'  expected	106	None	add
828	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureL  [CE]  ')'  expected  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureL  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureL	  	non-compiled	[CE]  ')'  expected	106	None	add
829	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signature  [CE]  ')'  expected  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signature  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signature	  	non-compiled	[CE]  ')'  expected	106	None	add
830	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature  [CE]  ')'  expected  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature	  	non-compiled	[CE]  ')'  expected	106	None	add
831	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(G  [CE]  ')'  expected  [FE]                CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(G  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(G	  	non-compiled	[CE]  ')'  expected	106	None	add
832	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)  [CE]  ')'  expected  [FE]                  CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)	  	non-compiled	[CE]  ')'  expected	106	None	add
833	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  }  else  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	}  else  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	12	2	replace
834	[BUG]  [BUGGY]  }  else  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  }  else  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	}  else  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	12	2	replace
835	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  }  else  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	}  else  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	12	2	replace
836	[BUG]  [BUGGY]  }  else  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [FE]  CompressorException  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  }  else  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	}  else  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	12	2	replace
837	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	12	None	replace
838	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	173	None	replace
839	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	89	2	add
840	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	89	2	add
841	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  If(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  If(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    If(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	non-compiled	[CE]  ';'  expected	89	None	add
842	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [CE]  cannot  find  symbol  DECOMPRESSED  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }	  	non-compiled	[CE]  cannot  find  symbol  DECOMPRESSED	89	None	add
843	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(Signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  Signature  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(Signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(Signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	non-compiled	[CE]  cannot  find  symbol  Signature	89	None	add
844	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSION);  }  [CE]  cannot  find  symbol  DECOMPRESSION  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSION);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSION);  }	  	non-compiled	[CE]  cannot  find  symbol  DECOMPRESSION	89	None	add
845	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  DECOMPRESSED);  }  [CE]  cannot  find  symbol  DECOMPRESSED  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  DECOMPRESSED);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  DECOMPRESSED);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DECOMPRESSED);    }    	non-compiled	[CE]  cannot  find  symbol  DECOMPRESSED	11	None	replace
846	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [CE]  cannot  find  symbol  DECOMPRESSED  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DECOMPRESSED);    }    	non-compiled	[CE]  cannot  find  symbol  DECOMPRESSED	11	None	replace
847	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [CE]  cannot  find  symbol  DECOMPRESSED  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DECOMPRESSED);    }    	non-compiled	[CE]  cannot  find  symbol  DECOMPRESSED	11	None	replace
848	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  DEFLATE);  }  [CE]  no  suitable  constructor  found  for  BZip2CompressorInputStream(InputStream,String)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DECOMPRESSED);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  BZip2CompressorInputStream(InputStream,String)	11	None	replace
849	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	compilable	  [FE]  CompressorException  	175	2	add
850	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	compilable	  [FE]  CompressorException  	175	2	add
851	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [CE]  not  a  statement  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re	  	non-compiled	[CE]  not  a  statement	175	None	add
852	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  If(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  If(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    If(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	non-compiled	[CE]  ';'  expected	175	None	add
853	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  reset();  }  [CE]  ';'  expected  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  reset();  }	  	non-compiled	[CE]  ';'  expected	175	None	add
854	[BUG]  [BUGGY]  if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  BZip2Compressor  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2Compressor.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  BZip2Compressor	83	None	replace
855	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureL  [CE]  ')'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureL  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureL	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ')'  expected	83	None	replace
856	[BUG]  [BUGGY]  return  new  GZipCompressorInputStream(in,  decompressConcatenated,  signatureLength);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GZipCompressorInputStream(in,  decompressConcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GZipCompressorInputStream(in,  decompressConcatenated,  signatureLength);	  return    new    GZipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
857	[BUG]  [BUGGY]  return  new  GZipCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GZipCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GZipCompressorInputStream(in,  decompressConcatenated,  DEFLATE);	  return    new    GZipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
858	[BUG]  [BUGGY]  return  new  GZipCompressorInputStream(signature,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GZipCompressorInputStream(signature,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GZipCompressorInputStream(signature,  decompressConcatenated);	  return    new    GZipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
859	[BUG]  [BUGGY]  return  new  GZipCompressorInputStream(in,  decompressUntilEOF);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GZipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GZipCompressorInputStream(in,  decompressUntilEOF);	  return    new    GZipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
860	[BUG]  [BUGGY]  return  new  GZipCompressorInputStream(decompressConcatenated,  in);  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GZipCompressorInputStream(decompressConcatenated,  in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GZipCompressorInputStream(decompressConcatenated,  in);	  return    new    GZipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
861	[BUG]  [BUGGY]  return  new  GZipCompressorInputStream(signatureLength,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GZipCompressorInputStream(signatureLength,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GZipCompressorInputStream(signatureLength,  decompressConcatenated);	  return    new    GZipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
862	[BUG]  [BUGGY]  return  new  GZipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW);  [CE]  cannot  find  symbol  [FE]                      NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GZipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GZipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW);	  return    new    GZipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
863	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	91	2	add
864	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	91	2	add
865	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(BZip2CompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(BZip2CompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(BZip2CompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	non-compiled	[CE]  cannot  find  symbol  SignatureLength	91	None	add
866	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	91	None	add
867	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(Gzip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  Gzip2CompressorInputStream  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(Gzip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(Gzip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	non-compiled	[CE]  cannot  find  symbol  Gzip2CompressorInputStream	91	None	add
868	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	91	2	add
869	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	91	2	add
870	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  If(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  If(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    If(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	non-compiled	[CE]  ';'  expected	91	None	add
871	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	109	2	replace
872	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	109	2	replace
873	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	109	2	replace
874	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	109	2	replace
875	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  signatureLength,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int,boolean)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  signatureLength,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  signatureLength,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int,boolean)	45	None	replace
876	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  0,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int,int)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  0,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  0,  signatureLength);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int,int)	45	None	replace
877	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2,  signatureLength);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,int)	45	None	replace
878	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.skipChildren();  }  [CE]  cannot  find  symbol  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.skipChildren();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.skipChildren();  }	  return    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
879	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    signatureLength);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	219	None	replace
880	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    signatureLength);    }    else    {    in.reset();    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int)	219	None	replace
881	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    signatureLength);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	219	None	replace
882	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  LZMA))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  LZMA))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  LZMA))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    signatureLength);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	219	None	replace
883	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    signatureLength);    }    else    {    in.reset();    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int)	219	None	replace
884	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DecompressConcatenated,  decompressUntilEOF);  [CE]  cannot  find  symbol  DecompressConcatenated  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DecompressConcatenated,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DecompressConcatenated,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    DecompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol  DecompressConcatenated	181	None	replace
885	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DecompressUntilEOF,  decompressConcatenated);  [CE]  cannot  find  symbol  DecompressUntilEOF  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DecompressUntilEOF,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DecompressUntilEOF,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    DecompressUntilEOF);    	non-compiled	[CE]  cannot  find  symbol  DecompressUntilEOF	79	None	replace
886	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(signatureLength,  DecompressUntilEOF);  [CE]  cannot  find  symbol  DecompressUntilEOF  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(signatureLength,  DecompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(signatureLength,  DecompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    DecompressUntilEOF);    	non-compiled	[CE]  cannot  find  symbol  DecompressUntilEOF	79	None	replace
887	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(signatureLength,  Integer.MAX_VALUE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(int,int)  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(signatureLength,  Integer.MAX_VALUE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(signatureLength,  Integer.MAX_VALUE);	  return    new    GzipCompressorInputStream(in,    DecompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(int,int)	79	None	replace
888	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressConcatenated,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,InputStream,boolean,int)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressConcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressConcatenated,  signatureLength);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,InputStream,boolean,int)	15	None	replace
889	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,int)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  signatureLength);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,int)	15	None	replace
890	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  signatureLength,  e);  [CE]  cannot  find  symbol  e  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  signatureLength,  e);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  signatureLength,  e);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol  e	15	None	replace
891	[BUG]  [BUGGY]  InspectorInputStream.matches(signature,  signatureLength))  {  return  new  InspectorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InspectorInputStream.matches(signature,  signatureLength))  {  return  new  InspectorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InspectorInputStream.matches(signature,  signatureLength))  {  return  new  InspectorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
892	[BUG]  [BUGGY]  InspectorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InspectorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InspectorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
893	[BUG]  [BUGGY]  InspectorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InspectorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InspectorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
894	[BUG]  [BUGGY]  InspectorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InspectorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InspectorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
895	[BUG]  [BUGGY]  InspectorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InspectorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InspectorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
896	[BUG]  [BUGGY]  InspectorInputStream.matches(signature,  signatureLength))  {  return  new  InspectorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InspectorInputStream.matches(signature,  signatureLength))  {  return  new  InspectorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InspectorInputStream.matches(signature,  signatureLength))  {  return  new  InspectorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
897	[BUG]  [BUGGY]  InspectorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InspectorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InspectorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
898	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    pendingEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	225	None	replace
899	[BUG]  [BUGGY]  if(!GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(!GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(!GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	224	None	replace
900	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in);  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	224	None	replace
901	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	224	None	replace
902	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	224	None	replace
903	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	compilable	  [FE]  NullPointerException  	110	2	add
904	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	compilable	  [FE]  NullPointerException  	110	2	add
905	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	110	None	add
906	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	110	None	add
907	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	compilable	  [FE]  NullPointerException  	110	2	add
908	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	compilable	  [FE]  NullPointerException  	110	2	add
909	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]            NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	110	None	add
910	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    If(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	non-compiled	[CE]  ';'  expected	110	None	add
911	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF);	  new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean)	40	None	replace
912	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean,boolean)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  decompressConcatenated);	  new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean,boolean)	40	None	replace
913	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String)  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE);	  new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String)	40	None	replace
914	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean,int)  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  DEFLATE,  decompressUntilEOF,  signatureLength);	  new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean,int)	40	None	replace
915	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  signatureLength,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int,boolean)  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  signatureLength,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  DEFLATE,  signatureLength,  decompressConcatenated);	  new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int,boolean)	40	None	replace
916	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  0,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int,boolean)  [FE]                              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  0,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  DEFLATE,  0,  decompressConcatenated);	  new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int,boolean)	40	None	replace
917	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,InputStream,boolean)  [FE]                                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressConcatenated);	  new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,InputStream,boolean)	40	None	replace
918	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  0L,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,long,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  0L,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  0L,  signatureLength);	  return    new    GzipCompressorInputStream(in,    0L);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,long,int)	104	None	replace
919	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  0L,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,long,boolean)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  0L,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  0L,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    0L);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,long,boolean)	104	None	replace
920	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  0L,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,long,String)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  0L,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  0L,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    0L);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,long,String)	104	None	replace
921	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  0L),  decompressConcatenated);  [CE]  ';'  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  0L),  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  0L),  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    0L);    	non-compiled	[CE]  ';'  expected	104	None	replace
922	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	6	None	replace
923	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	6	None	replace
924	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
925	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
926	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
927	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
928	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	25	None	replace
929	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	25	None	replace
930	[BUG]  [BUGGY]  in.mark(signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  not  a  statement  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	25	None	replace
931	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	199	None	replace
932	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	199	None	replace
933	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	199	None	replace
934	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]                  NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	199	None	replace
935	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  illegal  start  of  expression  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
936	[BUG]  [BUGGY]  ';'  expected  =  IOUtils.readFully(in,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength));  [CE]  not  a  statement  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ';'  expected  =  IOUtils.readFully(in,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength));  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	';'  expected  =  IOUtils.readFully(in,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength));	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  not  a  statement	98	None	replace
937	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [CE]  illegal  start  of  expression  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
938	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  PACK200,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String,String)  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  PACK200,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE,  PACK200,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String,String)	43	None	replace
939	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  PACK200,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String,boolean)  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  PACK200,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  PACK200,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String,boolean)	43	None	replace
940	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  PACK200,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,String,String)  [FE]                              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  PACK200,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  PACK200,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,String,String)	43	None	replace
941	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
942	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
943	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
944	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
945	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  BZip2CompressorInputStream(in);  }  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  BZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  BZip2CompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	64	None	replace
946	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  SignatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  SignatureLength))  {  return  new  BZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  SignatureLength))  {  return  new  BZip2CompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  SignatureLength	64	None	replace
947	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	139	None	replace
948	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	139	None	replace
949	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	139	None	replace
950	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(in,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(in,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	177	None	replace
951	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(in,  0);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int)  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(in,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(in,  0);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int)	177	None	replace
952	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	23	2	replace
953	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	23	2	replace
954	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	23	2	replace
955	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  1))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	compilable	  [FE]  CompressorException  	23	2	replace
956	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
957	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	23	None	replace
958	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,InputStream,boolean)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,InputStream,boolean)	37	None	replace
959	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	5	None	replace
960	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  in)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  in)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  in)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
961	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
962	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
963	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  Integer.toString(signatureLength),  Integer.toString(signatureLength));  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,String,String)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  Integer.toString(signatureLength),  Integer.toString(signatureLength));  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(decompressConcatenated,  Integer.toString(signatureLength),  Integer.toString(signatureLength));	  return    new    GzipCompressorInputStream(in,    DecompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,String,String)	181	None	replace
964	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  Integer.toString(signatureLength));  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,String)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  Integer.toString(signatureLength));  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(decompressConcatenated,  Integer.toString(signatureLength));	  return    new    GzipCompressorInputStream(in,    DecompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,String)	181	None	replace
965	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  Integer.toHexString(signatureLength),  Integer.toHexString(signatureLength));  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,String,String)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  Integer.toHexString(signatureLength),  Integer.toHexString(signatureLength));  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(decompressConcatenated,  Integer.toHexString(signatureLength),  Integer.toHexString(signatureLength));	  return    new    GzipCompressorInputStream(in,    DecompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,String,String)	181	None	replace
966	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  UntilEOF);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  UntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  UntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	118	None	replace
967	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	118	None	replace
968	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	165	None	replace
969	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	165	None	replace
970	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	165	None	replace
971	[BUG]  [BUGGY]  if(UntilEOF.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(UntilEOF.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(UntilEOF.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	165	None	replace
972	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GZipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GZipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	54	None	add
973	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	119	None	replace
974	[BUG]  [BUGGY]  if(UntilEOF.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(UntilEOF.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(UntilEOF.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	119	None	replace
975	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(Boolean)  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(Boolean)	119	None	replace
976	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	119	None	replace
977	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  PACK200);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  PACK200);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  PACK200);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)	43	None	replace
978	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,Boolean)  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,Boolean)	43	None	replace
979	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA,  PACK200);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)  [FE]                              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA,  PACK200);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  LZMA,  PACK200);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)	43	None	replace
980	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	113	None	replace
981	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	113	None	replace
982	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	113	None	replace
983	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	113	None	replace
984	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	113	None	replace
985	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  UntilEOF  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    pending))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	171	None	replace
986	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,Boolean)	78	None	replace
987	[BUG]  [BUGGY]  in.mark(signatureLength);  in.mark(decompressConcatenated);  [CE]  method  mark  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.mark(decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.mark(decompressConcatenated);	  	non-compiled	[CE]  method  mark  in  class  InputStream  cannot  be  applied  to  given  types;	52	None	add
988	[BUG]  [BUGGY]  in.mark(signatureLength);  in.mark(GzipCompressorInputStream);  [CE]  cannot  find  symbol  GzipCompressorInputStream  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.mark(GzipCompressorInputStream);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.mark(GzipCompressorInputStream);	  	non-compiled	[CE]  cannot  find  symbol  GzipCompressorInputStream	52	None	add
989	[BUG]  [BUGGY]  in.mark(signatureLength);  in.decompress(signatureLength);  [CE]  cannot  find  symbol  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.decompress(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.decompress(signatureLength);	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
990	[BUG]  [BUGGY]  in.mark(signatureLength);  in.mark(gzipCompressorInputStream);  [CE]  cannot  find  symbol  gzipCompressorInputStream  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.mark(gzipCompressorInputStream);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.mark(gzipCompressorInputStream);	  	non-compiled	[CE]  cannot  find  symbol  gzipCompressorInputStream	52	None	add
991	[BUG]  [BUGGY]  in.mark(signatureLength);  in.mark(GZIP);  [CE]  method  mark  in  class  InputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.mark(GZIP);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.mark(GZIP);	  	non-compiled	[CE]  method  mark  in  class  InputStream  cannot  be  applied  to  given  types;	52	None	add
992	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.reset();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength);    in.reset();	  	compilable	  [FE]  CompressorException  	52	2	add
993	[BUG]  [BUGGY]  in.mark(signatureLength);  in.reset();  [FE]  CompressorException  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.reset();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.reset();	  	compilable	  [FE]  CompressorException  	52	2	add
994	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.close();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength);    in.close();	  	compilable	  [FE]  CompressorException  	52	2	add
995	[BUG]  [BUGGY]  in.mark(signatureLength);  in.close();  [FE]  CompressorException  [FE]                CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.close();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.close();	  	compilable	  [FE]  CompressorException  	52	2	add
996	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	116	None	add
997	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  	compilable	  [FE]  NullPointerException  	116	2	add
998	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  	compilable	  [FE]  NullPointerException  	116	2	add
999	[BUG]  [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	100	None	add
1000	[BUG]  [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	100	None	add
1001	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  decompressUntilEOF);  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  decompressUntilEOF);  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  decompressUntilEOF);  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    InputStream    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	122	None	replace
1002	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                  NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    InputStream    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	122	None	replace
1003	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  final  parameter  in  may  not  be  assigned  [FE]                    NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    InputStream    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  final  parameter  in  may  not  be  assigned	122	None	replace
1004	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    InputStream    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  ')'  expected	122	None	replace
1005	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GZIPCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GZIPCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GZIPCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GZIPCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	179	None	replace
1006	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GZIPCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GZIPCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GZIPCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GZIPCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	179	None	replace
1007	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GZIPCompressorInputStream(in);  }  [CE]  cannot  find  symbol  pendingEOF  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GZIPCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GZIPCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GZIPCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	179	None	replace
1008	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	205	None	replace
1009	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	205	None	replace
1010	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  0L,  0L);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,long,long)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  0L,  0L);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  0L,  0L);	  return    new    GzipCompressorInputStream(in,    0L);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,long,long)	104	None	replace
1011	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(in,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(in,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(in,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	156	None	replace
1012	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	156	None	replace
1013	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0.0))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0.0))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  0.0))  {  return  new  GuvernedSnappyCompressorInputStream(in);	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	156	None	replace
1014	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  GzipCompressorInputStream.getName()))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  GzipCompressorInputStream.getName()))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  GzipCompressorInputStream.getName()))  {  return  new  GuvernedSnappyCompressorInputStream(in);	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	156	None	replace
1015	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [CE]  ';'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    	non-compiled	[CE]  ';'  expected	101	None	replace
1016	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    	non-compiled	[CE]  ';'  expected	101	None	replace
1017	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    	non-compiled	[CE]  ';'  expected	101	None	replace
1018	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [CE]  ';'  expected  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    	non-compiled	[CE]  ';'  expected	101	None	replace
1019	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	224	None	replace
1020	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength,  UntilEOF);  [CE]  cannot  find  symbol  UntilEOF  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength,  UntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    0,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	16	None	replace
1021	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,int,String)  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  signatureLength,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    0,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,int,String)	16	None	replace
1022	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.readInput();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.readInput();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.readInput();	  InputStream    in    =    in.readInput();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	73	None	replace
1023	[BUG]  [BUGGY]  InputStream  in  =  BZip2CompressorInputStream.readInput();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  BZip2CompressorInputStream.readInput();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  BZip2CompressorInputStream.readInput();	  InputStream    in    =    in.readInput();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	73	None	replace
1024	[BUG]  [BUGGY]  InputStream  in  =  IOUtils.readInput(in,  DEFLATE);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  IOUtils.readInput(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  IOUtils.readInput(in,  DEFLATE);	  InputStream    in    =    in.readInput();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	73	None	replace
1025	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  signature);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,byte[])  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(decompressConcatenated,  signature);	  return    new    GzipCompressorInputStream(signature,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,byte[])	200	None	replace
1026	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(decompressUntilEOF,  signature);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(Boolean,byte[])  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(decompressUntilEOF,  signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(decompressUntilEOF,  signature);	  return    new    GzipCompressorInputStream(signature,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(Boolean,byte[])	200	None	replace
1027	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(signature,  in,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(byte[],InputStream,Boolean)  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(signature,  in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(signature,  in,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(signature,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(byte[],InputStream,Boolean)	200	None	replace
1028	[BUG]  [BUGGY]  &&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  &&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1029	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1030	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1031	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	121	None	replace
1032	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	121	None	replace
1033	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1034	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {	  MutableCompressorInputStream.matches(signature,    decompressConcatenated)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	134	None	replace
1035	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	134	None	replace
1036	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	134	None	replace
1037	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressAfterEOF);  [CE]  cannot  find  symbol  decompressAfterEOF  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressAfterEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressAfterEOF);	  return    new    GzipCompressorInputStream(in,    compressConcatenated);    	non-compiled	[CE]  cannot  find  symbol  decompressAfterEOF	77	None	replace
1038	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  UntilEOF);  [CE]  cannot  find  symbol  UntilEOF  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  UntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    UntilEOF);    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	133	None	replace
1039	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  UntilEOF);  [CE]  cannot  find  symbol  UntilEOF  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  PACK200,  UntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    UntilEOF);    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	133	None	replace
1040	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP2,  UntilEOF);  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP2,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP2,  UntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    UntilEOF);    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	133	None	replace
1041	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  'catch'  without  'try'  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.re    reset();    }    	non-compiled	[CE]  'catch'  without  'try'	142	None	replace
1042	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [CE]  not  a  statement  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.re    reset();    }    	non-compiled	[CE]  not  a  statement	142	None	replace
1043	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.re    reset();    }    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	142	None	replace
1044	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.re    reset();    }    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	142	None	replace
1045	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(in,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(in,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(in,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	155	None	replace
1046	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	155	None	replace
1047	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInput  [CE]  '('  or  '['  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInput  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInput	  	non-compiled	[CE]  '('  or  '['  expected	61	None	add
1048	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream  [CE]  '('  or  '['  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream	  	non-compiled	[CE]  '('  or  '['  expected	61	None	add
1049	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))	  	compilable	  [FE]  CompressorException  	61	2	add
1050	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))	  	compilable	  [FE]  CompressorException  	61	2	add
1051	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  	non-compiled	[CE]  ')'  expected	126	None	add
1052	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  [CE]  '('  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if	  	non-compiled	[CE]  '('  expected	126	None	add
1053	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	99	None	replace
1054	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    else    {    in.reset();    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	99	None	replace
1055	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	99	None	replace
1056	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.re  [CE]  not  a  statement  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.re  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.re	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    else    {    in.reset();    }    	non-compiled	[CE]  not  a  statement	99	None	replace
1057	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  'catch'  without  'try'  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    else    {    in.reset();    }    	non-compiled	[CE]  'catch'  without  'try'	99	None	replace
1058	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSION);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSION);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSION);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	99	None	replace
1059	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readLine(),  decompressUntilEOF);  [CE]  cannot  find  symbol  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readLine(),  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readLine(),  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
1060	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  in.readLine());  [CE]  cannot  find  symbol  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  in.readLine());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  in.readLine());	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
1061	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.available());  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int)  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.available());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.available());	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.readLine());    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int)	17	None	replace
1062	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  Integer.toHexString(in.readLine()));  [CE]  cannot  find  symbol  [FE]                              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  Integer.toHexString(in.readLine()));  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  Integer.toHexString(in.readLine()));	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
1063	[BUG]  [BUGGY]  if(pending.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                    NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(pending.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(pending.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    pending))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	124	None	replace
1064	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(Boolean)  [FE]                      NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    pending))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(Boolean)	124	None	replace
1065	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  pending  [FE]                        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    pending))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  pending	124	None	replace
1066	[BUG]  [BUGGY]  if(pending.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  pending  [FE]                          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(pending.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(pending.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    pending))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  pending	124	None	replace
1067	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(Boolean)  [FE]                            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    pending))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(Boolean)	124	None	replace
1068	[BUG]  [BUGGY]  if(UntilEOF.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(UntilEOF.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(UntilEOF.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	162	None	replace
1069	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	162	None	replace
1070	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	162	None	replace
1071	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	162	None	replace
1072	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  ';'  expected	117	None	replace
1073	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  ';'  expected	117	None	replace
1074	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  ';'  expected	117	None	replace
1075	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  ';'  expected	117	None	replace
1076	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  ';'  expected	117	None	replace
1077	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  ';'  expected	117	None	replace
1078	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  GzipCompressorInputStream);  [CE]  cannot  find  symbol  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  GzipCompressorInputStream);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  GzipCompressorInputStream);	  GuvernedSnappyCompressorInputStream    in    =    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
1079	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  0);  [CE]  cannot  find  symbol  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  0);	  GuvernedSnappyCompressorInputStream    in    =    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  cannot  find  symbol	213	None	replace
1080	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  not  a  statement  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  not  a  statement	115	None	replace
1081	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  not  a  statement	115	None	replace
1082	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	115	None	replace
1083	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  not  a  statement  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)||  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  not  a  statement	115	None	replace
1084	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_FRAMED);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String)  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_FRAMED);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_FRAMED);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String)	42	None	replace
1085	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  GzipCompressorInputStream);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  GzipCompressorInputStream);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  GzipCompressorInputStream);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	135	None	replace
1086	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  pendingEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  pendingEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  pendingEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	135	None	replace
1087	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	135	None	replace
1088	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	136	None	replace
1089	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  not  a  statement  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  not  a  statement	196	None	replace
1090	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  [CE]  not  a  statement  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  not  a  statement	196	None	replace
1091	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  PACK200);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  PACK200);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  PACK200);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)	39	None	replace
1092	[BUG]  [BUGGY]  NeighborCompressorInputStream  in  =  new  NeighborCompressorInputStream(in);  [CE]  cannot  find  symbol  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  NeighborCompressorInputStream  in  =  new  NeighborCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	NeighborCompressorInputStream  in  =  new  NeighborCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
1093	[BUG]  [BUGGY]  NeighborCompressorInputStream  in  =  new  NeighborCompressorInputStream(in,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  NeighborCompressorInputStream  in  =  new  NeighborCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	NeighborCompressorInputStream  in  =  new  NeighborCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
1094	[BUG]  [BUGGY]  NeighborCompressorInputStream  in  =  createNeighborCompressorInputStream(in);  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  NeighborCompressorInputStream  in  =  createNeighborCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	NeighborCompressorInputStream  in  =  createNeighborCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
1095	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(in);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  createCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  createCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	64	None	replace
1096	[BUG]  [BUGGY]  NeighborCompressorInputStream  in  =  createSnappyCompressorInputStream(in);  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  NeighborCompressorInputStream  in  =  createSnappyCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	NeighborCompressorInputStream  in  =  createSnappyCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
1097	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GZipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	184	None	replace
1098	[BUG]  [BUGGY]  if(BZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GZipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	184	None	replace
1099	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  pendingEOF  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GZipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	184	None	replace
1100	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	27	None	replace
1101	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in);  [CE]  cannot  find  symbol  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
1102	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	56	None	replace
1103	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	114	None	add
1104	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GZipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	114	None	add
1105	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF  [CE]  ')'  expected  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF	  	non-compiled	[CE]  ')'  expected	114	None	add
1106	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	143	None	replace
1107	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	143	None	replace
1108	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  pending  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  pending	143	None	replace
1109	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	202	None	replace
1110	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	202	None	replace
1111	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	202	None	replace
1112	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	202	None	replace
1113	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	202	None	replace
1114	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	202	None	replace
1115	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	60	None	replace
1116	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  UntilEOF  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	60	None	replace
1117	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(in,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(in,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(in,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	60	None	replace
1118	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	60	None	replace
1119	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    	compilable	  [FE]  CompressorException  	60	2	replace
1120	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    	compilable	  [FE]  CompressorException  	60	2	replace
1121	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	60	None	replace
1122	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  pending  [FE]                CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  pending	60	None	replace
1123	[BUG]  [BUGGY]  if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	140	None	replace
1124	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	139	None	replace
1125	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	139	None	replace
1126	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	139	None	replace
1127	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	97	None	replace
1128	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	110	None	add
1129	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in);	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1130	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1131	[BUG]  [BUGGY]  if(UntilEOF.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(UntilEOF.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(UntilEOF.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	178	None	replace
1132	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	178	None	replace
1133	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	128	None	replace
1134	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  [CE]  illegal  start  of  expression  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1135	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	128	None	replace
1136	[BUG]  [BUGGY]  if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DECOMPRESSED);    }    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	11	None	replace
1137	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	129	None	replace
1138	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcat  [CE]  ')'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcat  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcat	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	129	None	replace
1139	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  UntilEOF  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    signatureLength);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	219	None	replace
1140	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  pending  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    signatureLength);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  pending	219	None	replace
1141	[BUG]  [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	210	None	add
1142	[BUG]  [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	210	None	add
1143	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  Integer.parseInt(signatureLength),  Integer.parseInt(signatureLength));  [CE]  no  suitable  method  found  for  parseInt(int)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  Integer.parseInt(signatureLength),  Integer.parseInt(signatureLength));  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(decompressConcatenated,  Integer.parseInt(signatureLength),  Integer.parseInt(signatureLength));	  return    new    GzipCompressorInputStream(in,    DecompressUntilEOF);    	non-compiled	[CE]  no  suitable  method  found  for  parseInt(int)	79	None	replace
1144	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  	non-compiled	[CE]  ')'  expected	22	None	add
1145	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  	non-compiled	[CE]  ')'  expected	22	None	add
1146	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [CE]  unreachable  statement  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated);  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  unreachable  statement	177	None	replace
1147	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  decompressUntilEOF);  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [CE]  final  parameter  in  may  not  be  assigned  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  decompressUntilEOF);  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  decompressUntilEOF);  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  final  parameter  in  may  not  be  assigned	177	None	replace
1148	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	91	None	add
1149	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	91	2	add
1150	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }	  	compilable	  [FE]  CompressorException  	91	2	add
1151	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  not  a  statement  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
1152	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  not  a  statement  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
1153	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  not  a  statement  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
1154	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcat  [CE]  not  a  statement  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcat  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcat	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
1155	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  not  a  statement  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
1156	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP2,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP2,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  BZIP2,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    BZIP2);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)	38	None	replace
1157	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  0);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  0);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int)	182	None	replace
1158	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  CompressorException  	81	2	add
1159	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  CompressorException  	81	2	add
1160	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.mark(signatureLength);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	81	None	add
1161	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	157	None	replace
1162	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  byteLength))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  byteLength))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  byteLength))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	157	None	replace
1163	[BUG]  [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(in,  signature);  [CE]  variable  signatureLength  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(in,  signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	Integer  signatureLength  =  IOUtils.readFully(in,  signature);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  variable  signatureLength  is  already  defined  in  method  createCompressorInputStream(InputStream)	82	None	replace
1164	[BUG]  [BUGGY]  nisipLength  =  IOUtils.readFully(in,  signature);  [CE]  cannot  find  symbol  nisipLength  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisipLength  =  IOUtils.readFully(in,  signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisipLength  =  IOUtils.readFully(in,  signature);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  nisipLength	82	None	replace
1165	[BUG]  [BUGGY]  CompositeCompressorInputStream  in  =  createCompressorInputStream(in,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  CompositeCompressorInputStream  in  =  createCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	CompositeCompressorInputStream  in  =  createCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
1166	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  createCompressorInputStream(in,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  createCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  createCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
1167	[BUG]  [BUGGY]  nisipLength  =  IOUtils.readFully(signature);  [CE]  cannot  find  symbol  nisipLength  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisipLength  =  IOUtils.readFully(signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisipLength  =  IOUtils.readFully(signature);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  nisipLength	82	None	replace
1168	[BUG]  [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(signature);  [CE]  variable  signatureLength  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	Integer  signatureLength  =  IOUtils.readFully(signature);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  variable  signatureLength  is  already  defined  in  method  createCompressorInputStream(InputStream)	82	None	replace
1169	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  final  parameter  in  may  not  be  assigned  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  final  parameter  in  may  not  be  assigned	120	None	replace
1170	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  UntilEOF);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  UntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  UntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	120	None	replace
1171	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	compilable	  [FE]  CompressorException  	120	2	replace
1172	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  CompressorException  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	compilable	  [FE]  CompressorException  	120	2	replace
1173	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                  NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	120	None	replace
1174	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  UntilEOF  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	170	None	replace
1175	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  UntilEOF  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	170	None	replace
1176	[BUG]  [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  UntilEOF  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	170	None	replace
1177	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  GzipCompressorInputStream);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  GzipCompressorInputStream);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  GzipCompressorInputStream);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	192	None	replace
1178	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	192	None	replace
1179	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	192	None	replace
1180	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream  [CE]  '('  or  '['  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  '('  or  '['  expected	51	None	replace
1181	[BUG]  [BUGGY]  in.mark(signatureLength);  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in);  }	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	51	None	replace
1182	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	51	None	replace
1183	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  GzipCompressorInputStream);  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  GzipCompressorInputStream);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  GzipCompressorInputStream);	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	138	None	replace
1184	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  GZIP);  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  GZIP);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  GZIP);	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	138	None	replace
1185	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  0,  decompressConcatenated,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,boolean,String)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  0,  decompressConcatenated,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  0,  decompressConcatenated,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    0,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,boolean,String)	103	None	replace
1186	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	50	2	add
1187	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	50	2	add
1188	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.write('n');  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.write('n');  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    in.write('n');  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
1189	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	50	None	add
1190	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.write('n');  if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.write('n');  if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    in.write('n');  if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
1191	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	50	None	add
1192	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorOutputStream(in);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorOutputStream(InputStream)  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorOutputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorOutputStream(in);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorOutputStream(InputStream)	50	None	add
1193	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
1194	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  [CE]  not  a  statement  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
1195	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  [CE]  not  a  statement  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
1196	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  not  a  statement  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
1197	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  not  a  statement  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
1198	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  [CE]  not  a  statement  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
1199	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  not  a  statement  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
1200	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  MutableCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	147	None	replace
1201	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  MutableCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	147	None	replace
1202	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  bad  operand  type  boolean  for  unary  operator  '-'  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  -decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  bad  operand  type  boolean  for  unary  operator  '-'	147	None	replace
1203	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -1))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  -1))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	147	2	replace
1204	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -1))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -1))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  -1))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	147	2	replace
1205	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  in))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  in))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  in))  {  return  new  GzipCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    null))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	209	None	replace
1206	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(in,  null))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(in,  null))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(in,  null))  {  return  new  GzipCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    null))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	209	None	replace
1207	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	          if(GzipCompressorInputStream.matches(signature,    null))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	209	None	replace
1208	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  out))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  out  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  out))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  out))  {  return  new  GzipCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    null))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  out	209	None	replace
1209	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  pendingEOF  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in);    if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  pendingEOF	144	None	add
1210	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in);    if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  UntilEOF	144	None	add
1211	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  GZIP,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  GZIP,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  GZIP,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    e);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,String)	41	None	replace
1212	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	198	None	replace
1213	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	158	None	replace
1214	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	158	None	replace
1215	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  MutableCompressorInputStream(in);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	158	None	replace
1216	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  return  new  MutableCompressorInputStream(in);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	158	None	replace
1217	[BUG]  [BUGGY]  return  new  GZipCompressorInputStream(in,  DEFLATE);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GZipCompressorInputStream(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GZipCompressorInputStream(in,  DEFLATE);	  return    new    GZipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
1218	[BUG]  [BUGGY]  return  new  GZipCompressorInputStream(in,  decompressConcatenated,  UntilEOF);  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GZipCompressorInputStream(in,  decompressConcatenated,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GZipCompressorInputStream(in,  decompressConcatenated,  UntilEOF);	  return    new    GZipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
1219	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.reset();        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	94	None	add
1220	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.reset();        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  	compilable	  [FE]  CompressorException  	94	2	add
1221	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.reset();        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  	compilable	  [FE]  CompressorException  	94	2	add
1222	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  LZMA);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  LZMA);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  LZMA);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    LZMA);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)	206	None	replace
1223	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  LZMA,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  LZMA,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  LZMA,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    LZMA);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean)	206	None	replace
1224	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  4);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  4);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  4);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    4);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int)	35	None	replace
1225	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	6	None	replace
1226	[BUG]  [BUGGY]  if(DFLATE.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  DFLATE  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(DFLATE.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(DFLATE.matches(signature,  DEFLATE)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  DFLATE	6	None	replace
1227	[BUG]  [BUGGY]  if(BZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  BZipCompressorInputStream  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  BZipCompressorInputStream	141	None	replace
1228	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	141	None	replace
1229	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  3);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  3);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  3);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    3);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int)	36	None	replace
1230	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	161	None	replace
1231	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	57	None	add
1232	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	57	None	add
1233	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	21	None	replace
1234	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.reset();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.reset();	  in.mark(signatureLength);    	compilable	  [FE]  CompressorException  	53	2	replace
1235	[BUG]  [BUGGY]  in.reset();  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.reset();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.reset();	  in.mark(signatureLength);    	compilable	  [FE]  CompressorException  	53	2	replace
1236	[BUG]  [BUGGY]  in.decompressConcatenated(signatureLength);  [CE]  cannot  find  symbol  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.decompressConcatenated(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.decompressConcatenated(signatureLength);	  in.mark(signatureLength);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
1237	[BUG]  [BUGGY]  in.decompress(signatureLength);  [CE]  cannot  find  symbol  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.decompress(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.decompress(signatureLength);	  in.mark(signatureLength);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
1238	[BUG]  [BUGGY]  in.put(GZIP,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.put(GZIP,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.put(GZIP,  decompressConcatenated);	  in.mark(signatureLength);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
1239	[BUG]  [BUGGY]  in.put(GZIP,  signatureLength);  [CE]  cannot  find  symbol  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.put(GZIP,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.put(GZIP,  signatureLength);	  in.mark(signatureLength);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
1240	[BUG]  [BUGGY]  in.decompress(signature);  [CE]  cannot  find  symbol  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.decompress(signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.decompress(signature);	  in.mark(signatureLength);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
1241	[BUG]  [BUGGY]  &&  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  &&  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	&&  GzipCompressorInputStream.matches(signatureLength,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1242	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  else  {  return  new  GuvernedSnappyCompressorInputStream  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  else  {  return  new  GuvernedSnappyCompressorInputStream  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  else  {  return  new  GuvernedSnappyCompressorInputStream	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	207	None	replace
1243	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  else  {  return  new  GuvernedSnappyCompressorIn  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  else  {  return  new  GuvernedSnappyCompressorIn  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  else  {  return  new  GuvernedSnappyCompressorIn	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	207	None	replace
1244	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	207	None	replace
1245	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);  }  else  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);  }  else  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in);  }  else  {  return  new  MutableCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	207	None	replace
1246	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  else  {  return  new  MutableCompressorInputStream(  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  else  {  return  new  MutableCompressorInputStream(  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  else  {  return  new  MutableCompressorInputStream(	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	207	None	replace
1247	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	207	None	replace
1248	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLeng  [CE]  ')'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLeng  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLeng	  	non-compiled	[CE]  ')'  expected	8	None	add
1249	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.readInt();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.readInt();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.readInt();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	75	None	replace
1250	[BUG]  [BUGGY]  InputStream  in  =  BZip2CompressorInputStream.readInt();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  BZip2CompressorInputStream.readInt();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  BZip2CompressorInputStream.readInt();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	75	None	replace
1251	[BUG]  [BUGGY]  InputStream  in  =  GZIP.readInt();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GZIP.readInt();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GZIP.readInt();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	75	None	replace
1252	[BUG]  [BUGGY]  InputStream  in  =  IOUtils.readInt(in,  signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  IOUtils.readInt(in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  IOUtils.readInt(in,  signatureLength);	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	75	None	replace
1253	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  pendingEOF)  {  return  new  MutableCompressorInputStream(in,  pendingEOF);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  pendingEOF)  {  return  new  MutableCompressorInputStream(in,  pendingEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  pendingEOF)  {  return  new  MutableCompressorInputStream(in,  pendingEOF);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	195	None	replace
1254	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(DEFLATE,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(DEFLATE,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(DEFLATE,  decompressConcatenated);	  InputStream    in    =    new    GzipInputStream(signature,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	87	None	replace
1255	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(decompressConcatenated);	  InputStream    in    =    new    GzipInputStream(signature,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	87	None	replace
1256	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(decompressUntilEOF,  signature);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(decompressUntilEOF,  signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(decompressUntilEOF,  signature);	  InputStream    in    =    new    GzipInputStream(signature,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	87	None	replace
1257	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(DEFLATE,  signature);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(DEFLATE,  signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(DEFLATE,  signature);	  InputStream    in    =    new    GzipInputStream(signature,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	87	None	replace
1258	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	13	None	replace
1259	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
1260	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
1261	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  [CE]  ';'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  MutableCompressorInputStream(in,  DEFLATE);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  ';'  expected	13	None	replace
1262	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  1);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  1);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  1);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int)	34	None	replace
1263	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  1);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,int)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  1);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  1);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    1);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,int)	34	None	replace
1264	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  in);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated,  in);	  InputStream    in    =    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	28	None	replace
1265	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  compressUntilEOF);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  compressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  compressUntilEOF);	  InputStream    in    =    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	28	None	replace
1266	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(DEFLATE,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(DEFLATE,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(DEFLATE,  decompressConcatenated);	  InputStream    in    =    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	28	None	replace
1267	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	63	None	replace
1268	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	63	None	replace
1269	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	63	None	replace
1270	[BUG]  [BUGGY]  if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	180	None	replace
1271	[BUG]  [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	180	None	replace
1272	[BUG]  [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	180	None	replace
1273	[BUG]  [BUGGY]  if(in!=  null)  {  return  new  GzipCompressorInputStream(decompressConcatenated,  in);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,InputStream)  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(in!=  null)  {  return  new  GzipCompressorInputStream(decompressConcatenated,  in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(in!=  null)  {  return  new  GzipCompressorInputStream(decompressConcatenated,  in);  }	  return    new    GzipCompressorInputStream(decompressConcatenated,    in);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,InputStream)	150	None	replace
1274	[BUG]  [BUGGY]  if(in!=  null)  {  return  new  GzipCompressorInputStream(decompressConcatenated,  decompressConcatenated);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,boolean)  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(in!=  null)  {  return  new  GzipCompressorInputStream(decompressConcatenated,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(in!=  null)  {  return  new  GzipCompressorInputStream(decompressConcatenated,  decompressConcatenated);  }	  return    new    GzipCompressorInputStream(decompressConcatenated,    in);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean,boolean)	150	None	replace
1275	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  If(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	88	None	replace
1276	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  If(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	88	None	replace
1277	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  illegal  start  of  expression  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1278	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	130	None	replace
1279	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                  NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	123	None	replace
1280	[BUG]  [BUGGY]  if(UntilEOF.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                    NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(UntilEOF.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(UntilEOF.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	123	None	replace
1281	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                      NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	123	2	replace
1282	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [FE]  CompressorException  [FE]                      NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	123	2	replace
1283	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	218	None	replace
1284	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(decompressConcatenated,  signature))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	218	None	replace
1285	[BUG]  [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	189	None	replace
1286	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	189	2	replace
1287	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [FE]  CompressorException  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	189	2	replace
1288	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	189	None	replace
1289	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  no  suitable  constructor  found  for  Pack200CompressorInputStream(InputStream,boolean)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  Pack200CompressorInputStream(InputStream,boolean)	189	None	replace
1290	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
1291	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GzipCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(decompressConcatenated,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	169	None	replace
1292	[BUG]  [BUGGY]  if(FramedCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(in,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	174	None	replace
1293	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
1294	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	59	None	add
1295	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	59	None	add
1296	[BUG]  [BUGGY]  &&  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  [CE]  illegal  start  of  expression  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  &&  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	&&  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1297	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(in,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(in,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(in,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	212	None	replace
1298	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	212	None	replace
1299	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	212	None	replace
1300	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	137	None	replace
1301	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {  in.mark(signatureLength);  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {  in.mark(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  else  {  in.mark(signatureLength);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	137	None	replace
1302	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  not  a  statement  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	204	None	replace
1303	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(  [CE]  not  a  statement  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	204	None	replace
1304	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  not  a  statement  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	204	None	replace
1305	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,boolean)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  decompressConcatenated);	  new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,boolean)	40	None	replace
1306	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  0);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  DEFLATE,  0);	  new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int)	40	None	replace
1307	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }	  InputStream    in    =    GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
1308	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	163	None	replace
1309	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  illegal  start  of  expression  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  ||    GzipCompressorInputStream.matches(signatureLength,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1310	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in.read(),  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,String)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in.read(),  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in.read(),  DEFLATE);	  return    new    GzipCompressorInputStream(in,    in.read());    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,String)	220	None	replace
1311	[BUG]  [BUGGY]  CompressorInputStream  in  =  new  CompressorInputStream(in,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  CompressorInputStream  in  =  new  CompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	CompressorInputStream  in  =  new  CompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	95	None	replace
1312	[BUG]  [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	CompressorInputStream  in  =  createCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	95	None	replace
1313	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  createCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	95	None	replace
1314	[BUG]  [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  CompressorInputStream  in  =  createCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	CompressorInputStream  in  =  createCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	95	None	replace
1315	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  not  a  statement  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	107	None	replace
1316	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
1317	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0)||  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  not  a  statement  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0)||  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0)||  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	23	None	replace
1318	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  not  a  statement  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	23	None	replace
1319	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  not  a  statement  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0)&&  GzipCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	23	None	replace
1320	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0)||  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated  [CE]  not  a  statement  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0)||  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0)||  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	23	None	replace
1321	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	211	None	replace
1322	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(in,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(in,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(in,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	211	None	replace
1323	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [CE]  cannot  find  symbol  UntilEOF  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	211	None	replace
1324	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	211	None	replace
1325	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    	compilable	  [FE]  CompressorException  	211	2	replace
1326	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    	compilable	  [FE]  CompressorException  	211	2	replace
1327	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	211	None	replace
1328	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	211	None	replace
1329	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	194	None	replace
1330	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	194	None	replace
1331	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
1332	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
1333	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
1334	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
1335	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
1336	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,boolean)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,boolean)	183	None	replace
1337	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  decompressUntilEOF,  0);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,Boolean,int)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  decompressUntilEOF,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  decompressUntilEOF,  0);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,Boolean,int)	33	None	replace
1338	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressConcatenated,  0);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,InputStream,boolean,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressConcatenated,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  decompressConcatenated,  0);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,InputStream,boolean,int)	33	None	replace
1339	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	112	None	add
1340	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  DEFLATE,  decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,boolean)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  DEFLATE,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  SNAPPY_RAW,  DEFLATE,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,boolean)	132	None	replace
1341	[BUG]  [BUGGY]  if(UntilEOF.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(UntilEOF.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(UntilEOF.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	159	None	replace
1342	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	159	None	replace
1343	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	159	None	replace
1344	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	159	None	replace
1345	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  BZIP2,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  BZIP2,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  BZIP2,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    BZIP2);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String)	47	None	replace
1346	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    BZIP2);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)	47	None	replace
1347	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.re    	non-compiled	[CE]  ')'  expected	96	None	replace
1348	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	25	None	replace
1349	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	25	None	replace
1350	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	25	None	replace
1351	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	25	None	replace
1352	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	25	None	replace
1353	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    0.0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	149	None	replace
1354	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0.0)||  GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    0.0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	149	None	replace
1355	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(in,  0.0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(in,  0.0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(in,  0.0))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0.0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	149	None	replace
1356	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(SignatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  SignatureLength	86	None	replace
1357	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(SignatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  SignatureLength	86	None	replace
1358	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(SignatureLength);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	86	None	replace
1359	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureL  [CE]  ')'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureL  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureL	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(SignatureLength);    }    	non-compiled	[CE]  ')'  expected	86	None	replace
1360	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0.0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	176	None	replace
1361	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	176	None	replace
1362	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [CE]  not  a  statement  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re	  if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  not  a  statement	176	None	replace
1363	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(Boolean)  [FE]                      NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    pendingEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(Boolean)	125	None	replace
1364	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  pendingEOF  [FE]                        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    pendingEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	125	None	replace
1365	[BUG]  [BUGGY]  in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  pendingEOF);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(Boolean)  [FE]                          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  pendingEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in  =  new  GzipCompressorInputStream(decompressUntilEOF);  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  pendingEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    pendingEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(Boolean)	125	None	replace
1366	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.read();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.read();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.read();	  InputStream    in    =    in.read();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	215	None	replace
1367	[BUG]  [BUGGY]  InputStream  in  =  BZip2CompressorInputStream.read();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  BZip2CompressorInputStream.read();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  BZip2CompressorInputStream.read();	  InputStream    in    =    in.read();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	215	None	replace
1368	[BUG]  [BUGGY]  InputStream  in  =  IOUtils.readFully(in,  signature);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  IOUtils.readFully(in,  signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  IOUtils.readFully(in,  signature);	  InputStream    in    =    in.read();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	215	None	replace
1369	[BUG]  [BUGGY]  InputStream  in  =  IOUtils.readFully(in,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  IOUtils.readFully(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  IOUtils.readFully(in,  decompressConcatenated);	  InputStream    in    =    in.read();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	215	None	replace
1370	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  decompressConcatenated,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,boolean,int)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  decompressConcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  SNAPPY_RAW,  decompressConcatenated,  signatureLength);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,boolean,int)	15	None	replace
1371	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	3	None	add
1372	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(  [CE]  illegal  start  of  expression  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
1373	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    decompressUntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	193	None	replace
1374	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  DEFLATE)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    decompressUntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	193	None	replace
1375	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	20	None	add
1376	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenation);  }  [CE]  cannot  find  symbol  decompressConcatenation  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenation);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenation);  }	  	non-compiled	[CE]  cannot  find  symbol  decompressConcatenation	20	None	add
1377	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GZipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GZipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    -signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	146	None	add
1378	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  PACK200);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,String)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  PACK200);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  PACK200);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength,    UntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,String)	226	None	replace
1379	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  GZIP2);  [CE]  cannot  find  symbol  GZIP2  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  GZIP2);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  GZIP2);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength,    UntilEOF);    	non-compiled	[CE]  cannot  find  symbol  GZIP2	226	None	replace
1380	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(Gzip  [CE]  ')'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(Gzip  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(Gzip	  	non-compiled	[CE]  ')'  expected	106	None	add
1381	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches  [CE]  ')'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches	  	non-compiled	[CE]  ')'  expected	106	None	add
1382	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(sig  [CE]  ')'  expected  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(sig  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(sig	  	non-compiled	[CE]  ')'  expected	106	None	add
1383	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompress    	non-compiled	[CE]  ')'  expected	131	None	replace
1384	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompress))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  illegal  start  of  expression  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompress))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompress))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompress    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1385	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  illegal  start  of  expression  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompress    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1386	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signatureLength,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	185	None	replace
1387	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	185	None	replace
1388	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  pendingEOF  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	185	None	replace
1389	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF)  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	12	None	replace
1390	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated);  [CE]  cannot  find  symbol  MutableCompressorInputStream  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  MutableCompressorInputStream	12	None	replace
1391	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,Boolean)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,Boolean)	44	None	replace
1392	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  DEFLATE)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    decompressUntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	190	None	replace
1393	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GZipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GZipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	166	None	add
1394	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  0,)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  0,)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  0,)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  illegal  start  of  expression	166	None	add
1395	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	58	None	replace
1396	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	58	None	replace
1397	[BUG]  [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(in,  decompressConcatenated);  [CE]  variable  signatureLength  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	Integer  signatureLength  =  IOUtils.readFully(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  variable  signatureLength  is  already  defined  in  method  createCompressorInputStream(InputStream)	58	None	replace
1398	[BUG]  [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(in,  decompressConcatenated);  if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark  [CE]  not  a  statement  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(in,  decompressConcatenated);  if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	Integer  signatureLength  =  IOUtils.readFully(in,  decompressConcatenated);  if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  not  a  statement	58	None	replace
1399	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)  {  return  new  MutableCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	58	None	replace
1400	[BUG]  [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(in,  decompressConcatenated);  if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.  [CE]  <identifier>  expected  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(in,  decompressConcatenated);  if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	Integer  signatureLength  =  IOUtils.readFully(in,  decompressConcatenated);  if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
1401	[BUG]  [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(in,  decompressConcatenated);  if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  [CE]  'catch'  without  'try'  [FE]                CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(in,  decompressConcatenated);  if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	Integer  signatureLength  =  IOUtils.readFully(in,  decompressConcatenated);  if(GzipCompressorInputStream.matches(signatureLength,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  'catch'  without  'try'	58	None	replace
1402	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  Integer.toHexString(signatureLength),  in.readLine());  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  Integer.toHexString(signatureLength),  in.readLine());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  Integer.toHexString(signatureLength),  in.readLine());	  return    new    GzipCompressorInputStream(in,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
1403	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.readIn();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.readIn();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.readIn();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	74	None	replace
1404	[BUG]  [BUGGY]  InputStream  in  =  BZip2CompressorInputStream.readIn();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  BZip2CompressorInputStream.readIn();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  BZip2CompressorInputStream.readIn();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	74	None	replace
1405	[BUG]  [BUGGY]  InputStream  in  =  IOUtils.readIn(in,  signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  IOUtils.readIn(in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  IOUtils.readIn(in,  signatureLength);	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	74	None	replace
1406	[BUG]  [BUGGY]  InputStream  in  =  GZIP.readIn();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GZIP.readIn();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GZIP.readIn();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	74	None	replace
1407	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(in,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(in,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(in,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	208	None	replace
1408	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	83	None	replace
1409	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  length))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  length  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  length))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  length))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  length	83	None	replace
1410	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	164	None	replace
1411	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	164	None	replace
1412	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	164	None	replace
1413	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	164	None	replace
1414	[BUG]  [BUGGY]  InputStream  in  =  in.readIn();  if(in!=  null)  {  [CE]  'catch'  without  'try'  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  in.readIn();  if(in!=  null)  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readIn();  if(in!=  null)  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    	non-compiled	[CE]  'catch'  without  'try'	84	None	replace
1415	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ')'  expected	85	None	replace
1416	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ')'  expected	85	None	replace
1417	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,InputStream,int)  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  in,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,InputStream,int)	18	None	replace
1418	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  signatureLength,  UntilEOF);  [CE]  cannot  find  symbol  UntilEOF  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  signatureLength,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  signatureLength,  UntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	18	None	replace
1419	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  DEFLATE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,String)  [FE]                              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  DEFLATE);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,InputStream,String)	18	None	replace
1420	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  DEFLATE);  [CE]  cannot  find  symbol  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  DEFLATE);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.getInstance(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1421	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(decompressConcatenated,  in);  [CE]  cannot  find  symbol  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(decompressConcatenated,  in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(decompressConcatenated,  in);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.getInstance(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1422	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  UntilEOF);  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  UntilEOF);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.getInstance(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1423	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  0);  [CE]  cannot  find  symbol  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressConcatenated,  0);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.getInstance(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1424	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressUntilEOF);  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(in,  decompressUntilEOF);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.getInstance(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1425	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	93	None	replace
1426	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	199	None	replace
1427	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	199	None	replace
1428	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0)  {  return  new  MutableCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	55	None	replace
1429	[BUG]  [BUGGY]  ResolvedCompressorInputStream  in  =  new  ResolvedCompressorInputStream(in);  [CE]  cannot  find  symbol  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ResolvedCompressorInputStream  in  =  new  ResolvedCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	ResolvedCompressorInputStream  in  =  new  ResolvedCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
1430	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0)||  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  not  a  statement  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0)||  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0)||  MutableCompressorInputStream.matches(signature,  0))  {  return  new  MutableCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	167	None	replace
1431	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  not  a  statement  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	167	None	replace
1432	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  UntilEOF);  [CE]  cannot  find  symbol  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  UntilEOF);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.create(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
1433	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  DEFLATE);  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  DEFLATE);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.create(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
1434	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(decompressConcatenated,  in);  [CE]  cannot  find  symbol  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(decompressConcatenated,  in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(decompressConcatenated,  in);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.create(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
1435	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  null,  0,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,<null>,int,int)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  null,  0,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  null,  0,  signatureLength);	  return    new    GzipCompressorInputStream(in,    0,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,<null>,int,int)	102	None	replace
1436	[BUG]  [BUGGY]  Return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  not  a  statement  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  Return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	Return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    compressUntilEOF);    	non-compiled	[CE]  not  a  statement	80	None	replace
1437	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  Integer.MAX_VALUE);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  Integer.MAX_VALUE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  Integer.MAX_VALUE);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.length);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int)	14	None	replace
1438	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  DEFLATE);  [CE]  cannot  find  symbol  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  DEFLATE);	  MutableCompressorInputStream    in    =    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1439	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  0);  [CE]  cannot  find  symbol  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  0);	  MutableCompressorInputStream    in    =    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1440	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  null,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,<null>,Boolean)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  null,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  null,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,<null>,Boolean)	105	None	replace
1441	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	10	None	replace
1442	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(decompressConcatenated,  in);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(decompressConcatenated,  in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(decompressConcatenated,  in);	  InputStream    in    =    new    GzipInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	72	None	replace
1443	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  0);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(in,  0);	  InputStream    in    =    new    GzipInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	72	None	replace
1444	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GZipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GZipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	175	None	add
1445	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GZip2CompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GZip2CompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZip2CompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	175	None	add
1446	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(in,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	153	None	replace
1447	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	153	None	replace
1448	[BUG]  [BUGGY]  &&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  illegal  start  of  expression  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  &&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  ||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
1449	[BUG]  [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	152	None	replace
1450	[BUG]  [BUGGY]  if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  FramedCompressorInputStream  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  FramedCompressorInputStream	152	None	replace
1451	[BUG]  [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GZip2CompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	152	None	replace
1452	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.read());  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.read());  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.read());  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	218	None	replace
1453	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	218	None	replace
1454	[BUG]  [BUGGY]  if(!GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(!GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(!GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	218	None	replace
1455	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  return  new  GzipCompressorInputStream(in);  }  [CE]  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  	3	None	add
1456	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	205	None	replace
1457	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	21	None	replace
1458	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	123	None	replace
1459	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	123	None	replace
1460	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	4	2	replace
1461	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)&&    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	4	2	replace
1462	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  if(BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    if(BZip2CompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	112	None	add
1463	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	116	None	add
1464	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)  [CE]  ')'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)	  	non-compiled	[CE]  ')'  expected	8	None	add
1465	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(signatureLength  ==  0)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(signatureLength  ==  0)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	118	2	replace
1466	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(signatureLength  ==  0)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(signatureLength  ==  0)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	118	2	replace
1467	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	118	2	replace
1468	[BUG]  [BUGGY]  if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	118	2	replace
1469	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(!decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(!decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	118	2	replace
1470	[BUG]  [BUGGY]  if(!decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(!decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(!decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	118	2	replace
1471	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(signatureLength  ==  0)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(signatureLength  ==  0)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  CompressorException  	118	2	replace
1472	[BUG]  [BUGGY]  if(signatureLength  ==  0)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  CompressorException  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(signatureLength  ==  0)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(signatureLength  ==  0)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  CompressorException  	118	2	replace
1473	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	118	2	replace
1474	[BUG]  [BUGGY]  if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	compilable	  [FE]  NullPointerException  	118	2	replace
1475	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	115	None	replace
1476	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	compilable	  [FE]  NullPointerException  	115	2	replace
1477	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	compilable	  [FE]  NullPointerException  	115	2	replace
1478	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	115	None	replace
1479	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	115	None	replace
1480	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    DecompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(boolean)	181	None	replace
1481	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(signature,  DecompressConcatenated);  [CE]  cannot  find  symbol  DecompressConcatenated  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(signature,  DecompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(signature,  DecompressConcatenated);	  return    new    GzipCompressorInputStream(in,    DecompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol  DecompressConcatenated	181	None	replace
1482	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	60	None	replace
1483	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	60	None	replace
1484	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	161	None	replace
1485	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	161	None	replace
1486	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  this.decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	return  new  GzipCompressorInputStream(in,  this.decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    null);    	compilable	  [FE]  CompressorException  	105	2	replace
1487	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  this.decompressConcatenated);  [FE]  CompressorException  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  this.decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  this.decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    null);    	compilable	  [FE]  CompressorException  	105	2	replace
1488	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.setLength(GzipCompressorInputStream.decompressConcatenated);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  decompressConcatenated  has  private  access  in  GzipCompressorInputStream  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.setLength(GzipCompressorInputStream.decompressConcatenated);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    in.setLength(GzipCompressorInputStream.decompressConcatenated);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  decompressConcatenated  has  private  access  in  GzipCompressorInputStream	50	None	add
1489	[BUG]  [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.setLength(GzipCompressorInputStream.getLength());  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  in.setLength(GzipCompressorInputStream.getLength());  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    in.setLength(GzipCompressorInputStream.getLength());  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
1490	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  1.0))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  1.0))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  1.0))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    0.0))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	149	None	replace
1491	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  in.length);  [CE]  cannot  find  symbol  length  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  in.length);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  signatureLength,  in.length);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    signatureLength,    UntilEOF);    	non-compiled	[CE]  cannot  find  symbol  length	226	None	replace
1492	[BUG]  [BUGGY]  rayCompressorInputStream  in  =  newRayCompressorInputStream(in,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  rayCompressorInputStream  in  =  newRayCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	rayCompressorInputStream  in  =  newRayCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
1493	[BUG]  [BUGGY]  nisip  =  IOUtils.readFully(signature,  decompressConcatenated);  [CE]  cannot  find  symbol  nisip  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisip  =  IOUtils.readFully(signature,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisip  =  IOUtils.readFully(signature,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  nisip	82	None	replace
1494	[BUG]  [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(in,  signatureLength);  [CE]  variable  signatureLength  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	Integer  signatureLength  =  IOUtils.readFully(in,  signatureLength);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  variable  signatureLength  is  already  defined  in  method  createCompressorInputStream(InputStream)	82	None	replace
1495	[BUG]  [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(signature,  decompressConcatenated);  [CE]  variable  signatureLength  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  Integer  signatureLength  =  IOUtils.readFully(signature,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	Integer  signatureLength  =  IOUtils.readFully(signature,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  variable  signatureLength  is  already  defined  in  method  createCompressorInputStream(InputStream)	82	None	replace
1496	[BUG]  [BUGGY]  InputStream  in  =  in.readIO();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  in.readIO();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readIO();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	74	None	replace
1497	[BUG]  [BUGGY]  InputStream  in  =  out.readIn();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  out.readIn();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  out.readIn();	  InputStream    in    =    in.readIn();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	74	None	replace
1498	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  reset();  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.re    reset();    }    	non-compiled	[CE]  ';'  expected	142	None	replace
1499	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length  -  signatureLength);  [CE]  cannot  find  symbol  length  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length  -  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.length  -  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.length);    	non-compiled	[CE]  cannot  find  symbol  length	14	None	replace
1500	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	163	None	replace
1501	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	163	None	replace
1502	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  e);  [CE]  cannot  find  symbol  e  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  e);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  e);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    DEFLATE,    e);    	non-compiled	[CE]  cannot  find  symbol  e	41	None	replace
1503	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in.read(),  in.read());  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,int)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in.read(),  in.read());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in.read(),  in.read());	  return    new    GzipCompressorInputStream(in,    in.read());    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,int,int)	220	None	replace
1504	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in.read(),  in.decompressConcatenated);  [CE]  cannot  find  symbol  decompressConcatenated  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in.read(),  in.decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in.read(),  in.decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    in.read());    	non-compiled	[CE]  cannot  find  symbol  decompressConcatenated	220	None	replace
1505	[BUG]  [BUGGY]  InputStream  in  =  in.readIOF();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  in.readIOF();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readIOF();	  InputStream    in    =    in.readInt();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	75	None	replace
1506	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
1507	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
1508	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
1509	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    	compilable	  [FE]  CompressorException  	101	2	replace
1510	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    	compilable	  [FE]  CompressorException  	101	2	replace
1511	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	101	None	replace
1512	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length  [CE]  ')'  expected  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    	non-compiled	[CE]  ')'  expected	101	None	replace
1513	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature  [CE]  ')'  expected  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    	non-compiled	[CE]  ')'  expected	101	None	replace
1514	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	25	None	replace
1515	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  UntilEOF);  [CE]  cannot  find  symbol  UntilEOF  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  UntilEOF);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	37	None	replace
1516	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  e);  [CE]  cannot  find  symbol  e  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  e);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  e);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol  e	37	None	replace
1517	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  null))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.close();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	211	None	replace
1518	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,Boolean)  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  SNAPPY_RAW,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,String,Boolean)	42	None	replace
1519	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  return  new  GzipCompressorInputStream(in);  }  [CE]  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  	56	None	replace
1520	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in.mark(signatureLength),  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in.mark(signatureLength),  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in.mark(signatureLength),  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
1521	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	134	None	replace
1522	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  UntilEOF  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	117	None	replace
1523	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	117	None	replace
1524	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	117	None	replace
1525	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  pending  [FE]          NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  pending))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  pending	117	None	replace
1526	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	compilable	  [FE]  CompressorException  	117	2	replace
1527	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [FE]  CompressorException  [FE]            NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	compilable	  [FE]  CompressorException  	117	2	replace
1528	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	117	None	replace
1529	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  pendingEOF  [FE]                NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	117	None	replace
1530	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	164	None	replace
1531	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	164	None	replace
1532	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  DEFLATE);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signatureLength,  DEFLATE);	  InputStream    in    =    new    GzipCompressorInputStream(signatureLength);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	68	None	replace
1533	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated,  0);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated,  0);	  InputStream    in    =    new    GzipInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	72	None	replace
1534	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated,  SNAPPY_RAW);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(in,  decompressConcatenated,  SNAPPY_RAW);	  InputStream    in    =    new    GzipInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	72	None	replace
1535	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signatureLength,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	186	None	replace
1536	[BUG]  [BUGGY]  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }	  GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	169	None	replace
1537	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature,  decompressConcatenated,  DEFLATE);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature,  decompressConcatenated,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signature,  decompressConcatenated,  DEFLATE);	  InputStream    in    =    new    GzipCompressorInputStream(signature,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	76	None	replace
1538	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature,  decompressConcatenated,  UntilEOF);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(signature,  decompressConcatenated,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(signature,  decompressConcatenated,  UntilEOF);	  InputStream    in    =    new    GzipCompressorInputStream(signature,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	76	None	replace
1539	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  DEFLATE)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	135	None	replace
1540	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  -1)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  -1)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  -1)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	135	None	replace
1541	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  -signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  -signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  -signatureLength)  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	135	None	replace
1542	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	81	None	add
1543	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  CompressorException  	81	2	add
1544	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [FE]  CompressorException  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.mark(signatureLength);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  	compilable	  [FE]  CompressorException  	81	2	add
1545	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	136	None	replace
1546	[BUG]  [BUGGY]  if(SyntheticCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  SyntheticCompressorInputStream  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(SyntheticCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(SyntheticCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  SyntheticCompressorInputStream	108	None	replace
1547	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  SignatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  SignatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  SignatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  SignatureLength	108	None	replace
1548	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	compilable	  [FE]  NullPointerException  	110	2	add
1549	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	compilable	  [FE]  NullPointerException  	110	2	add
1550	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSION);  }  [CE]  cannot  find  symbol  DECOMPRESSION  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSION);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSION);  }	  	non-compiled	[CE]  cannot  find  symbol  DECOMPRESSION	110	None	add
1551	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  [CE]  'catch'  without  'try'  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.re    	non-compiled	[CE]  'catch'  without  'try'	96	None	replace
1552	[BUG]  [BUGGY]  }  [CE]  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	}	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  	85	None	replace
1553	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  compressConcatenated,  signatureLength);  [CE]  cannot  find  symbol  compressConcatenated  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  compressConcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  compressConcatenated,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol  compressConcatenated	183	None	replace
1554	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated?  DEFLATE  :  in,  signatureLength);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Object,int)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated?  DEFLATE  :  in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated?  DEFLATE  :  in,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    signatureLength);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Object,int)	183	None	replace
1555	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressCONcatenated,  signatureLength);  [CE]  cannot  find  symbol  decompressCONcatenated  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressCONcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressCONcatenated,  signatureLength);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol  decompressCONcatenated	183	None	replace
1556	[BUG]  [BUGGY]  if(Integer.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(Integer.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(Integer.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(in,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
1557	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	58	None	replace
1558	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	58	None	replace
1559	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	58	2	replace
1560	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    	compilable	  [FE]  CompressorException  	58	2	replace
1561	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	58	None	replace
1562	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength  [CE]  ')'  expected  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signatureLength	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ')'  expected	58	None	replace
1563	[BUG]  [BUGGY]  if(DECEMBER.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  DECEMBER  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(DECEMBER.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(DECEMBER.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  DECEMBER	197	None	replace
1564	[BUG]  [BUGGY]  in.mark(signatureLength);  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated);	  	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	52	None	add
1565	[BUG]  [BUGGY]  in.mark(signatureLength);  InputStream  in  =  new  GzipCompressorInputStream(in);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  InputStream  in  =  new  GzipCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    InputStream  in  =  new  GzipCompressorInputStream(in);	  	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	52	None	add
1566	[BUG]  [BUGGY]  in.mark(signatureLength);  in.write(GZIP);  [CE]  cannot  find  symbol  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.write(GZIP);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.write(GZIP);	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
1567	[BUG]  [BUGGY]  in.mark(signatureLength);  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    InputStream  in  =  new  GzipCompressorInputStream(decompressConcatenated);	  	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	52	None	add
1568	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.skip(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.mark(signatureLength);    in.skip(signatureLength);	  	compilable	  [FE]  CompressorException  	52	2	add
1569	[BUG]  [BUGGY]  in.mark(signatureLength);  in.skip(signatureLength);  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.skip(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.skip(signatureLength);	  	compilable	  [FE]  CompressorException  	52	2	add
1570	[BUG]  [BUGGY]  in.mark(signatureLength);  in.write(GZIP,  0,  signatureLength);  [CE]  cannot  find  symbol  [FE]              CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.mark(signatureLength);  in.write(GZIP,  0,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.mark(signatureLength);    in.write(GZIP,  0,  signatureLength);	  	non-compiled	[CE]  cannot  find  symbol	52	None	add
1571	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  PACK200);  [CE]  cannot  find  symbol  BZIP  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  PACK200);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  PACK200);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    BZIP2);    	non-compiled	[CE]  cannot  find  symbol  BZIP	47	None	replace
1572	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  LZMA);  [CE]  cannot  find  symbol  BZIP  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  LZMA);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP,  LZMA);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    BZIP2);    	non-compiled	[CE]  cannot  find  symbol  BZIP	47	None	replace
1573	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2,  PACK200);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2,  PACK200);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  BZIP2,  PACK200);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    BZIP2);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)	47	None	replace
1574	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  decompressUntilEOF);  [CE]  cannot  find  symbol  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.create(in,  decompressConcatenated,  decompressUntilEOF);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.create(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	217	None	replace
1575	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  in.readLine());  [CE]  cannot  find  symbol  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  in.readLine());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in,  in.readLine());	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
1576	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readLine(),  in.readCharacters());  [CE]  cannot  find  symbol  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readLine(),  in.readCharacters());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readLine(),  in.readCharacters());	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
1577	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.getCharacterIndex());  [CE]  cannot  find  symbol  [FE]                            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.getCharacterIndex());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.getCharacterIndex());	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
1578	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.getCharacters());  [CE]  cannot  find  symbol  [FE]                              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.getCharacters());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.getCharacters());	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
1579	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	61	2	add
1580	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  	compilable	  [FE]  CompressorException  	61	2	add
1581	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in  [CE]  ')'  expected  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in	  	non-compiled	[CE]  ')'  expected	61	None	add
1582	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  not  a  statement  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompress    	non-compiled	[CE]  not  a  statement	131	None	replace
1583	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(out,  decompressConcatenated);  [CE]  cannot  find  symbol  out  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(out,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(out,  decompressConcatenated);	  return    new    GzipCompressorInputStream(in,    compressConcatenated);    	non-compiled	[CE]  cannot  find  symbol  out	77	None	replace
1584	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  createFramedSnappyCompressorInputStream(in);  [CE]  cannot  find  symbol  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  createFramedSnappyCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream  in  =  createFramedSnappyCompressorInputStream(in);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
1585	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  createFramedSnappyCompressorInputStream(in,  decompressConcatenated);  [CE]  cannot  find  symbol  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  createFramedSnappyCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream  in  =  createFramedSnappyCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
1586	[BUG]  [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.print(signature.length);  }  [CE]  cannot  find  symbol  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]          if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.mark(signature.length);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.print(signature.length);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	                if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.mark(signature.length);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.print(signature.length);  }	  	non-compiled	[CE]  cannot  find  symbol	100	None	add
1587	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(decompressConcatenated,  signatureLength);  [CE]  cannot  find  symbol  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(decompressConcatenated,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(decompressConcatenated,  signatureLength);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.getInstance(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1588	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(decompressConcatenated,  signature);  [CE]  cannot  find  symbol  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(decompressConcatenated,  signature);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  GzipCompressorInputStream.getInstance(decompressConcatenated,  signature);	  MutableCompressorInputStream    in    =    GzipCompressorInputStream.getInstance(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	216	None	replace
1589	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  [CE]  illegal  start  of  expression  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  signatureLength);	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1590	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
1591	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  -1))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  -1))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  -1))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
1592	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  UntilEOF);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	191	None	replace
1593	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  decompressUntilEOF);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream  in  =  new  GuvernedSnappyCompressorInputStream(in,  decompressUntilEOF);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
1594	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  createGzipCompressorInputStream(in,  decompressUntilEOF);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream  in  =  createGzipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream  in  =  createGzipCompressorInputStream(in,  decompressUntilEOF);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
1595	[BUG]  [BUGGY]  try  ==  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  '{'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  try  ==  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	try  ==  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  '{'  expected	223	None	replace
1596	[BUG]  [BUGGY]  rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	188	None	replace
1597	[BUG]  [BUGGY]  rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	188	None	replace
1598	[BUG]  [BUGGY]  rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	188	None	replace
1599	[BUG]  [BUGGY]  rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	188	None	replace
1600	[BUG]  [BUGGY]  rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	188	None	replace
1601	[BUG]  [BUGGY]  rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	rayCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	188	None	replace
1602	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  compressConcatenated  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  compressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  compressConcatenated	143	None	replace
1603	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	212	None	replace
1604	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [CE]  not  a  statement  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.re	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  not  a  statement	172	None	replace
1605	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  not  a  statement  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
1606	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [CE]  not  a  statement  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
1607	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  not  a  statement  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
1608	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  not  a  statement  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
1609	[BUG]  [BUGGY]  rayCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  not  a  statement  [FE]            CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  rayCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	rayCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  not  a  statement	127	None	replace
1610	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  If(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	88	None	replace
1611	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	185	None	replace
1612	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	27	None	replace
1613	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	27	None	replace
1614	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	207	None	replace
1615	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	207	None	replace
1616	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	207	None	replace
1617	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	207	2	replace
1618	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	207	2	replace
1619	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(in);  }	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	207	None	replace
1620	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(  [CE]  illegal  start  of  expression  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  else  {  return  new  GzipCompressorInputStream(	          if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
1621	[BUG]  [BUGGY]  if(Integer.matches(signature,  signatureLength))  {  return  new  IntegerCompressorInputStream(in);  }  [CE]  cannot  find  symbol  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(Integer.matches(signature,  signatureLength))  {  return  new  IntegerCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(Integer.matches(signature,  signatureLength))  {  return  new  IntegerCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(Signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1622	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream  [CE]  '('  or  '['  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  in.mark(signatureLength);  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream	  in.mark(signatureLength);    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  '('  or  '['  expected	51	None	replace
1623	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  [CE]  illegal  start  of  expression  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
1624	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(  [CE]  illegal  start  of  expression  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
1625	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    pending))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	124	None	replace
1626	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorOutputStream(in);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorOutputStream(InputStream)  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorOutputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorOutputStream(in);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorOutputStream(InputStream)	54	None	add
1627	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  SignatureLength	201	None	replace
1628	[BUG]  [BUGGY]  if(Integer.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(Integer.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(Integer.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol	201	None	replace
1629	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF),  decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF),  decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF),  decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  	121	None	replace
1630	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,Boolean)  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressUntilEOF,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,Boolean,Boolean)	121	None	replace
1631	[BUG]  [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	152	None	replace
1632	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in  [CE]  ')'  expected  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ')'  expected	198	None	replace
1633	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1634	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  NullPointerException  	198	2	replace
1635	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  NullPointerException  	198	2	replace
1636	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	198	None	replace
1637	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream  [CE]  '('  or  '['  expected  [FE]                  NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  '('  or  '['  expected	198	None	replace
1638	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    decompressUntilEOF))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	199	None	replace
1639	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  [CE]  illegal  start  of  expression  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }	  ||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
1640	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	90	None	replace
1641	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  return  new  GzipCompressorInputStream(in);  }  [CE]  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  {  return  new  GzipCompressorInputStream(in);  }  if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    0)||    GzipCompressorInputStream.matches(signature,    0))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,  0)||  GzipCompressorInputStream.matches(signature,  0))  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  	166	None	add
1642	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signatureLength,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  ';'  expected	137	None	replace
1643	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  GZip2CompressorInputStream  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	non-compiled	[CE]  cannot  find  symbol  GZip2CompressorInputStream	126	None	add
1644	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(GZipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength)||        GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GZipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	126	None	add
1645	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	99	None	replace
1646	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  0L,  1);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,long,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  0L,  1);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  0L,  1);	  return    new    GzipCompressorInputStream(in,    0L);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,long,int)	104	None	replace
1647	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  decompressConcatenated,  UntilEOF);  [CE]  cannot  find  symbol  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  decompressConcatenated,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  decompressConcatenated,  UntilEOF);	  MutableCompressorInputStream    in    =    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1648	[BUG]  [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  [CE]  cannot  find  symbol  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream  in  =  new  MutableCompressorInputStream(in,  decompressConcatenated,  DEFLATE);	  MutableCompressorInputStream    in    =    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	214	None	replace
1649	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  UntilEOF  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	24	None	replace
1650	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  SignatureLength	83	None	replace
1651	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DECOMPRESSION))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [CE]  cannot  find  symbol  DECOMPRESSION  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DECOMPRESSION))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DECOMPRESSION))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  DECOMPRESSION	83	None	replace
1652	[BUG]  [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in);  }	  InputStream    in    =    GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	7	None	replace
1653	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
1654	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  ';'  expected	111	None	replace
1655	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	153	None	replace
1656	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,Boolean)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  decompressUntilEOF);	  new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,Boolean)	40	None	replace
1657	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,String)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  SNAPPY_RAW);	  new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,boolean,String)	40	None	replace
1658	[BUG]  [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  e);  [CE]  cannot  find  symbol  e  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  e);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  e);	  new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol  e	40	None	replace
1659	[BUG]  [BUGGY]  if(in!=  null)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  unreachable  statement  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(in!=  null)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(in!=  null)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  unreachable  statement	177	None	replace
1660	[BUG]  [BUGGY]  if(in!=  null)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  final  parameter  in  may  not  be  assigned  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(in!=  null)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(in!=  null)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  final  parameter  in  may  not  be  assigned	177	None	replace
1661	[BUG]  [BUGGY]  if(in!=  null)  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(in!=  null)  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(in!=  null)  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	177	None	replace
1662	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	180	None	replace
1663	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated    	non-compiled	[CE]  ')'  expected	160	None	replace
1664	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	155	None	replace
1665	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GuvernedSnappyCompressorInputStream(in);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	155	None	replace
1666	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  not  a  statement  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)||  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  not  a  statement	107	None	replace
1667	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  in.readLine());  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  in.readLine());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  in.readLine());	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
1668	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  in.getCharacterIndex());  [CE]  cannot  find  symbol  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  in.getCharacterIndex());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  decompressConcatenated,  in.getCharacterIndex());	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressConcatenated,    signatureLength);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
1669	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.re  reset();  }  [CE]  ';'  expected  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.re  reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.re  reset();  }	  	non-compiled	[CE]  ';'  expected	59	None	add
1670	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  SNAPPY_RAW);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  SNAPPY_RAW);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  SNAPPY_RAW);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    DEFLATE);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)	48	None	replace
1671	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  DECOMPRESSION);  [CE]  cannot  find  symbol  DECOMPRESSION  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  DECOMPRESSION);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  DEFLATE,  DECOMPRESSION);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    DEFLATE);    	non-compiled	[CE]  cannot  find  symbol  DECOMPRESSION	48	None	replace
1672	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [CE]  not  a  statement  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)&&  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DEFLATE);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  not  a  statement	196	None	replace
1673	[BUG]  [BUGGY]  if(pendingEOF.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  cannot  find  symbol  pendingEOF  [FE]                      NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(pendingEOF.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(pendingEOF.matches(signature,  decompressUntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    pendingEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	125	None	replace
1674	[BUG]  [BUGGY]  If(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  If(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	If(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    pending))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  ';'  expected	171	None	replace
1675	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  not  a  statement  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  not  a  statement	128	None	replace
1676	[BUG]  [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  illegal  start  of  expression  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  ||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1677	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [CE]  ')'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ')'  expected	128	None	replace
1678	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressCon  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressCon  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  signatureLength))  {  return  new  MutableCompressorInputStream(in,  decompressCon	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressCon    	non-compiled	[CE]  ';'  expected	128	None	replace
1679	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  return  null;  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  return  null;  }	  return    new    GzipCompressorInputStream(in);    	compilable	  [FE]  CompressorException  	145	2	replace
1680	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  return  null;  }  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  return  null;  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  else  {  in.close();  return  null;  }	  return    new    GzipCompressorInputStream(in);    	compilable	  [FE]  CompressorException  	145	2	replace
1681	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    decompressUntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	190	None	replace
1682	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  pendingEOF  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	170	None	replace
1683	[BUG]  [BUGGY]  if(Integer.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(Integer.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(Integer.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,    SignatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
1684	[BUG]  [BUGGY]  if('catch'  without  'try')  {  [CE]  unclosed  character  literal  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if('catch'  without  'try')  {  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if('catch'  without  'try')  {	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    	non-compiled	[CE]  unclosed  character  literal	84	None	replace
1685	[BUG]  [BUGGY]  InputStream  in  =  in.read(signatureLength);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  in.read(signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.read(signatureLength);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	84	None	replace
1686	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated);  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    InputStream    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	122	None	replace
1687	[BUG]  [BUGGY]  if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  final  parameter  in  may  not  be  assigned  [FE]                  NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    InputStream    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  final  parameter  in  may  not  be  assigned	122	None	replace
1688	[BUG]  [BUGGY]  if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]                    NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    InputStream    in    =    new    GzipCompressorInputStream(in,    decompressUntilEOF);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	122	None	replace
1689	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,        signatureLength))        {        return        new        GzipCompressorInputStream(in,        decompressConcatenated);        }        else        {        in.reset();        }        if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	94	None	add
1690	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE)&&  GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	162	None	replace
1691	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [CE]  ')'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  GzipCompressorInputStream.matches(signature,  UntilEOF))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)&&    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ')'  expected	162	None	replace
1692	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DEFLATE);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	13	None	replace
1693	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readBytes());  [CE]  cannot  find  symbol  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readBytes());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.readBytes());	  return    new    GzipCompressorInputStream(in,    decompressConcatenated,    in);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
1694	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	194	None	replace
1695	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  -1))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  -1))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  -1))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  GuvernedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  ';'  expected	194	None	replace
1696	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readLine(),  in.readCharacters());  [CE]  cannot  find  symbol  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readLine(),  in.readCharacters());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in.readLine(),  in.readCharacters());	  return    new    GzipCompressorInputStream(in,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
1697	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  this.in.readLine());  [CE]  cannot  find  symbol  in  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  this.in.readLine());  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  this.in.readLine());	  return    new    GzipCompressorInputStream(in,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol  in	221	None	replace
1698	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readLine()  +  signatureLength);  [CE]  cannot  find  symbol  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in.readLine()  +  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in.readLine()  +  signatureLength);	  return    new    GzipCompressorInputStream(in,    in.readLine());    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
1699	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated),  decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  [FE]                        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated),  decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated),  decompressUntilEOF)  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  	93	None	replace
1700	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.read());  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.read());  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  in.read());  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	93	None	replace
1701	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  MutableCompressorInputStream(in,  decompressUntilEOF);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	158	None	replace
1702	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  MutableCompressorInputStream(in);	  MutableCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    MutableCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	158	None	replace
1703	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.close();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	in.close();	  in.mark(signatureLength);    	compilable	  [FE]  CompressorException  	53	2	replace
1704	[BUG]  [BUGGY]  in.close();  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.close();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.close();	  in.mark(signatureLength);    	compilable	  [FE]  CompressorException  	53	2	replace
1705	[BUG]  [BUGGY]  in.setLength(GZipCompressorInputStream.decompressConcatenated);  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.setLength(GZipCompressorInputStream.decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.setLength(GZipCompressorInputStream.decompressConcatenated);	  in.mark(signatureLength);    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	53	None	replace
1706	[BUG]  [BUGGY]  in.write(GZIP);  [CE]  cannot  find  symbol  [FE]        CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.write(GZIP);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.write(GZIP);	  in.mark(signatureLength);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
1707	[BUG]  [BUGGY]  in.setLength(GzipCompressorInputStream.decompressConcatenated);  [CE]  decompressConcatenated  has  private  access  in  GzipCompressorInputStream  [FE]          CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  in.setLength(GzipCompressorInputStream.decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	in.setLength(GzipCompressorInputStream.decompressConcatenated);	  in.mark(signatureLength);    	non-compiled	[CE]  decompressConcatenated  has  private  access  in  GzipCompressorInputStream	53	None	replace
1708	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated,  DEFLATE);	  InputStream    in    =    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	28	None	replace
1709	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated,  0);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated,  0);	  InputStream    in    =    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	28	None	replace
1710	[BUG]  [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated,  UntilEOF);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipCompressorInputStream(in,  decompressConcatenated,  UntilEOF);	  InputStream    in    =    new    GzipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	28	None	replace
1711	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	119	None	replace
1712	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  encoding))  {  return  new  MutableCompressorInputStream(in);  }  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  encoding))  {  return  new  MutableCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  encoding))  {  return  new  MutableCompressorInputStream(in);  }	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in);    }    	non-compiled	[CE]  ';'  expected	157	None	replace
1713	[BUG]  [BUGGY]  nisipLength  =  GZip2CompressorInputStream.matches(signature,  signatureLength);  [CE]  cannot  find  symbol  nisipLength  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisipLength  =  GZip2CompressorInputStream.matches(signature,  signatureLength);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisipLength  =  GZip2CompressorInputStream.matches(signature,  signatureLength);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  nisipLength	189	None	replace
1714	[BUG]  [BUGGY]  nisipLength  =  GZip2CompressorInputStream.matches(signature,  signatureLength)&&  in.mark(decompressConcatenated);  [CE]  cannot  find  symbol  nisipLength  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  nisipLength  =  GZip2CompressorInputStream.matches(signature,  signatureLength)&&  in.mark(decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	nisipLength  =  GZip2CompressorInputStream.matches(signature,  signatureLength)&&  in.mark(decompressConcatenated);	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    	non-compiled	[CE]  cannot  find  symbol  nisipLength	189	None	replace
1715	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  in.mark(signatureLength))  {  return  new  GzipCompressorInputStream(in,  signatureLength);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    signatureLength);    }    else    {    in.reset();    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	219	None	replace
1716	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  signature,  UntilEOF);  [CE]  cannot  find  symbol  UntilEOF  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(decompressConcatenated,  signature,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(decompressConcatenated,  signature,  UntilEOF);	  return    new    GzipCompressorInputStream(signature,    decompressUntilEOF);    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	200	None	replace
1717	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in.read(),  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(int,Boolean)  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in.read(),  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in.read(),  decompressUntilEOF);	  return    new    GzipCompressorInputStream(signature,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(int,Boolean)	200	None	replace
1718	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  InputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  InputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)&&  InputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    decompressConcatenated)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	2	None	replace
1719	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip3CompressorInputStream(in);  }  [CE]  cannot  find  symbol  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip3CompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip3CompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
1720	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  cannot  find  symbol  SignatureLength  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  SignatureLength))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    If(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  cannot  find  symbol  SignatureLength	64	None	replace
1721	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompress))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  decompress  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompress))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompress))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GzipCompressorInputStream.matches(signature,    DEFLATE))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  decompress	224	None	replace
1722	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  LZMA);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  LZMA);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  LZMA);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    PACK200);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,String)	222	None	replace
1723	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }	  if(GZipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	184	None	replace
1724	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [CE]  cannot  find  symbol  DECOMPRESSED  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }	  	non-compiled	[CE]  cannot  find  symbol  DECOMPRESSED	91	None	add
1725	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSED);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    DECOMPRESSED);    }    	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	11	None	replace
1726	[BUG]  [BUGGY]  InputStream  in  =  in.readLine();  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  in.readLine();  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readLine();	  InputStream    in    =    in.read();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	215	None	replace
1727	[BUG]  [BUGGY]  InputStream  in  =  IOUtils.readFully(in,  signature.length);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  IOUtils.readFully(in,  signature.length);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  IOUtils.readFully(in,  signature.length);	  InputStream    in    =    in.read();    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	215	None	replace
1728	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  PACK200);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  PACK200);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  PACK200);	  return    new    GzipCompressorInputStream(in,    SNAPPY_RAW);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String)	78	None	replace
1729	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	138	None	replace
1730	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  -1))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [CE]  ';'  expected  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  -1))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  -1))  {  return  new  MutableCompressorInputStream(in,  decompressConcatenated);	  MutableCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	138	None	replace
1731	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  new  GzipCompressorInputStream(in)))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  new  GzipCompressorInputStream(in)))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in);    if(GzipCompressorInputStream.matches(signature,  new  GzipCompressorInputStream(in)))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	144	None	add
1732	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in);  if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return    new    GzipCompressorInputStream(in);    if(GzipCompressorInputStream.matches(signature,  DEFLATE))  {  return  new  GzipCompressorInputStream(in);  }	  	non-compiled	[CE]  method  matches  in  class  GzipCompressorInputStream  cannot  be  applied  to  given  types;	144	None	add
1733	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  in,  decompressUntilEOF,  0);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,InputStream,Boolean,int)  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  in,  decompressUntilEOF,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  in,  decompressUntilEOF,  0);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,InputStream,Boolean,int)	182	None	replace
1734	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  0);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,int)  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  decompressConcatenated,  0,  0);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,boolean,int,int)	182	None	replace
1735	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  compressConcatenated,  0);  [CE]  cannot  find  symbol  compressConcatenated  [FE]                    CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  compressConcatenated,  0);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  compressConcatenated,  0);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    0);    	non-compiled	[CE]  cannot  find  symbol  compressConcatenated	182	None	replace
1736	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  0,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int,Boolean)  [FE]                      CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  0,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  0,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF,    0);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,int,Boolean)	182	None	replace
1737	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  decompressUntilEOF);  [CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,Boolean)  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  decompressUntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in,  DEFLATE,  PACK200,  decompressUntilEOF);	  return    new    GzipCompressorInputStream(in,    DEFLATE,    decompressUntilEOF);    	non-compiled	[CE]  no  suitable  constructor  found  for  GzipCompressorInputStream(InputStream,String,String,Boolean)	44	None	replace
1738	[BUG]  [BUGGY]  return  new  GZipCompressorInputStream(decompressConcatenated);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GZipCompressorInputStream(decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GZipCompressorInputStream(decompressConcatenated);	  return    new    GZipCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
1739	[BUG]  [BUGGY]  if(GZipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [CE]  cannot  find  symbol  GZipCompressorInputStream  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GZipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GZipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.reset();  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    if(GZipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.reset();    }    	non-compiled	[CE]  cannot  find  symbol  GZipCompressorInputStream	141	None	replace
1740	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	202	None	replace
1741	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	202	None	replace
1742	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ')'  expected  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	202	None	replace
1743	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress  [CE]  ')'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompress	  if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ')'  expected	202	None	replace
1744	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in);  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)  {  return  new  MutableCompressorInputStream(in);	  MutableCompressorInputStream.matches(signature,    decompressUntilEOF)    {    return    new    MutableCompressorInputStream(in,    decompressConcatenated);    	non-compiled	[CE]  ';'  expected	193	None	replace
1745	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -1)||  GzipCompressorInputStream.matches(signature,  -1))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,  -1)||  GzipCompressorInputStream.matches(signature,  -1))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	165	2	replace
1746	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -1)||  GzipCompressorInputStream.matches(signature,  -1))  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  -1)||  GzipCompressorInputStream.matches(signature,  -1))  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,  -1)||  GzipCompressorInputStream.matches(signature,  -1))  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    UntilEOF)||    GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	165	2	replace
1747	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(signature,  decompressConcatenated,  DEFLATE);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]        CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(signature,  decompressConcatenated,  DEFLATE);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(signature,  decompressConcatenated,  DEFLATE);	  InputStream    in    =    new    GzipInputStream(signature,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	87	None	replace
1748	[BUG]  [BUGGY]  InputStream  in  =  new  GzipInputStream(signature,  decompressConcatenated,  UntilEOF);  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  new  GzipInputStream(signature,  decompressConcatenated,  UntilEOF);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  new  GzipInputStream(signature,  decompressConcatenated,  UntilEOF);	  InputStream    in    =    new    GzipInputStream(signature,    decompressConcatenated);    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	87	None	replace
1749	[BUG]  [BUGGY]  return  new  GzipCompressorInputStream(in.decompressConcatenated);  [CE]  cannot  find  symbol  decompressConcatenated  [FE]        NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  return  new  GzipCompressorInputStream(in.decompressConcatenated);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	return  new  GzipCompressorInputStream(in.decompressConcatenated);	  return    new    GzipCompressorInputStream(decompressConcatenated,    in);    	non-compiled	[CE]  cannot  find  symbol  decompressConcatenated	150	None	replace
1750	[BUG]  [BUGGY]  InputStream  in  =  in.readIn();  if(in!=  null)  {  return  new  GzipCompressorInputStream(in);  }  [CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)  [FE]    CompressorException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  InputStream  in  =  in.readIn();  if(in!=  null)  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	InputStream  in  =  in.readIn();  if(in!=  null)  {  return  new  GzipCompressorInputStream(in);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  variable  in  is  already  defined  in  method  createCompressorInputStream(InputStream)	62	None	replace
1751	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	178	2	replace
1752	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [FE]  CompressorException  [FE]          NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	compilable	  [FE]  CompressorException  	178	2	replace
1753	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]            NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(in);  }	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	178	None	replace
1754	[BUG]  [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  else  {  return  new  GzipCompressorInputStream(	  return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    if(GzipCompressorInputStream.matches(signature,    UntilEOF))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    else    {    return    new    GzipCompressorInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
1755	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	add	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	compilable	  [FE]  NullPointerException  	114	2	add
1756	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(BZip2CompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }	  	compilable	  [FE]  NullPointerException  	114	2	add
1757	[BUG]  [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSION);  }  [CE]  cannot  find  symbol  DECOMPRESSION  [FE]      NullPointerException    [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressUntilEOF);  }  if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSION);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(GzipCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressUntilEOF);    }    if(GzipCompressorInputStream.matches(signature,  signatureLength)||  GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  DECOMPRESSION);  }	  	non-compiled	[CE]  cannot  find  symbol  DECOMPRESSION	114	None	add
1758	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  ';'  expected  [FE]          CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  ';'  expected	203	None	replace
1759	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  not  a  statement  [FE]            CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
1760	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  not  a  statement  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
1761	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  [CE]  not  a  statement  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  decompressConcatenated)||  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
1762	[BUG]  [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [CE]  not  a  statement  [FE]                  CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	MutableCompressorInputStream.matches(signature,  UntilEOF)&&  GzipCompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcaten	  MutableCompressorInputStream.matches(signature,    signatureLength)||    GzipCompressorInputStream.matches(signature,    decompressConcatenated))    {    return    new    GzipCompressorInputStream(in,    decompressConcaten    	non-compiled	[CE]  not  a  statement	203	None	replace
1763	[BUG]  [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	if(BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }  else  {  in.mark(SignatureLength);  }	  if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(signatureLength);    }    if(GzipCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GzipCompressorInputStream(in,    decompressConcatenated);    }    else    {    in.mark(SignatureLength);    }    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	86	None	replace
1764	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [CE]  ';'  expected  [FE]              CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  -signatureLength))  {  return  new  GuvernedSnappyCompressorInputStream(in);	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	156	None	replace
1765	[BUG]  [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [CE]  ';'  expected  [FE]                CompressorException      [CONTEXT]      in.mark(signature.length);  try  {  int  signatureLength  =  IOUtils.readFully(in,  signature);  in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {      [BUGGY]  GuvernedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GuvernedSnappyCompressorInputStream(in);  [BUGGY]      }  if  (Pack200CompressorInputStream.matches(signature,  signatureLength))  {  return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	225	225	2	replace	GuvernedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  return  new  GuvernedSnappyCompressorInputStream(in);	  GuvernedSnappyCompressorInputStream.matches(signature,    signatureLength))    {    return    new    GuvernedSnappyCompressorInputStream(in);    	non-compiled	[CE]  ';'  expected	156	None	replace
