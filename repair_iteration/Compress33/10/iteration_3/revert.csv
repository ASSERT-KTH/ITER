projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(Signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readInput();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,compressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DecompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,compressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(SignatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.re
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0L);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,null);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,SignatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}If(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);returnnewGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);InputStreamin=newGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.rereset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,-signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0.0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGZipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGuvernedSnappyCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGuvernedSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(in,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);in=newGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGZIPCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DecompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GZipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,null)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=newGuvernedSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.create(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,signatureLength);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,SignatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressor.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.matches(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.readLine(),signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.getChars(signatureLength),in.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,Integer.toString(signatureLength),in.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,IOUtils.readFully(in),in.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.getCharacterEncoding());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in);returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in);if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in);if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in);if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in);if(GzipCompressorInputStream.matches(signature,null)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0){returnnewMutableCompressorInputStream(in,0);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,pendingEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0.0){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength,BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength,Boolean.valueOf);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}If(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(Signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,SNAPPY_RAW,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,SNAPPY_RAW,SNAPPY_FRAMED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,SNAPPY_RAW,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,SNAPPY_RAW,SNAPPY_FRAMED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,PACK200,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,SNAPPY_RAW,SNAPPY_FRAMED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,SNAPPY_RAW,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.write(GzipCompressorInputStream.getBytes(signature));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.write('n');
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.write(GzipCompressorInputStream.toByteArray());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.readLine(),signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.readLine(),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,IOUtils.readFully(in),in.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.readLine(),DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,IOUtils.readFully(in).readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(decompressConcatenated,in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in.decompressConcatenated,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=decompressConcatenated?GzipCompressorInputStream.fromInputStream(in):null;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signatureLength,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signatureLength,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip3CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(signature.length,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2Compressor.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewFramedSnappyCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip3CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,0);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressUntilEOF,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,SNAPPY_RAW,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){return
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewG
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzip
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(signature,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,0
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF)&&GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,LZMA,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)&&GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,pendingEOF)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,null)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0.0)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225CompositeCompressorInputStreamin=compositeCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225CompositeCompressorInputStreamin=compositeCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225CompositeCompressorInputStreamin=compositeCompressorInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2Compressor.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.re
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressor.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2Compressor.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressor.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,LZMA,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,LZMA,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompress);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,UntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,UntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,SNAPPY_RAW,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,SNAPPY_RAW,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,SNAPPY_RAW,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,SNAPPY_RAW,SNAPPY_FRAMED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,SNAPPY_FRAMED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0.0)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,pendingEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in.mark(signatureLength),decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&in.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.getInputStream();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,SNAPPY_RAW,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,SNAPPY_RAW,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,pendingEOF)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0.0)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,pending)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225'catch'without'try'
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressUntilEOF)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)&&GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,1)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0){returnnewMutableCompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){return
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewG
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength))
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzip
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureL
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnew
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=this.in.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=IOUtils.readFully(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readInputStream();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=IOUtils.readFully(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(SignatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(SignatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(SignatureL
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(SignatureLength
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength,UntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisipLength=GzipCompressorInputStream.matches(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisipLength=GzipCompressorInputStream.matches(signature,signatureLength)||in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisipLength=GzipCompressorInputStream.matches(signature,signatureLength)&&in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisipLength=GzipCompressorInputStream.matches(signature,signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.re
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}in.set(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}in.put(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}in.set(signatureLength);if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}in.mark(signatureLength);if(GzipCompressorInputStream.matches(Signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225';'expected=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225';'expected=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225';'expected=in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225';'expected=IOUtils.readFully(in,signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225';'expected=IOUtils.readFully(in,signatureLength),in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225';'expected=in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225';'expected=IOUtils.readFully(in,signatureLength)-in.mark(signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signature.length);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signature.length);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signature.length,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,SignatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)||BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressor.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{return
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressUntilEOF,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF,in.length,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(signature,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.length-1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.length+1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.length-2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,byte.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(SignatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2Compressor.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&in.mark(signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompress)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||in.mark(signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGuvernedSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGuvernedSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,0)){returnnewGuvernedSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,DEFLATE)){returnnewGuvernedSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGuvernedSnappyCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewGuvernedSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,-1)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,0,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,SNAPPY_RAW,SNAPPY_FRAMED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,SNAPPY_RAW,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,-signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,-signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,-signatureLength)){returnnewGzipCompressorInputStream(in);}If(GzipCompressorInputStream.matches(signature,-signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,-signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(Signature,-signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,-signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,-SignatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=this.in.readInput();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=IOUtils.readInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=JOUtils.readInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=IOUtils.readInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,UntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,0);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,UntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,SNAPPY_FRAMED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,BZIP2,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,DELETE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(GzipCompressorInputStream.matches(signature,SignatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DECOMPRESS_EOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,SignatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}If(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(Signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressUntilEOF,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in,decompressUntilEOF,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF,in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,SignatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,SignatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225while(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisip=GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signatureLength,BZip2CompressorInputStream.matches(signature,UntilEOF));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in,decompressConcatenated);if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}if(FramedCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,pending){returnnewMutableCompressorInputStream(in,pending);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,0.0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,0);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,null,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,IOUtils.readFully(signature,signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,null,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,IOUtils.readFully(signature,signatureLength),null);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,null,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisip=IOUtils.readFully(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisip=IOUtils.readFully(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisip=GzipCompressorInputStream.matches(signature,signatureLength)||decompressConcatenated||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisip=GzipCompressorInputStream.matches(signature,signatureLength)||decompressConcatenated||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisip=GzipCompressorInputStream.matches(signature,signatureLength)||decompressConcatenated||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisip=IOUtils.readFully(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)]{returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisip=IOUtils.readFully(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(in,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(decompressConcatenated,signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(FramedCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,BZIP,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,BZIP2,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,BZIP,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,BZIP,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,SNAPPY_RAW,BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,0)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.create(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.create(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.create(in,decompressConcatenated,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.create(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.create(in,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.create(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.create(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||in.matches(signatureLength,decompressUntilEOF)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGuvernedSnappyCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGuvernedSnappyCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,UntilEOF){returnnewGuvernedSnappyCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,0)){returnnewGuvernedSnappyCompressorInputStream(in,0);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in,signatureLength,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in,signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.length,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(signature.length,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,0,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,0,signatureLength,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,0,signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.length,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||in.matches(signatureLength,decompressUntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGuvernedSnappyCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGuvernedSnappyCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,0)){returnnewGuvernedSnappyCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,DEFLATE)){returnnewGuvernedSnappyCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewGuvernedSnappyCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,GzipCompressorInputStream)){returnnewGuvernedSnappyCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGZIPCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZIPCompressorInputStream.matches(signature,signatureLength)){returnnewGZIPCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGZIPCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGZIPCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZIPCompressorInputStream.matches(signature,UntilEOF)){returnnewGZIPCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisip=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisip=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,0);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GZipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.set(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.set(signatureLength,GzipCompressorInputStream.getSize());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.set(signatureLength,GzipCompressorInputStream.DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.set(signatureLength,GzipCompressorInputStream.getVersion());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.set(signatureLength,GzipCompressorInputStream.DEFAULT_COMPRESSION);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.set(signatureLength,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.set(signatureLength,GzipCompressorInputStream.DEFAULT);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)||BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,null)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.matches(signature,null);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,null)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.re
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,pendingEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=BZip2CompressorInputStream.matches(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=BZip2CompressorInputStream.matches(signature,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,null)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,PACK200,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,PACK200,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,PACK200,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,PACK200,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,PACK200,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225CompositeCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225CompositeCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)||GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength,GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength,GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength,GzipCompressorInputStream.matches(in,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.re
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2Compressor.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,signatureLength)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||in.matches(signatureLength,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,0)){returnnewGzipCompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,SignatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225&&GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressConcatenation)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressConcaten)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,-1)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,BZIP,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in,BZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,BZIP1,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,BZIP2,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}If(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(Signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0.0)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||in.matches(signatureLength,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readUTF();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=this.in.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readFully();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readInt()-1;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=IOUtils.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readInt()&0xff;
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=this.in.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=IOUtils.readIn(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readIn(),in.readCharacters();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=IOUtils.readIn(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readInput(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.matches(signature,decompressConcatenated)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.matches(signature,DEFLATE)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(SignatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,PACK200,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,PACK200,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,PACK200,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.matches(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0.0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0.0)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.matches(signature,0.0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0.0)||GzipCompressorInputStream.matches(signatureLength,0.0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,0.0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0,signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.readLine(),0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=getInputStream();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||in.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated,in.mark(signatureLength));}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.re
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(signature,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(signature,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,DEFLATE)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(in,decompressConcatenated,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(in,decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=newGuvernedSnappyCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=newGuvernedSnappyCompressorInputStream(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=newGuvernedSnappyCompressorInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=newGuvernedSnappyCompressorInputStream(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=newGuvernedSnappyCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=newGuvernedSnappyCompressorInputStream(signatureLength,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=newGuvernedSnappyCompressorInputStream(in,compressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(G
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)&&BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)&&BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)&&BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.read(),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,IOUtils.readFully(in,signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,IOUtils.readFully(in,signatureLength),in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.readFully());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.readUTF());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pendingEOF)||GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureL
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signature
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(G
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225}elseif(BZip2CompressorInputStream.matches(signature,signatureLength)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225}elseif(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,null)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}If(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(Signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,DECOMPRESSION);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.re
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}If(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.rereset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2Compressor.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureL
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGZipCompressorInputStream(in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGZipCompressorInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGZipCompressorInputStream(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGZipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGZipCompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGZipCompressorInputStream(signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGZipCompressorInputStream(in,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(Gzip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}If(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,BZIP2,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.skipChildren();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,signatureLength);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,signatureLength);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,signatureLength);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,LZMA)){returnnewGzipCompressorInputStream(in,signatureLength);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,signatureLength);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DecompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DecompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(signatureLength,DecompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(signatureLength,Integer.MAX_VALUE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,in,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,signatureLength,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InspectorInputStream.matches(signature,signatureLength)){returnnewInspectorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InspectorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InspectorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InspectorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InspectorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InspectorInputStream.matches(signature,signatureLength)){returnnewInspectorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InspectorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(!GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated,in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(FramedCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}If(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,DEFLATE,decompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,DEFLATE,decompressUntilEOF,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,DEFLATE,signatureLength,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,DEFLATE,0,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,DEFLATE,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0L,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0L,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0L,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0L),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated,in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225';'expected=IOUtils.readFully(in,signatureLength)||BZip2CompressorInputStream.matches(signature,signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.re
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,DEFLATE,PACK200,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,DEFLATE,PACK200,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,PACK200,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,-signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,-signatureLength)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,-signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,-signatureLength)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,SignatureLength)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,1)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,in)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(decompressConcatenated,Integer.toString(signatureLength),Integer.toString(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(decompressConcatenated,Integer.toString(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(decompressConcatenated,Integer.toHexString(signatureLength),Integer.toHexString(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,UntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(UntilEOF.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}if(GZipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(UntilEOF.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,DEFLATE,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,PACK200,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,LZMA,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength,decompressUntilEOF){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,SNAPPY_RAW,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.mark(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.mark(GzipCompressorInputStream);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.decompress(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.mark(gzipCompressorInputStream);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.mark(GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.reset();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.close();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,decompressUntilEOF);InputStreamin=newGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);InputStreamin=newGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in=newGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{InputStreamin=newGzipCompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,UntilEOF)){returnnewGZIPCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGZIPCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGZIPCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(decompressConcatenated,signature)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0L,0L);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(in,signatureLength)){returnnewGuvernedSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,0.0)){returnnewGuvernedSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,GzipCompressorInputStream.getName())){returnnewGuvernedSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(decompressConcatenated,signature)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,0,signatureLength,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,0,signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.readInput();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=BZip2CompressorInputStream.readInput();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=IOUtils.readInput(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(decompressUntilEOF,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(signature,in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,compressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,UntilEOF);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressAfterEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,SNAPPY_RAW,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,PACK200,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,BZIP2,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.re
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(in,signatureLength)){returnnewGuvernedSnappyCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,compressConcatenated)){returnnewGuvernedSnappyCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInput
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength))
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,DEFLATE);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,DEFLATE);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,DEFLATE);}else{in.re
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,DECOMPRESSION);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.readLine(),decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,in.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.available());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,Integer.toHexString(in.readLine()));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(pending.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(pending.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(UntilEOF.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=newGuvernedSnappyCompressorInputStream(in,GzipCompressorInputStream);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=newGuvernedSnappyCompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)||MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,SNAPPY_FRAMED);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,GzipCompressorInputStream);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,pendingEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,SNAPPY_RAW,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225NeighborCompressorInputStreamin=newNeighborCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225NeighborCompressorInputStreamin=newNeighborCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225NeighborCompressorInputStreamin=createNeighborCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=createCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225NeighborCompressorInputStreamin=createSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(in,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(GZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(GZipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(in,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(in,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(decompressConcatenated,signature)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(UntilEOF.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcat
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,signatureLength);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in,signatureLength);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(decompressConcatenated,Integer.parseInt(signatureLength),Integer.parseInt(signatureLength));
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated);in=newGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,decompressUntilEOF);in=newGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcat
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,BZIP2,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,compressConcatenated)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,byteLength)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225IntegersignatureLength=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisipLength=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225CompositeCompressorInputStreamin=createCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=createCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisipLength=IOUtils.readFully(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225IntegersignatureLength=IOUtils.readFully(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(in,decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,UntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,GzipCompressorInputStream);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,GzipCompressorInputStream);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}in.write('n');if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signatureLength,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}in.write('n');if(GzipCompressorInputStream.matches(signatureLength,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorOutputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,DEFLATE)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,-signatureLength)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,-signatureLength)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,-decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,-1)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,in)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(in,null)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,null)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,out)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in);if(GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in);if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,GZIP,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(in,decompressConcatenated)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(decompressConcatenated,signature)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(decompressConcatenated,signatureLength)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGZipCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGZipCompressorInputStream(in,decompressConcatenated,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,LZMA,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,4);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)&&GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(DFLATE.matches(signature,DEFLATE)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZipCompressorInputStream.matches(signature,signatureLength)){returnnewBZipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,3);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.reset();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.decompressConcatenated(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.decompress(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.put(GZIP,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.put(GZIP,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.decompress(signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225&&GzipCompressorInputStream.matches(signatureLength,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGuvernedSnappyCompressorInputStream(in);}else{returnnewGuvernedSnappyCompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGuvernedSnappyCompressorInputStream(in);}else{returnnewGuvernedSnappyCompressorIn
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in);}else{returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in);}else{returnnewMutableCompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLeng
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=BZip2CompressorInputStream.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GZIP.readInt();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=IOUtils.readInt(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,pendingEOF){returnnewMutableCompressorInputStream(in,pendingEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(decompressUntilEOF,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(DEFLATE,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewMutableCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in,compressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(in!=null){returnnewGzipCompressorInputStream(decompressConcatenated,in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(in!=null){returnnewGzipCompressorInputStream(decompressConcatenated,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(UntilEOF.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(decompressConcatenated,signature)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewPack200CompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(decompressConcatenated,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225&&GzipCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(in,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,compressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,0.0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,UntilEOF);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,UntilEOF);}else{in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,DEFLATE,SNAPPY_RAW,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,DEFLATE,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.read(),DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225CompressorInputStreamin=newCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225CompressorInputStreamin=createCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=createCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225CompressorInputStreamin=createCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)||MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)&&GzipCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)||MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(in,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(in,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,UntilEOF){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,DEFLATE,decompressUntilEOF,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,in,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,SNAPPY_RAW,DEFLATE,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(UntilEOF.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signatureLength,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,BZIP2,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,BZIP2,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0.0)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0.0)||GzipCompressorInputStream.matches(signature,0.0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(in,0.0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(SignatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(SignatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(SignatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(SignatureL
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0.0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,DEFLATE);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.re
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in=newGzipCompressorInputStream(decompressUntilEOF);if(GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,pendingEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=BZip2CompressorInputStream.read();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=IOUtils.readFully(in,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=IOUtils.readFully(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,SNAPPY_RAW,decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GZipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,DEFLATE){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenation);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,-signatureLength)){returnnewGzipCompressorInputStream(in);}if(GZipCompressorInputStream.matches(signature,-signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength,GZIP2);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(Gzip
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(sig
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompress)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signatureLength,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,DEFLATE){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}if(GZipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,0,)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225IntegersignatureLength=IOUtils.readFully(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225IntegersignatureLength=IOUtils.readFully(in,decompressConcatenated);if(GzipCompressorInputStream.matches(signatureLength,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF){returnnewMutableCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225IntegersignatureLength=IOUtils.readFully(in,decompressConcatenated);if(GzipCompressorInputStream.matches(signatureLength,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225IntegersignatureLength=IOUtils.readFully(in,decompressConcatenated);if(GzipCompressorInputStream.matches(signatureLength,signatureLength)){returnnewGzipCompressorInputStream(in);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,Integer.toHexString(signatureLength),in.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=BZip2CompressorInputStream.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=IOUtils.readIn(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GZIP.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(in,DEFLATE)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,length)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)||BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)&&BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readIn();if(in!=null){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in,signatureLength,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(in,decompressConcatenated,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(in,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225ResolvedCompressorInputStreamin=newResolvedCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)||MutableCompressorInputStream.matches(signature,0)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.create(in,decompressConcatenated,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.create(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.create(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,null,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225ReturnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,Integer.MAX_VALUE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(in,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,null,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)){returnnewBZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(decompressConcatenated,in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(in,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GZipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GZip2CompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(in,decompressConcatenated)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225&&GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGZip2CompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated,in.read());}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated,in.length);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(!GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength))returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(signatureLength==0){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(decompressUntilEOF){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(!decompressUntilEOF){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(signatureLength==0){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(decompressUntilEOF){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(signature,DecompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,null)){returnnewGzipCompressorInputStream(in);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,this.decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}in.setLength(GzipCompressorInputStream.decompressConcatenated);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}in.setLength(GzipCompressorInputStream.getLength());if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,1.0)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,signatureLength,in.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225rayCompressorInputStreamin=newRayCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisip=IOUtils.readFully(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225IntegersignatureLength=IOUtils.readFully(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225IntegersignatureLength=IOUtils.readFully(signature,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readIO();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=out.readIn();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.rereset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.length-signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,SNAPPY_RAW,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.read(),in.read());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.read(),in.decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readIOF();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,null)){returnnewGzipCompressorInputStream(in);}else{in.close();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,SNAPPY_RAW,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated),in){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(in.mark(signatureLength),decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength,decompressConcatenated){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pending)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signatureLength,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(in,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(in,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signature,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(signature,decompressConcatenated,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,DEFLATE){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,-1){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,-signatureLength){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(SyntheticCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,SignatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(FramedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DECOMPRESSION);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,compressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated?DEFLATE:in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressCONcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(Integer.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signatureLength
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(DECEMBER.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);InputStreamin=newGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);InputStreamin=newGzipCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.write(GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);InputStreamin=newGzipCompressorInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.skip(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.mark(signatureLength);in.write(GZIP,0,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,BZIP,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,BZIP,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,BZIP2,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.create(in,decompressConcatenated,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in,in.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.readLine(),in.readCharacters());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.getCharacterIndex());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.getCharacters());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(out,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=createFramedSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=createFramedSnappyCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.mark(signature.length);}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.print(signature.length);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(decompressConcatenated,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=GzipCompressorInputStream.getInstance(decompressConcatenated,signature);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,DEFLATE)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,-1)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,UntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=newGuvernedSnappyCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStreamin=createGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225try==GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225rayCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225rayCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225rayCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225rayCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225rayCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225rayCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,compressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&in.mark(signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.re
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225rayCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}else{returnnewGzipCompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(Integer.matches(signature,signatureLength)){returnnewIntegerCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){in.mark(signatureLength);if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorOutputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(Integer.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF),decompressUntilEOF){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressUntilEOF,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0)){returnnewGzipCompressorInputStream(in);}if(GzipCompressorInputStream.matches(signature,0)||GzipCompressorInputStream.matches(signature,0))returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signatureLength,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(GZipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,0L,1);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(in,decompressConcatenated,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStreamin=newMutableCompressorInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DECOMPRESSION)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,DEFLATE)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,DEFLATE,DEFLATE,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225newGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,e);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(in!=null){returnnewGzipCompressorInputStream(in,decompressUntilEOF);in=newGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(in!=null){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in=newGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(in!=null){returnnewGzipCompressorInputStream(in,DEFLATE);in=newGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,-signatureLength)){returnnewGuvernedSnappyCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,pendingEOF)){returnnewGuvernedSnappyCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)||MutableCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,in.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,decompressConcatenated,in.getCharacterIndex());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.rereset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,DEFLATE,SNAPPY_RAW);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,DEFLATE,DECOMPRESSION);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)&&GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DEFLATE);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(pendingEOF.matches(signature,decompressUntilEOF)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225If(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,signatureLength)){returnnewMutableCompressorInputStream(in,decompressCon
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}else{in.close();returnnull;}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,pendingEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(Integer.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if('catch'without'try'){
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.read(signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated);InputStreamin=newGzipCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(decompressUntilEOF){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{in=newGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(decompressUntilEOF){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{InputStreamin=newGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)&&GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&GzipCompressorInputStream.matches(signature,UntilEOF)){returnnewGzipCompressorInputStream(in,decompressConcatenated
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,signatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,in.readBytes());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,-1)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.readLine(),in.readCharacters());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,this.in.readLine());
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in.readLine()+signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated),decompressUntilEOF){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated,in.read());}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewMutableCompressorInputStream(in,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,DEFLATE)){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.close();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.setLength(GZipCompressorInputStream.decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.write(GZIP);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225in.setLength(GzipCompressorInputStream.decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in,decompressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipCompressorInputStream(in,decompressConcatenated,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,encoding)){returnnewMutableCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisipLength=GZip2CompressorInputStream.matches(signature,signatureLength);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225nisipLength=GZip2CompressorInputStream.matches(signature,signatureLength)&&in.mark(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&in.mark(signatureLength)){returnnewGzipCompressorInputStream(in,signatureLength);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(decompressConcatenated,signature,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in.read(),decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)&&InputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip3CompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,SignatureLength)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompress)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,PACK200,LZMA);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,DECOMPRESSED);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readLine();
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=IOUtils.readFully(in,signature.length);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,PACK200);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,DEFLATE)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,-1)){returnnewMutableCompressorInputStream(in,decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in);if(GzipCompressorInputStream.matches(signature,newGzipCompressorInputStream(in))){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in);if(GzipCompressorInputStream.matches(signature,DEFLATE)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,in,decompressUntilEOF,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,decompressConcatenated,0,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,compressConcatenated,0);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,0,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in,DEFLATE,PACK200,decompressUntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGZipCompressorInputStream(decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GZipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.reset();}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompress
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated){returnnewMutableCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,-1)||GzipCompressorInputStream.matches(signature,-1)){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(signature,decompressConcatenated,DEFLATE);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=newGzipInputStream(signature,decompressConcatenated,UntilEOF);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225returnnewGzipCompressorInputStream(in.decompressConcatenated);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225InputStreamin=in.readIn();if(in!=null){returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,signatureLength)){returnnewBZip2CompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(in);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(FramedSnappyCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}else{returnnewGzipCompressorInputStream(
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(BZip2CompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,decompressUntilEOF);}if(GzipCompressorInputStream.matches(signature,signatureLength)||GzipCompressorInputStream.matches(signature,signatureLength)){returnnewGzipCompressorInputStream(in,DECOMPRESSION);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,decompressConcatenated)||GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225MutableCompressorInputStream.matches(signature,UntilEOF)&&GzipCompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcaten
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225if(BZip2CompressorInputStream.matches(signature,decompressConcatenated)){returnnewGzipCompressorInputStream(in,decompressConcatenated);}else{in.mark(SignatureLength);}
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,-signatureLength)){returnnewGuvernedSnappyCompressorInputStream(in);
projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java225GuvernedSnappyCompressorInputStream.matches(signature,pendingEOF)){returnnewGuvernedSnappyCompressorInputStream(in);
