bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]                CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  pendingEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	6	None	replace
2	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                  CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	add	if  (FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	compilable	  [FE]  CompressorException  	6	2	replace
3	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]                  CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	compilable	  [FE]  CompressorException  	6	2	replace
4	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                    CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	6	None	replace
5	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  compressUntilEOF))  {  [CE]  cannot  find  symbol  compressUntilEOF  [FE]                      CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  compressUntilEOF))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  compressUntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  compressUntilEOF	6	None	replace
6	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0))  {  [CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  0.0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  0.0))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  FramedSnappyCompressorInputStream  cannot  be  applied  to  given  types;	6	None	replace
7	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  pos))  {  [CE]  cannot  find  symbol  pos  [FE]                          CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  pos))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  pos))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  pos	6	None	replace
8	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (ZCompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
9	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]                CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  pendingEOF))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (ZCompressorInputStream.matches(signature,  pendingEOF))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	5	None	replace
10	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                  CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	add	if  (ZCompressorInputStream.matches(signature,  0))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	compilable	  [FE]  CompressorException  	5	2	replace
11	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]                  CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (ZCompressorInputStream.matches(signature,  0))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	compilable	  [FE]  CompressorException  	5	2	replace
12	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  compressUntilEOF))  {  [CE]  cannot  find  symbol  compressUntilEOF  [FE]                    CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  compressUntilEOF))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (ZCompressorInputStream.matches(signature,  compressUntilEOF))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  compressUntilEOF	5	None	replace
13	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0.0))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                      CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  0.0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (ZCompressorInputStream.matches(signature,  0.0))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
14	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                        CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (ZCompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
15	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  DEFLATE))  {	  if    (Pack200CompressorInputStream.matches(signature))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
16	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  LZMA))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  LZMA))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  LZMA))  {	  if    (Pack200CompressorInputStream.matches(signature))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
17	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (Pack200CompressorInputStream.matches(signature))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
18	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]                CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	add	if  (ZCompressorInputStream.matches(signature,  signatureLength))  {	  if    (Pack200CompressorInputStream.matches(signature))    {    	compilable	  [FE]  CompressorException  	9	2	replace
19	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  [FE]  CompressorException  [FE]                CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (ZCompressorInputStream.matches(signature,  signatureLength))  {	  if    (Pack200CompressorInputStream.matches(signature))    {    	compilable	  [FE]  CompressorException  	9	2	replace
20	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  null))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  null))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  null))  {	  if    (Pack200CompressorInputStream.matches(signature))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	9	None	replace
21	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated,  DEFLATE))  {	  if    (Pack200CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
22	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated)||  Pack200CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated)||  Pack200CompressorInputStream.matches(signature,  decompressUntilEOF))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated)||  Pack200CompressorInputStream.matches(signature,  decompressUntilEOF))  {	  if    (Pack200CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
23	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated)||  Pack200CompressorInputStream.matches(signature,  signatureLength))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated)||  Pack200CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated)||  Pack200CompressorInputStream.matches(signature,  signatureLength))  {	  if    (Pack200CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
24	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated,  in))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated,  in))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated,  in))  {	  if    (Pack200CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
25	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  [CE]  [FE]                CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated),  in)  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated),  in)  {	  if    (Pack200CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  	10	None	replace
26	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated)||  Pack200CompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated)||  Pack200CompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated)||  Pack200CompressorInputStream.matches(signature,  DEFLATE))  {	  if    (Pack200CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
27	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	add	if  (BZip2CompressorInputStream.matches(signature,  0))  {	  if    (BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    	compilable	  [FE]  CompressorException  	4	2	replace
28	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]            CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (BZip2CompressorInputStream.matches(signature,  0))  {	  if    (BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    	compilable	  [FE]  CompressorException  	4	2	replace
29	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]              CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (BZip2CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	4	None	replace
30	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  pendingEOF))  {  [CE]  cannot  find  symbol  pendingEOF  [FE]                CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  pendingEOF))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (BZip2CompressorInputStream.matches(signature,  pendingEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  pendingEOF	4	None	replace
31	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0.0))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]                  CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  0.0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (BZip2CompressorInputStream.matches(signature,  0.0))  {	  if    (BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	4	None	replace
32	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  compressUntilEOF))  {  [CE]  cannot  find  symbol  compressUntilEOF  [FE]                    CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  compressUntilEOF))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (BZip2CompressorInputStream.matches(signature,  compressUntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  compressUntilEOF	4	None	replace
33	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  byteLength))  {  [CE]  cannot  find  symbol  byteLength  [FE]                      CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  byteLength))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (BZip2CompressorInputStream.matches(signature,  byteLength))  {	  if    (BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  byteLength	4	None	replace
34	[BUG]  [BUGGY]  If  (Pack200CompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  ';'  expected  [FE]        CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  If  (Pack200CompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	If  (Pack200CompressorInputStream.matches(signature,  UntilEOF))  {	  if    (Pack200CompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  ';'  expected	8	None	replace
35	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0))  {  if  (Pack200CompressorInputStream.matches(signature,  0))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0))  {  if  (Pack200CompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if    (Pack200CompressorInputStream.matches(signature,    0))    {    if  (Pack200CompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	2	None	add
36	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0))  {  If  (Pack200CompressorInputStream.matches(signature,  0))  {  [CE]  ';'  expected  [FE]      CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0))  {  If  (Pack200CompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if    (Pack200CompressorInputStream.matches(signature,    0))    {    If  (Pack200CompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  ';'  expected	2	None	add
37	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0))  {  if  (Pack200CompressorInputStream.matches(Signature,  0))  {  [CE]  'catch'  without  'try'  [FE]        CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0))  {  if  (Pack200CompressorInputStream.matches(Signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if    (Pack200CompressorInputStream.matches(signature,    0))    {    if  (Pack200CompressorInputStream.matches(Signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	2	None	add
38	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0))  {  if  (Pack100CompressorInputStream.matches(signature,  0))  {  [CE]  'catch'  without  'try'  [FE]          CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0))  {  if  (Pack100CompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if    (Pack200CompressorInputStream.matches(signature,    0))    {    if  (Pack100CompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	2	None	add
39	[BUG]  [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(in);  [CE]  [FE]                  CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(in);  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	InputStream  in  =  new  Pack200CompressorInputStream(in);	      	non-compiled	[CE]  	7	None	replace
40	[BUG]  [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(in.getBytes());  [CE]  [FE]                    CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(in.getBytes());  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	InputStream  in  =  new  Pack200CompressorInputStream(in.getBytes());	      	non-compiled	[CE]  	7	None	replace
41	[BUG]  [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(signature);  [CE]  [FE]                      CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(signature);  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	InputStream  in  =  new  Pack200CompressorInputStream(signature);	      	non-compiled	[CE]  	7	None	replace
42	[BUG]  [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(decompressConcatenated);  [CE]  [FE]                        CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(decompressConcatenated);  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	InputStream  in  =  new  Pack200CompressorInputStream(decompressConcatenated);	      	non-compiled	[CE]  	7	None	replace
43	[BUG]  [BUGGY]  InputStream  in  =  getInputStream();  [CE]  [FE]                          CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  InputStream  in  =  getInputStream();  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	InputStream  in  =  getInputStream();	      	non-compiled	[CE]  	7	None	replace
44	[BUG]  [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(signatureLength);  [CE]  [FE]                            CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(signatureLength);  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	InputStream  in  =  new  Pack200CompressorInputStream(signatureLength);	      	non-compiled	[CE]  	7	None	replace
45	[BUG]  [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(in,  DEFLATE);  [CE]  [FE]                              CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(in,  DEFLATE);  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	InputStream  in  =  new  Pack200CompressorInputStream(in,  DEFLATE);	      	non-compiled	[CE]  	7	None	replace
46	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  compressUntilEOF))  {  [CE]  cannot  find  symbol  compressUntilEOF  [FE]        CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  compressUntilEOF))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  compressUntilEOF))  {	  if    (Pack200CompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  compressUntilEOF	1	None	replace
47	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0.0))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]          CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0.0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  0.0))  {	  if    (Pack200CompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	1	None	replace
48	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	add	if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signature,  0))  {	  if    (Pack200CompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	3	2	replace
49	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signature,  0))  {	  if    (Pack200CompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	3	2	replace
50	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signatureLength))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signatureLength))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signatureLength))  {	  if    (Pack200CompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	3	None	replace
51	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	add	if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signature,  signatureLength))  {	  if    (Pack200CompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	3	2	replace
52	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signature,  signatureLength))  {  [FE]  CompressorException  [FE]        CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signature,  signatureLength))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signature,  signatureLength))  {	  if    (Pack200CompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	3	2	replace
53	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(in);  [CE]  [FE]                  CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  InputStream  in  =  createCompressorInputStream(in);  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	InputStream  in  =  createCompressorInputStream(in);	      	non-compiled	[CE]  	7	None	replace
54	[BUG]  [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(deFLATE);  [CE]  [FE]                    CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(deFLATE);  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	InputStream  in  =  new  Pack200CompressorInputStream(deFLATE);	      	non-compiled	[CE]  	7	None	replace
55	[BUG]  [BUGGY]  in.close();  [CE]  [FE]                      CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  in.close();  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	in.close();	      	non-compiled	[CE]  	7	None	replace
56	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  DEFLATE);  [CE]  [FE]                        CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  InputStream  in  =  createCompressorInputStream(in,  DEFLATE);  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	InputStream  in  =  createCompressorInputStream(in,  DEFLATE);	      	non-compiled	[CE]  	7	None	replace
57	[BUG]  [BUGGY]  InputStream  in  =  createCompressorInputStream(DEFLATE);  [CE]  [FE]                          CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  InputStream  in  =  createCompressorInputStream(DEFLATE);  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	InputStream  in  =  createCompressorInputStream(DEFLATE);	      	non-compiled	[CE]  	7	None	replace
58	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0))  {  if  (Pack400CompressorInputStream.matches(signature,  0))  {  [CE]  'catch'  without  'try'  [FE]    CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0))  {  if  (Pack400CompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if    (Pack200CompressorInputStream.matches(signature,    0))    {    if  (Pack400CompressorInputStream.matches(signature,  0))  {	  	non-compiled	[CE]  'catch'  without  'try'	2	None	add
59	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  pending))  {  [CE]  cannot  find  symbol  pending  [FE]          CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  pending))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  pending))  {	  if    (Pack200CompressorInputStream.matches(signature))    {    	non-compiled	[CE]  cannot  find  symbol  pending	9	None	replace
60	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  compressConcatenated))  {  [CE]  cannot  find  symbol  compressConcatenated  [FE]        CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  compressConcatenated))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  compressConcatenated))  {	  if    (Pack200CompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  compressConcatenated	1	None	replace
61	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  compressConcatenated))  {  [CE]  cannot  find  symbol  compressConcatenated  [FE]                CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  compressConcatenated))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  compressConcatenated))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  compressConcatenated	6	None	replace
62	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  compressConcatenated))  {  [CE]  cannot  find  symbol  compressConcatenated  [FE]              CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  compressConcatenated))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (ZCompressorInputStream.matches(signature,  compressConcatenated))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  compressConcatenated	5	None	replace
63	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;  [FE]                CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (ZCompressorInputStream.matches(signature,  DEFLATE))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  ZCompressorInputStream  cannot  be  applied  to  given  types;	5	None	replace
64	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signatureLength,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]        CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signatureLength,  UntilEOF))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signatureLength,  UntilEOF))  {	  if    (Pack200CompressorInputStream.matches(signature,    pendingEOF))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	8	None	replace
65	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)&&  Pack200CompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	add	if  (Pack200CompressorInputStream.matches(signature,  0)&&  Pack200CompressorInputStream.matches(signature,  0))  {	  if    (Pack200CompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	3	2	replace
66	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)&&  Pack200CompressorInputStream.matches(signature,  0))  {  [FE]  CompressorException  [FE]    CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)&&  Pack200CompressorInputStream.matches(signature,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  0)&&  Pack200CompressorInputStream.matches(signature,  0))  {	  if    (Pack200CompressorInputStream.matches(signature,    0))    {    	compilable	  [FE]  CompressorException  	3	2	replace
67	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(decompressConcatenated,  signature))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(decompressConcatenated,  signature))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(decompressConcatenated,  signature))  {	  if    (Pack200CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
68	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  [CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;  [FE]            CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  DEFLATE))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (BZip2CompressorInputStream.matches(signature,  DEFLATE))  {	  if    (BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  method  matches  in  class  BZip2CompressorInputStream  cannot  be  applied  to  given  types;	4	None	replace
69	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  compressConcatenated))  {  [CE]  cannot  find  symbol  compressConcatenated  [FE]              CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  compressConcatenated))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (BZip2CompressorInputStream.matches(signature,  compressConcatenated))  {	  if    (BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  compressConcatenated	4	None	replace
70	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  -signatureLength))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	add	if  (Pack200CompressorInputStream.matches(signature,  -signatureLength))  {	  if    (Pack200CompressorInputStream.matches(signature))    {    	compilable	  [FE]  CompressorException  	9	2	replace
71	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  -signatureLength))  {  [FE]  CompressorException  [FE]          CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  -signatureLength))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  -signatureLength))  {	  if    (Pack200CompressorInputStream.matches(signature))    {    	compilable	  [FE]  CompressorException  	9	2	replace
72	[BUG]  [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated);  [CE]  [FE]                  CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  byte[]  signature  =  in.getBytes(decompressConcatenated);  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	byte[]  signature  =  in.getBytes(decompressConcatenated);	      	non-compiled	[CE]  	7	None	replace
73	[BUG]  [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(DEFLATE);  [CE]  [FE]                    CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  InputStream  in  =  new  Pack200CompressorInputStream(DEFLATE);  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	InputStream  in  =  new  Pack200CompressorInputStream(DEFLATE);	      	non-compiled	[CE]  	7	None	replace
74	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signatureLength,  0))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]    CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signatureLength,  0))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signatureLength,  0))  {	  if    (Pack200CompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	3	None	replace
75	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]      CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  0)||  Pack200CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (Pack200CompressorInputStream.matches(signature,    0))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	3	None	replace
76	[BUG]  [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  UntilEOF)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]            CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (BZip2CompressorInputStream.matches(signature,  UntilEOF)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (BZip2CompressorInputStream.matches(signature,  UntilEOF)||  BZip2CompressorInputStream.matches(signature,  UntilEOF))  {	  if    (BZip2CompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	4	None	replace
77	[BUG]  [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated)||  Pack200CompressorInputStream.matches(signature,  decompressConcatenated))  {  [CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;  [FE]        CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated)||  Pack200CompressorInputStream.matches(signature,  decompressConcatenated))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (Pack200CompressorInputStream.matches(signature,  decompressConcatenated)||  Pack200CompressorInputStream.matches(signature,  decompressConcatenated))  {	  if    (Pack200CompressorInputStream.matches(signature,    decompressConcatenated))    {    	non-compiled	[CE]  method  matches  in  class  Pack200CompressorInputStream  cannot  be  applied  to  given  types;	10	None	replace
78	[BUG]  [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [CE]  cannot  find  symbol  UntilEOF  [FE]                CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (FramedSnappyCompressorInputStream.matches(signature,  UntilEOF)||  FramedSnappyCompressorInputStream.matches(signature,  UntilEOF))  {	  if    (FramedSnappyCompressorInputStream.matches(signature,    UntilEOF))    {    	non-compiled	[CE]  cannot  find  symbol  UntilEOF	6	None	replace
79	[BUG]  [BUGGY]  [FE]  CompressorException  [FE]              CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  -1))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	add	if  (ZCompressorInputStream.matches(signature,  -1))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	compilable	  [FE]  CompressorException  	5	2	replace
80	[BUG]  [BUGGY]  if  (ZCompressorInputStream.matches(signature,  -1))  {  [FE]  CompressorException  [FE]              CompressorException    [CONTEXT]    in.reset();  if  (BZip2CompressorInputStream.matches(signature,  signatureLength))  {  return  new  BZip2CompressorInputStream(in,  decompressConcatenated);  }  if  (GzipCompressorInputStream.matches(signature,  signatureLength))  {  return  new  GzipCompressorInputStream(in,  decompressConcatenated);  }    [BUGGY]  if  (ZCompressorInputStream.matches(signature,  -1))  {  [BUGGY]    return  new  Pack200CompressorInputStream(in);  }  if  (FramedSnappyCompressorInputStream.matches(signature,  signatureLength))  {  return  new  FramedSnappyCompressorInputStream(in);  }  if  (ZCompressorInputStream.matches(signature,  signatureLength))  {  return  new  ZCompressorInputStream(in);  }  [CLASS]  CompressorStreamFactory  [METHOD]  createCompressorInputStream  [RETURN_TYPE]  CompressorInputStream  InputStream  in  [VARIABLES]  byte[]  signature  boolean  decompressConcatenated  decompressUntilEOF  InputStream  in  String  BZIP2  DEFLATE  GZIP  LZMA  PACK200  SNAPPY_FRAMED  SNAPPY_RAW  XZ  Z  IOException  e  Boolean  decompressUntilEOF  int  signatureLength  	projects/Compress33/src/main/java/org/apache/commons/compress/compressors/CompressorStreamFactory.java	1.0	228	228	2	replace	if  (ZCompressorInputStream.matches(signature,  -1))  {	  if    (ZCompressorInputStream.matches(signature,    UntilEOF))    {    	compilable	  [FE]  CompressorException  	5	2	replace
