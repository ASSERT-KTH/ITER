bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  size  =  getItemCount(width  +  1);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getItemCount(width  +  1);  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getItemCount(width  +  1);	      Integer    size    =    getItemCount(width);    	non-compiled	[CE]  ';'  expected	12	None	replace
2	[BUG]  [BUGGY]  Integer  size  =  getItemCount(width  -  1);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getItemCount(width  -  1);  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getItemCount(width  -  1);	      Integer    size    =    getItemCount(width);    	non-compiled	[CE]  ';'  expected	12	None	replace
3	[BUG]  [BUGGY]  Integer  size  =  getItemCount(size);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getItemCount(size);  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getItemCount(size);	      Integer    size    =    getItemCount(width);    	non-compiled	[CE]  ';'  expected	12	None	replace
4	[BUG]  [BUGGY]  Integer  size  =  getItemCount(width  +  2);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getItemCount(width  +  2);  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getItemCount(width  +  2);	      Integer    size    =    getItemCount(width);    	non-compiled	[CE]  ';'  expected	12	None	replace
5	[BUG]  [BUGGY]  int  size  =  width();  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  width();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  width();	      int    size    =    length();    	non-compiled	[CE]  ';'  expected	11	None	replace
6	[BUG]  [BUGGY]  int  size  =  length()  -  width;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  length()  -  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  length()  -  width;	      int    size    =    length();    	non-compiled	[CE]  ';'  expected	11	None	replace
7	[BUG]  [BUGGY]  int  size  =  length()  +  width;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  length()  +  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  length()  +  width;	      int    size    =    length();    	non-compiled	[CE]  ';'  expected	11	None	replace
8	[BUG]  [BUGGY]  ensureCapacity(size  +  width  *  padChar,  size);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width  *  padChar,  size);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width  *  padChar,  size);	  ensureCapacity(size    +    width    *    padChar);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
9	[BUG]  [BUGGY]  ensureCapacity(size  +  width  *  padLen);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width  *  padLen);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width  *  padLen);	  ensureCapacity(size    +    width    *    padChar);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	13	None	replace
10	[BUG]  [BUGGY]  ensureCapacity(size  +  width  *  padChar  +  1);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width  *  padChar  +  1);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width  *  padChar  +  1);	  ensureCapacity(size    +    width    *    padChar);    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	13	None	replace
11	[BUG]  [BUGGY]  int  size  =  obj!=  null?  width  :  obj.getSize();  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj!=  null?  width  :  obj.getSize();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj!=  null?  width  :  obj.getSize();	      int    size    =    obj.getSize();    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	2	None	replace
12	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  width  :  obj.getSize();  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj  ==  null?  width  :  obj.getSize();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj  ==  null?  width  :  obj.getSize();	      int    size    =    obj.getSize();    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	2	None	replace
13	[BUG]  [BUGGY]  int  size  =  obj.getSize()  +  width;  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj.getSize()  +  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj.getSize()  +  width;	      int    size    =    obj.getSize();    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	2	None	replace
14	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  length;  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  length;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  length;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    length;    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	19	None	replace
15	[BUG]  [BUGGY]  size  +=  length;  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  size  +=  length;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	size  +=  length;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    length;    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	19	None	replace
16	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    length;    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	19	None	replace
17	[BUG]  [BUGGY]  int  size  =  width.size();  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  width.size();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  width.size();	      int    size    =    obj.size();    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	1	None	replace
18	[BUG]  [BUGGY]  int  size  =  obj!=  null?  width  :  obj.size();  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj!=  null?  width  :  obj.size();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj!=  null?  width  :  obj.size();	      int    size    =    obj.size();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
19	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  width  :  obj.size();  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj  ==  null?  width  :  obj.size();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj  ==  null?  width  :  obj.size();	      int    size    =    obj.size();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
20	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer().getHeight();  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer().getHeight();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer().getHeight();	      Integer    size    =    getImmediateParentPointer().getWidth();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
21	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer().getWidth()  +  1;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer().getWidth()  +  1;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer().getWidth()  +  1;	      Integer    size    =    getImmediateParentPointer().getWidth();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
22	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer().getWidth()  +  width;  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer().getWidth()  +  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer().getWidth()  +  width;	      Integer    size    =    getImmediateParentPointer().getWidth();    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	4	None	replace
23	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer().getWidth(width);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer().getWidth(width);  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer().getWidth(width);	      Integer    size    =    getImmediateParentPointer().getWidth();    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	4	None	replace
24	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString())+  width;  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString())+  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString())+  width;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
25	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString())+  width;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString())+  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  strLen  =(str  ==  null?  getWidth()  :  obj.toString())+  width;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
26	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer(obj);  size  +=  width;  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer(obj);  size  +=  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer(obj);  size  +=  width;	      Integer    size    =    getImmediateParentPointer(obj);    size    +=    size;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
27	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer(obj,  width);  size  +=  size;  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer(obj,  width);  size  +=  size;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer(obj,  width);  size  +=  size;	      Integer    size    =    getImmediateParentPointer(obj);    size    +=    size;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
28	[BUG]  [BUGGY]  int  size  =  getImmediateParentPointer(obj);  size  +=  width;  [CE]  cannot  find  symbol  ErrorText  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  getImmediateParentPointer(obj);  size  +=  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  getImmediateParentPointer(obj);  size  +=  width;	      Integer    size    =    getImmediateParentPointer(obj);    size    +=    size;    	non-compiled	[CE]  cannot  find  symbol  ErrorText	5	None	replace
29	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer();  size  +=  width;  [CE]  cannot  find  symbol  ErrorText  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer();  size  +=  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer();  size  +=  width;	      Integer    size    =    getImmediateParentPointer(obj);    size    +=    size;    	non-compiled	[CE]  cannot  find  symbol  ErrorText	5	None	replace
30	[BUG]  [BUGGY]  int  size  =  obj!=  null?  width  :  obj.getLength();  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj!=  null?  width  :  obj.getLength();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj!=  null?  width  :  obj.getLength();	      int    size    =    obj.getLength();    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	10	None	replace
31	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  width  :  obj.getLength();  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj  ==  null?  width  :  obj.getLength();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj  ==  null?  width  :  obj.getLength();	      int    size    =    obj.getLength();    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	10	None	replace
32	[BUG]  [BUGGY]  int  size  =  obj.getLength()  +  width;  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj.getLength()  +  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj.getLength()  +  width;	      int    size    =    obj.getLength();    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	10	None	replace
33	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getWidth()  :  obj.toString();  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj  ==  null?  getWidth()  :  obj.toString();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj  ==  null?  getWidth()  :  obj.toString();	      int    size    =    obj    ==    null?    getNullText()    :    obj.toString();    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	16	None	replace
34	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getSize()  :  obj.toString();  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj  ==  null?  getSize()  :  obj.toString();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj  ==  null?  getSize()  :  obj.toString();	      int    size    =    obj    ==    null?    getNullText()    :    obj.toString();    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	16	None	replace
35	[BUG]  [BUGGY]  int  size  =  width  ==  null?  getNullText()  :  obj.toString();  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  width  ==  null?  getNullText()  :  obj.toString();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  width  ==  null?  getNullText()  :  obj.toString();	      int    size    =    obj    ==    null?    getNullText()    :    obj.toString();    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	16	None	replace
36	[BUG]  [BUGGY]  int  size  =  obj!=  null?  getWidth()  :  obj.toString();  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj!=  null?  getWidth()  :  obj.toString();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj!=  null?  getWidth()  :  obj.toString();	      int    size    =    obj    ==    null?    getNullText()    :    obj.toString();    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	16	None	replace
37	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen);  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  strLen);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  strLen);	  ensureCapacity(size    +    padLen);    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	9	None	replace
38	[BUG]  [BUGGY]  ensureCapacity(size  +  padLen  +  1);  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  padLen  +  1);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  padLen  +  1);	  ensureCapacity(size    +    padLen);    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	9	None	replace
39	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer().getWidth();  size  +=  size;  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer().getWidth();  size  +=  size;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer().getWidth();  size  +=  size;	      Integer    size    =    getImmediateParentPointer().getSize();    size    +=    size;    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	3	None	replace
40	[BUG]  [BUGGY]  Size  size  =  getImmediateParentPointer().getSize();  size  +=  width;  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Size  size  =  getImmediateParentPointer().getSize();  size  +=  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Size  size  =  getImmediateParentPointer().getSize();  size  +=  width;	      Integer    size    =    getImmediateParentPointer().getSize();    size    +=    size;    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	3	None	replace
41	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer().getSize();  size  +=  width;  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer().getSize();  size  +=  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer().getSize();  size  +=  width;	      Integer    size    =    getImmediateParentPointer().getSize();    size    +=    size;    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	3	None	replace
42	[BUG]  [BUGGY]  int  size  =  getImmediateParentPointer().getSize();  size  +=  width;  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  getImmediateParentPointer().getSize();  size  +=  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  getImmediateParentPointer().getSize();  size  +=  width;	      Integer    size    =    getImmediateParentPointer().getSize();    size    +=    size;    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	3	None	replace
43	[BUG]  [BUGGY]  ensureCapacity(size  +  width,  padChar,  size);  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width,  padChar,  size);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width,  padChar,  size);	  ensureCapacity(size    +    width,    padChar);    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	7	None	replace
44	[BUG]  [BUGGY]  ensureCapacity(size  +  width,  padChar,  MAX_VALUE);  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width,  padChar,  MAX_VALUE);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width,  padChar,  MAX_VALUE);	  ensureCapacity(size    +    width,    padChar);    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	7	None	replace
45	[BUG]  [BUGGY]  ensureCapacity(size  +  width,  padChar,  0);  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width,  padChar,  0);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width,  padChar,  0);	  ensureCapacity(size    +    width,    padChar);    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	7	None	replace
46	[BUG]  [BUGGY]  size  +=  width;  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  size  +=  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	size  +=  width;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    width;    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	17	None	replace
47	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  size  +=  width;  [CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  size  +=  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  size  +=  width;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    width;    	non-compiled	[CE]  not  an  enclosing  class:  StrBuilder.StrBuilderReader	17	None	replace
48	[BUG]  [BUGGY]  ensureCapacity(size  +  width  +  2);  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width  +  2);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width  +  2);	  ensureCapacity(size    +    width    +    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
49	[BUG]  [BUGGY]  ensureCapacity(size  +  width  *  1);  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width  *  1);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width  *  1);	  ensureCapacity(size    +    width    +    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
50	[BUG]  [BUGGY]  ensureCapacity(size  +  width  +  3);  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width  +  3);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width  +  3);	  ensureCapacity(size    +    width    +    1);    	non-compiled	[CE]  not  a  statement	6	None	replace
51	[BUG]  [BUGGY]  ensureCapacity(size  +  width  /  1);  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width  /  1);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width  /  1);	  ensureCapacity(size    +    width    -    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
52	[BUG]  [BUGGY]  ensureCapacity(size  +  width  *  2  -  1);  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width  *  2  -  1);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width  *  2  -  1);	  ensureCapacity(size    +    width    -    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
53	[BUG]  [BUGGY]  ensureCapacity(size  +  length  -  1);  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  length  -  1);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  length  -  1);	  ensureCapacity(size    +    width    -    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
54	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  not  a  statement	15	None	replace
55	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  not  a  statement	15	None	replace
56	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
57	[BUG]  [BUGGY]  ensureCapacity(size  +  length  +  1);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  length  +  1);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  length  +  1);	  ensureCapacity(size    +    length);    	non-compiled	[CE]  ';'  expected	14	None	replace
58	[BUG]  [BUGGY]  ensureCapacity(size  +  length  -  width);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  length  -  width);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  length  -  width);	  ensureCapacity(size    +    length);    	non-compiled	[CE]  ';'  expected	14	None	replace
59	[BUG]  [BUGGY]  ensureCapacity(width  +  padLen);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(width  +  padLen);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(width  +  padLen);	  ensureCapacity(size    +    padLen);    	non-compiled	[CE]  ';'  expected	9	None	replace
60	[BUG]  [BUGGY]  ensureCapacity(length  +  padLen);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(length  +  padLen);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(length  +  padLen);	  ensureCapacity(size    +    padLen);    	non-compiled	[CE]  ';'  expected	9	None	replace
61	[BUG]  [BUGGY]  ensureCapacity(size  -  padLen);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  -  padLen);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  -  padLen);	  ensureCapacity(size    +    padLen);    	non-compiled	[CE]  ';'  expected	9	None	replace
62	[BUG]  [BUGGY]  ensureCapacity(size  +  width  *  2);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width  *  2);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width  *  2);	  ensureCapacity(size    +    width    *    padChar);    	non-compiled	[CE]  ';'  expected	13	None	replace
63	[BUG]  [BUGGY]  ensureCapacity(size  +  width  *  padChar  -  1);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width  *  padChar  -  1);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width  *  padChar  -  1);	  ensureCapacity(size    +    width    *    padChar);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
64	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
65	[BUG]  [BUGGY]  int  strLen  =(obj!=  null?  getNullText()  :  obj.toString());  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  strLen  =(obj!=  null?  getNullText()  :  obj.toString());  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  strLen  =(obj!=  null?  getNullText()  :  obj.toString());	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
66	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer(parent);  size  +=  width;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer(parent);  size  +=  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer(parent);  size  +=  width;	      Integer    size    =    getImmediateParentPointer(obj);    size    +=    size;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
67	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer(obj,  width);  size  +=  width;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer(obj,  width);  size  +=  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer(obj,  width);  size  +=  width;	      Integer    size    =    getImmediateParentPointer(obj);    size    +=    size;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
68	[BUG]  [BUGGY]  int  size  =  obj!=  null?  obj.getSize()  :  width;  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj!=  null?  obj.getSize()  :  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj!=  null?  obj.getSize()  :  width;	      int    size    =    obj.getSize();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
69	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.size();  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.size();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj  ==  null?  getNullText()  :  obj.size();	      int    size    =    obj.size();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
70	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.getLength();  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.getLength();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj  ==  null?  getNullText()  :  obj.getLength();	      int    size    =    obj.getLength();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
71	[BUG]  [BUGGY]  Integer  size  =  getItemCount(width,  width);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getItemCount(width,  width);  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getItemCount(width,  width);	      Integer    size    =    getItemCount(width);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
72	[BUG]  [BUGGY]  ensureCapacity(length  +  size);  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(length  +  size);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(length  +  size);	  ensureCapacity(size    +    length);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
73	[BUG]  [BUGGY]  ensureCapacity(width  +  length);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(width  +  length);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(width  +  length);	  ensureCapacity(size    +    length);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
74	[BUG]  [BUGGY]  ensureCapacity(len  +  length);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(len  +  length);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(len  +  length);	  ensureCapacity(size    +    length);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
75	[BUG]  [BUGGY]  Size  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Size  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Size  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    width;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
76	[BUG]  [BUGGY]  int  strLen  =(width  ==  null?  getNullText()  :  obj.toString())+  width;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  strLen  =(width  ==  null?  getNullText()  :  obj.toString())+  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  strLen  =(width  ==  null?  getNullText()  :  obj.toString())+  width;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
77	[BUG]  [BUGGY]  int  strLen  =(obj!=  null?  getNullText()  :  obj.toString());  size  +=  length;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  strLen  =(obj!=  null?  getNullText()  :  obj.toString());  size  +=  length;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  strLen  =(obj!=  null?  getNullText()  :  obj.toString());  size  +=  length;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    length;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
78	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer().getWidth();  size  +=  width;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer().getWidth();  size  +=  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer().getWidth();  size  +=  width;	      Integer    size    =    getImmediateParentPointer().getSize();    size    +=    size;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
79	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer().getHeight();  size  +=  width;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer().getHeight();  size  +=  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer().getHeight();  size  +=  width;	      Integer    size    =    getImmediateParentPointer().getSize();    size    +=    size;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
80	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer().getWidth()  -  width;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer().getWidth()  -  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer().getWidth()  -  width;	      Integer    size    =    getImmediateParentPointer().getWidth();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
81	[BUG]  [BUGGY]  ensureCapacity(size  +  width,  padChar  +  1);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width,  padChar  +  1);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width,  padChar  +  1);	  ensureCapacity(size    +    width,    padChar);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
82	[BUG]  [BUGGY]  ensureCapacity(size  +  width,  padChar  -  1);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width,  padChar  -  1);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width,  padChar  -  1);	  ensureCapacity(size    +    width,    padChar);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
83	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getFixedWidth()  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj  ==  null?  getFixedWidth()  :  obj.toString();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj  ==  null?  getFixedWidth()  :  obj.toString();	      int    size    =    obj    ==    null?    getNullText()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
84	[BUG]  [BUGGY]  ensureCapacity(size  +  padLen,  padChar);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  padLen,  padChar);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  padLen,  padChar);	  ensureCapacity(size    +    width,    padChar);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
85	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen,  padChar);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  strLen,  padChar);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  strLen,  padChar);	  ensureCapacity(size    +    width,    padChar);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
86	[BUG]  [BUGGY]  ensureCapacity(size  +  length,  padChar);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  length,  padChar);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  length,  padChar);	  ensureCapacity(size    +    width,    padChar);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
87	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getNullText()  :  obj.toString())+  padChar;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  strLen  =(str  ==  null?  getNullText()  :  obj.toString())+  padChar;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  strLen  =(str  ==  null?  getNullText()  :  obj.toString())+  padChar;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
88	[BUG]  [BUGGY]  ensureCapacity(size  +  padLen  -  1);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  padLen  -  1);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  padLen  -  1);	  ensureCapacity(size    +    width    -    1);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
89	[BUG]  [BUGGY]  int  size  =  width.getSize();  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  width.getSize();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  width.getSize();	      int    size    =    obj.getSize();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
90	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer().getSize();  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer().getSize();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer().getSize();	      Integer    size    =    getImmediateParentPointer().getWidth();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
91	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer().getSize()  +  width;  size  +=  size;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer().getSize()  +  width;  size  +=  size;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer().getSize()  +  width;  size  +=  size;	      Integer    size    =    getImmediateParentPointer().getSize();    size    +=    size;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
92	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer().getLength();  size  +=  size;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer().getLength();  size  +=  size;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer().getLength();  size  +=  size;	      Integer    size    =    getImmediateParentPointer().getSize();    size    +=    size;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
93	[BUG]  [BUGGY]  int  size  =  width.getLength();  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  width.getLength();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  width.getLength();	      int    size    =    obj.getLength();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
94	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  strLen  +  1);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  strLen  +  1);	  ensureCapacity(size    +    width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
95	[BUG]  [BUGGY]  Integer  size  =  getItemCount(width  -  2);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getItemCount(width  -  2);  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getItemCount(width  -  2);	      Integer    size    =    getItemCount(width);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
96	[BUG]  [BUGGY]  ensureCapacity(size  +  len);  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  len);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  len);	  ensureCapacity(size    +    length);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
97	[BUG]  [BUGGY]  ensureCapacity(size  +  length  *  2);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  length  *  2);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  length  *  2);	  ensureCapacity(size    +    length);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
98	[BUG]  [BUGGY]  Integer  size  =  getImmediateParentPointer(obj);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  Integer  size  =  getImmediateParentPointer(obj);  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	Integer  size  =  getImmediateParentPointer(obj);	      Integer    size    =    getImmediateParentPointer(obj);    size    +=    size;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
99	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getImmediateParentPointer()  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  int  size  =  obj  ==  null?  getImmediateParentPointer()  :  obj.toString();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	int  size  =  obj  ==  null?  getImmediateParentPointer()  :  obj.toString();	      int    size    =    obj    ==    null?    getNullText()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
100	[BUG]  [BUGGY]  ensureCapacity(size  +  width  *  4);  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {    [BUGGY]  ensureCapacity(size  +  width  *  4);  [BUGGY]    String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width  *  4);	  ensureCapacity(size    +    width    *    padChar);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
