bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  size  =  obj.size();  [CE]  cannot  find  symbol  symbol  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]    int  size  =  obj.size();  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	    int  size  =  obj.size();		non-compiled	[CE]  cannot  find  symbol  symbol	4	None	add
2	[BUG]  [BUGGY]    int  size  =  obj.getSize();  [CE]  cannot  find  symbol  symbol  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]    int  size  =  obj.getSize();  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	    int  size  =  obj.getSize();		non-compiled	[CE]  cannot  find  symbol  symbol	4	None	add
3	[BUG]  [BUGGY]    Integer  size  =  getImmediateParentPointer().getSize();  size  +=  size;  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]    Integer  size  =  getImmediateParentPointer().getSize();  size  +=  size;  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	    Integer  size  =  getImmediateParentPointer().getSize();  size  +=  size;		non-compiled	[CE]  ';'  expected	4	None	add
4	[BUG]  [BUGGY]    Integer  size  =  getImmediateParentPointer().getWidth();  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]    Integer  size  =  getImmediateParentPointer().getWidth();  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	    Integer  size  =  getImmediateParentPointer().getWidth();		non-compiled	[CE]  ';'  expected	4	None	add
5	[BUG]  [BUGGY]    Integer  size  =  getImmediateParentPointer(obj);  size  +=  size;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]    Integer  size  =  getImmediateParentPointer(obj);  size  +=  size;  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	    Integer  size  =  getImmediateParentPointer(obj);  size  +=  size;		non-compiled	[CE]  ';'  expected	4	None	add
6	[BUG]  [BUGGY]  ensureCapacity(size  +  width  +  1);  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]  ensureCapacity(size  +  width  +  1);  [BUGGY]  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width  +  1);	ensureCapacity(size  +  width);  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
7	[BUG]  [BUGGY]  ensureCapacity(size  +  width,  padChar);  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]  ensureCapacity(size  +  width,  padChar);  [BUGGY]  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width,  padChar);	ensureCapacity(size  +  width);  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
8	[BUG]  [BUGGY]  ensureCapacity(size  +  width  -  1);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]  ensureCapacity(size  +  width  -  1);  [BUGGY]  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width  -  1);	ensureCapacity(size  +  width);  	non-compiled	[CE]  ';'  expected	3	None	replace
9	[BUG]  [BUGGY]  ensureCapacity(size  +  padLen);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]  ensureCapacity(size  +  padLen);  [BUGGY]  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  padLen);	ensureCapacity(size  +  width);  	non-compiled	[CE]  ';'  expected	3	None	replace
10	[BUG]  [BUGGY]    int  size  =  obj.getLength();  [CE]  cannot  find  symbol  value  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]    int  size  =  obj.getLength();  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	    int  size  =  obj.getLength();		non-compiled	[CE]  cannot  find  symbol  value	4	None	add
11	[BUG]  [BUGGY]    int  size  =  length();  [CE]  cannot  find  symbol  value  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]    int  size  =  length();  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	    int  size  =  length();		non-compiled	[CE]  cannot  find  symbol  value	4	None	add
12	[BUG]  [BUGGY]    Integer  size  =  getItemCount(width);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]    Integer  size  =  getItemCount(width);  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	    Integer  size  =  getItemCount(width);		non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	4	None	add
13	[BUG]  [BUGGY]  ensureCapacity(size  +  width  *  padChar);  [CE]  cannot  find  symbol  value  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]  ensureCapacity(size  +  width  *  padChar);  [BUGGY]  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  width  *  padChar);	ensureCapacity(size  +  width);  	non-compiled	[CE]  cannot  find  symbol  value	3	None	replace
14	[BUG]  [BUGGY]  ensureCapacity(size  +  length);  [CE]  cannot  find  symbol  value  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]  ensureCapacity(size  +  length);  [BUGGY]  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	ensureCapacity(size  +  length);	ensureCapacity(size  +  width);  	non-compiled	[CE]  cannot  find  symbol  value	3	None	replace
15	[BUG]  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());		non-compiled	[CE]  ';'  expected	4	None	add
16	[BUG]  [BUGGY]    int  size  =  obj  ==  null?  getNullText()  :  obj.toString();  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]    int  size  =  obj  ==  null?  getNullText()  :  obj.toString();  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	    int  size  =  obj  ==  null?  getNullText()  :  obj.toString();		non-compiled	[CE]  ';'  expected	4	None	add
17	[BUG]  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  size  +=  width;  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  size  +=  width;  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  size  +=  width;		non-compiled	[CE]  ';'  expected	4	None	add
18	[BUG]  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString())+  width;  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString())+  width;  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString())+  width;		non-compiled	[CE]  ';'  expected	4	None	add
19	[BUG]  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  size  +=  length;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  size  +=  length;  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  size  +=  length;		non-compiled	[CE]  ';'  expected	4	None	add
