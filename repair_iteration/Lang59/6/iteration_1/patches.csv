bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen);  size  +=  width;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen);  size  +=  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen);  size  +=  width;	      Integer    strLen    =    getIndex(strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
2	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen  +  1);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen  +  1);  size  +=  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen  +  1);  size  +=  strLen;	      Integer    strLen    =    getIndex(strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
3	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen  -  1);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen  -  1);  size  +=  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen  -  1);  size  +=  strLen;	      Integer    strLen    =    getIndex(strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
4	[BUG]  [BUGGY]  int  strLen  =  getIndex(strLen);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  getIndex(strLen);  size  +=  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  getIndex(strLen);  size  +=  strLen;	      Integer    strLen    =    getIndex(strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
5	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen,  width);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen,  width);  size  +=  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen,  width);  size  +=  strLen;	      Integer    strLen    =    getIndex(strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
6	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen);  size  +=  length;  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen);  size  +=  length;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen);  size  +=  length;	      Integer    strLen    =    getIndex(strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
7	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen  +  width);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen  +  width);  size  +=  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen  +  width);  size  +=  strLen;	      Integer    strLen    =    getIndex(strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
8	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen  +  2);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen  +  2);  size  +=  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen  +  2);  size  +=  strLen;	      Integer    strLen    =    getIndex(strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
9	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  width  -  padChar);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  width  -  padChar);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  width  -  padChar);	      int    strLen    =    Math.min(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
10	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  width  -  1);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  width  -  1);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  width  -  1);	      int    strLen    =    Math.min(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
11	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  width  +  1);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  width  +  1);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  width  +  1);	      int    strLen    =    Math.min(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
12	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  length);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  length);	      int    strLen    =    Math.min(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
13	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  padChar);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  padChar);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  padChar);	      int    strLen    =    Math.min(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
14	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  size);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  size);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  size);	      int    strLen    =    Math.min(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
15	[BUG]  [BUGGY]  int  strLen  =  Math.min(size,  width);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(size,  width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(size,  width);	      int    strLen    =    Math.min(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
16	[BUG]  [BUGGY]  int  strLen  =  height  -  strLen;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  height  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  height  -  strLen;	      int    strLen    =    length    -    strLen;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
17	[BUG]  [BUGGY]  int  strLen  =  length  -  width;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  length  -  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  length  -  width;	      int    strLen    =    length    -    strLen;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
18	[BUG]  [BUGGY]  int  strLen  =  length  -  strLen  +  1;  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  length  -  strLen  +  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  length  -  strLen  +  1;	      int    strLen    =    length    -    strLen;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
19	[BUG]  [BUGGY]  char  strLen  =  length  -  strLen;  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  char  strLen  =  length  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	char  strLen  =  length  -  strLen;	      int    strLen    =    length    -    strLen;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
20	[BUG]  [BUGGY]  float  strLen  =  length  -  strLen;  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  float  strLen  =  length  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	float  strLen  =  length  -  strLen;	      int    strLen    =    length    -    strLen;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
21	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  0)?  width  :  padChar;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  0)?  width  :  padChar;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  0)?  width  :  padChar;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
22	[BUG]  [BUGGY]  int  strLen  =(strLen  >  0)?  width  :  strLen;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >  0)?  width  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >  0)?  width  :  strLen;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
23	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  0)?  width  :  length;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  0)?  width  :  length;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  0)?  width  :  length;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
24	[BUG]  [BUGGY]  int  strLen  =(strLen  >=  0)?  width  :  strLen;  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >=  0)?  width  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >=  0)?  width  :  strLen;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
25	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  0)?  size  :  strLen;  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  0)?  size  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  0)?  size  :  strLen;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
26	[BUG]  [BUGGY]  int  strLen  =(strLen  >=  0)?  width  :  padChar;  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >=  0)?  width  :  padChar;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >=  0)?  width  :  padChar;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
27	[BUG]  [BUGGY]  int  strLen  =(strLen  >=  0)?  width  :  length;  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >=  0)?  width  :  length;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >=  0)?  width  :  length;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
28	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  0)?  width  :  size;  [CE]  <identifier>  expected  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  0)?  width  :  size;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  0)?  width  :  size;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
29	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  width  +  1);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  width  +  1);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  width  +  1);	  str.getChars(0,    strLen,    buffer,    size    +    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
30	[BUG]  [BUGGY]  str.getChars(0,  width,  buffer,  size  +  1);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  width,  buffer,  size  +  1);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  width,  buffer,  size  +  1);	  str.getChars(0,    strLen,    buffer,    size    +    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
31	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  null  :  str.toString();	      String    strLen    =(strLen    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
32	[BUG]  [BUGGY]  String  strLen  =(str!=  null)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str!=  null)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str!=  null)?  null  :  str.toString();	      String    strLen    =(strLen    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
33	[BUG]  [BUGGY]  String  strLen  =(str  >=  null)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  >=  null)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  >=  null)?  null  :  str.toString();	      String    strLen    =(strLen    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
34	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  0  :  str.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  0  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  0  :  str.toString();	      String    strLen    =(strLen    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
35	[BUG]  [BUGGY]  String  strLen  =(str  >>  null)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  >>  null)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  >>  null)?  null  :  str.toString();	      String    strLen    =(strLen    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
36	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  getNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  getNullText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  getNullText()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  String  strLen  =(str!=  null)?  0  :  str.toString();  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str!=  null)?  0  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str!=  null)?  0  :  str.toString();	      String    strLen    =(strLen    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  int  size  =(strLen  >=  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen  >=  width)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen  >=  width)?  0  :  strLen;	      int    size    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
39	[BUG]  [BUGGY]  int  size  =(strLen  >  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen  >  width)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen  >  width)?  0  :  strLen;	      int    size    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
40	[BUG]  [BUGGY]  int  size  =(strLen!=  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen!=  width)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen!=  width)?  0  :  strLen;	      int    size    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
41	[BUG]  [BUGGY]  int  size  =(strLen  >>  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen  >>  width)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen  >>  width)?  0  :  strLen;	      int    size    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
42	[BUG]  [BUGGY]  int  size  =(strLen  >=  length)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen  >=  length)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen  >=  length)?  0  :  strLen;	      int    size    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
43	[BUG]  [BUGGY]  int  size  =(strLen  ==  length)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen  ==  length)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen  ==  length)?  0  :  strLen;	      int    size    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
44	[BUG]  [BUGGY]  int  size  =(strLen  [Delete]  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]                                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen  [Delete]  width)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen  [Delete]  width)?  0  :  strLen;	      int    size    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
45	[BUG]  [BUGGY]  int  size  =(strLen  >=  width)?  0  :  strLen  +  1;  [CE]  <identifier>  expected  [FE]                                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen  >=  width)?  0  :  strLen  +  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen  >=  width)?  0  :  strLen  +  1;	      int    size    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
46	[BUG]  [BUGGY]  int  strLen  =  width  -  strLen  +  1;  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  width  -  strLen  +  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  width  -  strLen  +  1;	      int    strLen    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
47	[BUG]  [BUGGY]  int  strLen  =  width  -  padChar;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  width  -  padChar;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  width  -  padChar;	      int    strLen    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
48	[BUG]  [BUGGY]  int  strLen  =  width  /  strLen;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  width  /  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  width  /  strLen;	      int    strLen    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
49	[BUG]  [BUGGY]  int  strLen  =  width  -  strLen  +  2;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  width  -  strLen  +  2;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  width  -  strLen  +  2;	      int    strLen    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
50	[BUG]  [BUGGY]  int  len  =  strLen;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  strLen;	      int    len    =    length();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
51	[BUG]  [BUGGY]  int  len  =  width();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  width();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  width();	      int    len    =    length();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
52	[BUG]  [BUGGY]  int  len  =  length  -  strLen;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  length  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  length  -  strLen;	      int    len    =    length();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
53	[BUG]  [BUGGY]  int  len  =  length()  -  1;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  length()  -  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  length()  -  1;	      int    len    =    length();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
54	[BUG]  [BUGGY]  int  len  =  size();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  size();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  size();	      int    len    =    length();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
55	[BUG]  [BUGGY]  int  len  =  getLength();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  getLength();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  getLength();	      int    len    =    length();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
56	[BUG]  [BUGGY]  int  len  =  length()  +  strLen;  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  length()  +  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  length()  +  strLen;	      int    len    =    length();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
57	[BUG]  [BUGGY]  str.getChars(0,  width,  buffer,  size  -  strLen);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  width,  buffer,  size  -  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  width,  buffer,  size  -  strLen);	  str.getChars(0,    strLen,    buffer,    size    -    width);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
58	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  padChar);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  padChar);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  padChar);	  str.getChars(0,    strLen,    buffer,    size    -    width);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
59	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  length);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  length);	  str.getChars(0,    strLen,    buffer,    size    -    width);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
60	[BUG]  [BUGGY]  str.getChars(1,  strLen,  buffer,  size);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(1,  strLen,  buffer,  size);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(1,  strLen,  buffer,  size);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
61	[BUG]  [BUGGY]  StringBuffer  str  =  new  StringBuffer(strLen,  width,  buffer,  size);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StringBuffer  str  =  new  StringBuffer(strLen,  width,  buffer,  size);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StringBuffer  str  =  new  StringBuffer(strLen,  width,  buffer,  size);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
62	[BUG]  [BUGGY]  .getChars(0,  strLen,  buffer,  size);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  .getChars(0,  strLen,  buffer,  size);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	.getChars(0,  strLen,  buffer,  size);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
63	[BUG]  [BUGGY]  str.getChars(0,  width,  buffer,  size  +  strLen);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  width,  buffer,  size  +  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  width,  buffer,  size  +  strLen);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
64	[BUG]  [BUGGY]  str.getChars(0,  width,  buffer,  size  +  length);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  width,  buffer,  size  +  length);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  width,  buffer,  size  +  length);	  str.getChars(0,    strLen,    buffer,    size    +    length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
65	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  length  -  width);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  length  -  width);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  length  -  width);	  str.getChars(0,    strLen,    buffer,    size    +    length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
66	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  width  +  length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  width  +  length);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  width  +  length);	  str.getChars(0,    strLen,    buffer,    size    +    length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
67	[BUG]  [BUGGY]  String  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null?  getNullText()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
68	[BUG]  [BUGGY]  String  strLen  =(str!=  null?  getNullText()  :  obj.toString());  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str!=  null?  getNullText()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str!=  null?  getNullText()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
69	[BUG]  [BUGGY]  String  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
70	[BUG]  [BUGGY]  String  strLen  =(obj!=  null?  getNullText()  :  obj.toString());  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(obj!=  null?  getNullText()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(obj!=  null?  getNullText()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
71	[BUG]  [BUGGY]  String  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null?  getWidth()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
72	[BUG]  [BUGGY]  String  strLen  =(str!=  null?  getWidth()  :  obj.toString());  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str!=  null?  getWidth()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str!=  null?  getWidth()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
73	[BUG]  [BUGGY]  String  strLen  =(str  ==  null?  getNativeText()  :  obj.toString());  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null?  getNativeText()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null?  getNativeText()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
74	[BUG]  [BUGGY]  String  strLen  =(str  ==  null?  getText()  :  obj.toString());  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null?  getText()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null?  getText()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
75	[BUG]  [BUGGY]  String  strLen  =(str  ==  null?  getFixedText()  :  obj.toString());  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null?  getFixedText()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null?  getFixedText()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
76	[BUG]  [BUGGY]  ensureCapacity(size  +  strLen);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(size  +  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(size  +  strLen);	      ensureCapacity(strLen    +    strLen);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
77	[BUG]  [BUGGY]  ensureCapacity(length  +  strLen);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(length  +  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(length  +  strLen);	      ensureCapacity(strLen    +    strLen);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
78	[BUG]  [BUGGY]  ensureCapacity(strLen  -  strLen);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  -  strLen);	      ensureCapacity(strLen    +    strLen);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
79	[BUG]  [BUGGY]  ensureCapacity(width  +  strLen);  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(width  +  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(width  +  strLen);	      ensureCapacity(strLen    +    strLen);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
80	[BUG]  [BUGGY]  ensureCapacity(strLen  +  length);  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  +  length);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  +  length);	      ensureCapacity(strLen    +    strLen);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
81	[BUG]  [BUGGY]  ensureCapacity(size  -  strLen);  [CE]  <identifier>  expected  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(size  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(size  -  strLen);	      ensureCapacity(strLen    +    strLen);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
82	[BUG]  [BUGGY]  ensureCapacity(strLen  +  size);  [CE]  <identifier>  expected  [FE]                                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  +  size);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  +  size);	      ensureCapacity(strLen    +    strLen);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
83	[BUG]  [BUGGY]  EnsureCapacity(size  +  strLen);  [CE]  <identifier>  expected  [FE]                                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  EnsureCapacity(size  +  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	EnsureCapacity(size  +  strLen);	      ensureCapacity(strLen    +    strLen);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
84	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getNumberText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getNumberText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getNumberText()  :  str.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
85	[BUG]  [BUGGY]  String  strLen  =(strLen  >=  0)?  getNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  >=  0)?  getNullText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  >=  0)?  getNullText()  :  str.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
86	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getWidth()  :  str.toString();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getWidth()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getWidth()  :  str.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
87	[BUG]  [BUGGY]  String  strLen  =(strLen!=  0)?  getNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen!=  0)?  getNullText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen!=  0)?  getNullText()  :  str.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
88	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidth()  :  str.toString();  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidth()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getFixedWidth()  :  str.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
89	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getFixedText()  :  str.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
90	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getText()  :  str.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
91	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getNativeText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getNativeText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getNativeText()  :  str.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
92	[BUG]  [BUGGY]  str.getChars(0,  width,  buffer,  size  +  padLen);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  width,  buffer,  size  +  padLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  width,  buffer,  size  +  padLen);	  str.getChars(0,    strLen,    buffer,    size    +    padLen);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
93	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  width  +  padLen);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  width  +  padLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  width  +  padLen);	  str.getChars(0,    strLen,    buffer,    size    +    padLen);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
94	[BUG]  [BUGGY]  str.getChars(0,  padLen,  buffer,  size  +  strLen);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  padLen,  buffer,  size  +  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  padLen,  buffer,  size  +  strLen);	  str.getChars(0,    strLen,    buffer,    size    +    padLen);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
95	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  width  -  1);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  width  -  1);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  width  -  1);	  str.getChars(0,    strLen,    buffer,    size    -    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
96	[BUG]  [BUGGY]  str.getChars(0,  width,  buffer,  size  -  1);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  width,  buffer,  size  -  1);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  width,  buffer,  size  -  1);	  str.getChars(0,    strLen,    buffer,    size    -    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
97	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  2);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  2);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  2);	  str.getChars(0,    strLen,    buffer,    size    -    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
98	[BUG]  [BUGGY]  String  strLen  =(strLen  >=  width)?  getNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  >=  width)?  getNullText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  >=  width)?  getNullText()  :  str.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
99	[BUG]  [BUGGY]  String  strLen  =(strLen!=  width)?  getNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen!=  width)?  getNullText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen!=  width)?  getNullText()  :  str.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
100	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getNumberText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getNumberText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getNumberText()  :  str.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
101	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  length)?  getNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  length)?  getNullText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  length)?  getNullText()  :  str.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
102	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getWidth()  :  str.toString();  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getWidth()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getWidth()  :  str.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
103	[BUG]  [BUGGY]  String  strLen  =(strLen  >>  width)?  getNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  >>  width)?  getNullText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  >>  width)?  getNullText()  :  str.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
104	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getFixedWidth()  :  str.toString();  [CE]  <identifier>  expected  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getFixedWidth()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getFixedWidth()  :  str.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
105	[BUG]  [BUGGY]  int  strLen  =(strLen  >=  width)?  width  :  str.length();  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >=  width)?  width  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >=  width)?  width  :  str.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
106	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  0  :  str.length();  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  0  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  0  :  str.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
107	[BUG]  [BUGGY]  int  strLen  =(strLen  >=  width)?  0  :  str.length();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >=  width)?  0  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >=  width)?  0  :  str.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
108	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  length)?  width  :  str.length();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  length)?  width  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  length)?  width  :  str.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
109	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  length  :  str.length();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  length  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  length  :  str.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
110	[BUG]  [BUGGY]  int  strLen  =(strLen!=  width)?  width  :  str.length();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen!=  width)?  width  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen!=  width)?  width  :  str.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
111	[BUG]  [BUGGY]  int  strLen  =(strLen  >=  width)?  size  :  str.length();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >=  width)?  size  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >=  width)?  size  :  str.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
112	[BUG]  [BUGGY]  String  strLen  =(strLen  >=  width)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  >=  width)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  >=  width)?  null  :  str.toString();	      String    strLen    =(strLen    ==    width)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
113	[BUG]  [BUGGY]  String  strLen  =(strLen!=  width)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen!=  width)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen!=  width)?  null  :  str.toString();	      String    strLen    =(strLen    ==    width)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
114	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  null  :  str.toString();	      String    strLen    =(strLen    ==    width)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
115	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  length)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  length)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  length)?  null  :  str.toString();	      String    strLen    =(strLen    ==    width)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
116	[BUG]  [BUGGY]  String  strLen  =(strLen  >>  width)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  >>  width)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  >>  width)?  null  :  str.toString();	      String    strLen    =(strLen    ==    width)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
117	[BUG]  [BUGGY]  String  strLen  =(strLen  >=  0)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  >=  0)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  >=  0)?  null  :  str.toString();	      String    strLen    =(strLen    ==    width)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
118	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  0  :  str.toString();  [CE]  <identifier>  expected  [FE]                                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  0  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  0  :  str.toString();	      String    strLen    =(strLen    ==    width)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
119	[BUG]  [BUGGY]  String  strLen  =(strLen  >=  length)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  >=  length)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  >=  length)?  null  :  str.toString();	      String    strLen    =(strLen    ==    width)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
120	[BUG]  [BUGGY]  String  strLen  =(strLen  >=  width)?  getNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  >=  width)?  getNullText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  >=  width)?  getNullText()  :  obj.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
121	[BUG]  [BUGGY]  String  strLen  =(strLen!=  width)?  getNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen!=  width)?  getNullText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen!=  width)?  getNullText()  :  obj.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
122	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getNumberText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getNumberText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getNumberText()  :  obj.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
123	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  length)?  getNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  length)?  getNullText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  length)?  getNullText()  :  obj.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
124	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getWidth()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getWidth()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getWidth()  :  obj.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
125	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getFixedWidth()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getFixedWidth()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getFixedWidth()  :  obj.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
126	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getFixedText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getFixedText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getFixedText()  :  obj.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
127	[BUG]  [BUGGY]  int  len  =  width  -  strLen  +  1;  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  width  -  strLen  +  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  width  -  strLen  +  1;	      int    len    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
128	[BUG]  [BUGGY]  int  len  =  strLen  -  width;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  strLen  -  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  strLen  -  width;	      int    len    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
129	[BUG]  [BUGGY]  int  len  =  length  -  strLen  +  1;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  length  -  strLen  +  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  length  -  strLen  +  1;	      int    len    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
130	[BUG]  [BUGGY]  int  len  =  size  -  strLen;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  size  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  size  -  strLen;	      int    len    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
131	[BUG]  [BUGGY]  int  len  =  width  -  strLen  +  2;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  width  -  strLen  +  2;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  width  -  strLen  +  2;	      int    len    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
132	[BUG]  [BUGGY]  char  len  =  width  -  strLen;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  char  len  =  width  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	char  len  =  width  -  strLen;	      int    len    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
133	[BUG]  [BUGGY]  int  len  =  width  -  strLen.length;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  width  -  strLen.length;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  width  -  strLen.length;	      int    len    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
134	[BUG]  [BUGGY]  int  size  =  width();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  width();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  width();	      int    size    =    length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
135	[BUG]  [BUGGY]  int  size  =  length  -  strLen;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  length  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  length  -  strLen;	      int    size    =    length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
136	[BUG]  [BUGGY]  int  size  =  strLen();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  strLen();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  strLen();	      int    size    =    length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
137	[BUG]  [BUGGY]  int  size  =  length()  -  1;  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  length()  -  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  length()  -  1;	      int    size    =    length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
138	[BUG]  [BUGGY]  int  size  =  length()  +  strLen;  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  length()  +  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  length()  +  strLen;	      int    size    =    length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
139	[BUG]  [BUGGY]  int  size  =  length()  -  width;  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  length()  -  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  length()  -  width;	      int    size    =    length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
140	[BUG]  [BUGGY]  str.getChars(0,  width,  buffer,  size  -  padLen);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  width,  buffer,  size  -  padLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  width,  buffer,  size  -  padLen);	  str.getChars(0,    strLen,    buffer,    size    -    padLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
141	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  width  -  padLen);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  width  -  padLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  width  -  padLen);	  str.getChars(0,    strLen,    buffer,    size    -    padLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
142	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  padLen  +  1);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  padLen  +  1);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  padLen  +  1);	  str.getChars(0,    strLen,    buffer,    size    -    padLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
143	[BUG]  [BUGGY]  str.getChars(0,  padLen,  buffer,  size  -  strLen);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  padLen,  buffer,  size  -  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  padLen,  buffer,  size  -  strLen);	  str.getChars(0,    strLen,    buffer,    size    -    padLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
144	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen  +  1);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen  +  1);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen  +  1);	      Integer    strLen    =    getIndex(strLen);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
145	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen  -  1);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen  -  1);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen  -  1);	      Integer    strLen    =    getIndex(strLen);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
146	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen,  width);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen,  width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen,  width);	      Integer    strLen    =    getIndex(strLen);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
147	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen  +  width);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen  +  width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen  +  width);	      Integer    strLen    =    getIndex(strLen);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
148	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(size);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(size);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(size);	      Integer    strLen    =    getIndex(strLen);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
149	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen  -  width);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen  -  width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen  -  width);	      Integer    strLen    =    getIndex(strLen);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
150	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen  +  2);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen  +  2);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen  +  2);	      Integer    strLen    =    getIndex(strLen);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
151	[BUG]  [BUGGY]  Integer  strLen  =  getEndIndex(strLen);  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getEndIndex(strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getEndIndex(strLen);	      Integer    strLen    =    getIndex(strLen);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
152	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getNumberText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getNumberText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getNumberText()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
153	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getWidth()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getWidth()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getWidth()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
154	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidth()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidth()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getFixedWidth()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
155	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getFixedText()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
156	[BUG]  [BUGGY]  String  strLen  =(strLen  >=  0)?  getNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  >=  0)?  getNullText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  >=  0)?  getNullText()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
157	[BUG]  [BUGGY]  String  strLen  =(strLen!=  0)?  getNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen!=  0)?  getNullText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen!=  0)?  getNullText()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
158	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getText()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
159	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getNegatedText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getNegatedText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getNegatedText()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
160	[BUG]  [BUGGY]  int  size  =  width;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  width;	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
161	[BUG]  [BUGGY]  char  size  =  strLen;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  char  size  =  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	char  size  =  strLen;	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
162	[BUG]  [BUGGY]  float  size  =  strLen;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  float  size  =  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	float  size  =  strLen;	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
163	[BUG]  [BUGGY]  int  size  =  length;  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  length;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  length;	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
164	[BUG]  [BUGGY]  int  size  =  strLen  -  width;  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  strLen  -  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  strLen  -  width;	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
165	[BUG]  [BUGGY]  int  size  =  strLen  -  1;  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  strLen  -  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  strLen  -  1;	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
166	[BUG]  [BUGGY]  int  size  =  height;  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  height;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  height;	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
167	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  1;  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  str.length()  -  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  str.length()  -  1;	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
168	[BUG]  [BUGGY]  char  strLen  =  str.length();  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  char  strLen  =  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	char  strLen  =  str.length();	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
169	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  width;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  str.length()  -  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  str.length()  -  width;	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
170	[BUG]  [BUGGY]  int  strLen  =  str.length()  +  1;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  str.length()  +  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  str.length()  +  1;	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
171	[BUG]  [BUGGY]  int  strLen  =  str.length()  +  width;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  str.length()  +  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  str.length()  +  width;	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
172	[BUG]  [BUGGY]  Integer  strLen  =  str.length();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  str.length();	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
173	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getNullText()  :  str.length());  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(str  ==  null?  getNullText()  :  str.length());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(str  ==  null?  getNullText()  :  str.length());	      int    strLen    =(strLen    ==    null?    getNullText()    :    str.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
174	[BUG]  [BUGGY]  int  strLen  =(str!=  null?  getNullText()  :  str.length());  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(str!=  null?  getNullText()  :  str.length());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(str!=  null?  getNullText()  :  str.length());	      int    strLen    =(strLen    ==    null?    getNullText()    :    str.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
175	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getNumberText()  :  str.length());  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(str  ==  null?  getNumberText()  :  str.length());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(str  ==  null?  getNumberText()  :  str.length());	      int    strLen    =(strLen    ==    null?    getNullText()    :    str.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
176	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  str.length());  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  str.length());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(str  ==  null?  getWidth()  :  str.length());	      int    strLen    =(strLen    ==    null?    getNullText()    :    str.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
177	[BUG]  [BUGGY]  int  strLen  =(str!=  null?  getNumberText()  :  str.length());  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(str!=  null?  getNumberText()  :  str.length());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(str!=  null?  getNumberText()  :  str.length());	      int    strLen    =(strLen    ==    null?    getNullText()    :    str.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
178	[BUG]  [BUGGY]  int  strLen  =(str!=  null?  getWidth()  :  str.length());  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(str!=  null?  getWidth()  :  str.length());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(str!=  null?  getWidth()  :  str.length());	      int    strLen    =(strLen    ==    null?    getNullText()    :    str.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
179	[BUG]  [BUGGY]  int  strLen  =(str  >=  null?  getNullText()  :  str.length());  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(str  >=  null?  getNullText()  :  str.length());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(str  >=  null?  getNullText()  :  str.length());	      int    strLen    =(strLen    ==    null?    getNullText()    :    str.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
180	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getNonNullText()  :  str.length());  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(str  ==  null?  getNonNullText()  :  str.length());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(str  ==  null?  getNonNullText()  :  str.length());	      int    strLen    =(strLen    ==    null?    getNullText()    :    str.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
181	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getFixedWidth()  :  str.length());  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(str  ==  null?  getFixedWidth()  :  str.length());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(str  ==  null?  getFixedWidth()  :  str.length());	      int    strLen    =(strLen    ==    null?    getNullText()    :    str.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
182	[BUG]  [BUGGY]  ensureCapacity(size  -  width);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(size  -  width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(size  -  width);	      ensureCapacity(strLen    -    width);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
183	[BUG]  [BUGGY]  ensureCapacity(strLen  -  width  +  1);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  -  width  +  1);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  -  width  +  1);	      ensureCapacity(strLen    -    width);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
184	[BUG]  [BUGGY]  ensureCapacity(strLen  -  length);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  -  length);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  -  length);	      ensureCapacity(strLen    -    width);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
185	[BUG]  [BUGGY]  ensureCapacity(strLen  -  1);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  -  1);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  -  1);	      ensureCapacity(strLen    -    width);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
186	[BUG]  [BUGGY]  ensureCapacity(strLen  -  width,  padChar);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  -  width,  padChar);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  -  width,  padChar);	      ensureCapacity(strLen    -    width);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
187	[BUG]  [BUGGY]  ensureCapacity(strLen  -  width  +  padChar);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  -  width  +  padChar);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  -  width  +  padChar);	      ensureCapacity(strLen    -    width);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
188	[BUG]  [BUGGY]  int  strLen  =  Math.max(strLen,  width  -  padChar);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(strLen,  width  -  padChar);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(strLen,  width  -  padChar);	      int    strLen    =    Math.max(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
189	[BUG]  [BUGGY]  int  strLen  =  Math.max(strLen,  width  -  1);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(strLen,  width  -  1);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(strLen,  width  -  1);	      int    strLen    =    Math.max(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
190	[BUG]  [BUGGY]  int  strLen  =  Math.max(strLen,  size);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(strLen,  size);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(strLen,  size);	      int    strLen    =    Math.max(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
191	[BUG]  [BUGGY]  int  strLen  =  Math.max(strLen,  width  +  1);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(strLen,  width  +  1);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(strLen,  width  +  1);	      int    strLen    =    Math.max(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
192	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  buffer.length);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  buffer.length);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  buffer.length);	      int    strLen    =    Math.max(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
193	[BUG]  [BUGGY]  int  strLen  =  Math.max(strLen,  width  +  padChar);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(strLen,  width  +  padChar);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(strLen,  width  +  padChar);	      int    strLen    =    Math.max(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
194	[BUG]  [BUGGY]  int  strLen  =  Math.max(strLen,  length);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(strLen,  length);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(strLen,  length);	      int    strLen    =    Math.max(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
195	[BUG]  [BUGGY]  str.getChars(0,  width,  buffer,  strLen);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  width,  buffer,  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  width,  buffer,  strLen);	  str.getChars(0,    strLen,    buffer,    width);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
196	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  width  -  strLen);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  width  -  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  width  -  strLen);	  str.getChars(0,    strLen,    buffer,    width);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
197	[BUG]  [BUGGY]  str.getChars(0,  padChar,  buffer,  width);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  padChar,  buffer,  width);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  padChar,  buffer,  width);	  str.getChars(0,    strLen,    buffer,    width);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
198	[BUG]  [BUGGY]  str.getChars(0,  length,  buffer,  size  -  strLen);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  length,  buffer,  size  -  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  length,  buffer,  size  -  strLen);	  str.getChars(0,    strLen,    buffer,    size    -    strLen);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
199	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  width  +  strLen);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  width  +  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  width  +  strLen);	  str.getChars(0,    strLen,    buffer,    size    +    strLen);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
200	[BUG]  [BUGGY]  int  strLen  =  size  -  strLen  +  1;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  size  -  strLen  +  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  size  -  strLen  +  1;	      int    strLen    =    size    -    strLen;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
201	[BUG]  [BUGGY]  float  strLen  =  size  -  strLen;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  float  strLen  =  size  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	float  strLen  =  size  -  strLen;	      int    strLen    =    size    -    strLen;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
202	[BUG]  [BUGGY]  char  strLen  =  size  -  strLen;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  char  strLen  =  size  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	char  strLen  =  size  -  strLen;	      int    strLen    =    size    -    strLen;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
203	[BUG]  [BUGGY]  int  strLen  =  size  -  width;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  size  -  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  size  -  width;	      int    strLen    =    size    -    strLen;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
204	[BUG]  [BUGGY]  ensureCapacity(size);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(size);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(size);	      ensureCapacity(strLen);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
205	[BUG]  [BUGGY]  ensureCapacity(length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(length);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(length);	      ensureCapacity(strLen);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
206	[BUG]  [BUGGY]  ensureCapacity(strLen,  width);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen,  width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen,  width);	      ensureCapacity(strLen);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
207	[BUG]  [BUGGY]  int  strLen  =  Math.min(size,  width  -  strLen);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(size,  width  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(size,  width  -  strLen);	      int    strLen    =    Math.min(strLen,    width    -    strLen);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
208	[BUG]  [BUGGY]  int  strLen  =  Math.min(length,  width  -  strLen);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(length,  width  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(length,  width  -  strLen);	      int    strLen    =    Math.min(strLen,    width    -    strLen);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
209	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  size  -  strLen);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  size  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  size  -  strLen);	      int    strLen    =    Math.min(strLen,    width    -    strLen);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
210	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  width  -  length);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  width  -  length);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  width  -  length);	      int    strLen    =    Math.min(strLen,    width    -    strLen);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
211	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  width  +  strLen);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  width  +  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  width  +  strLen);	      int    strLen    =    Math.min(strLen,    width    -    strLen);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
212	[BUG]  [BUGGY]  char  strLen  =  Math.min(strLen,  width  -  strLen);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  char  strLen  =  Math.min(strLen,  width  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	char  strLen  =  Math.min(strLen,  width  -  strLen);	      int    strLen    =    Math.min(strLen,    width    -    strLen);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
213	[BUG]  [BUGGY]  int  strLen  =(strLen  >  width)?  width  :  strLen;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >  width)?  width  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >  width)?  width  :  strLen;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
214	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  size  :  strLen;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  size  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  size  :  strLen;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
215	[BUG]  [BUGGY]  int  strLen  =(strLen  >=  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >=  width)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >=  width)?  0  :  strLen;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
216	[BUG]  [BUGGY]  int  strLen  =(strLen  >=  width)?  size  :  strLen;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >=  width)?  size  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >=  width)?  size  :  strLen;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
217	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  length)?  width  :  strLen;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  length)?  width  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  length)?  width  :  strLen;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
218	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  width  :  padChar;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  width  :  padChar;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  width  :  padChar;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
219	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  length  :  strLen;  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  length  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  length  :  strLen;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
220	[BUG]  [BUGGY]  int  strLen  =(strLen  >  width)?  size  :  str.length();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >  width)?  size  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >  width)?  size  :  str.length();	      int    strLen    =(strLen    ==    width)?    size    :    str.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
221	[BUG]  [BUGGY]  int  strLen  =(strLen!=  width)?  size  :  str.length();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen!=  width)?  size  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen!=  width)?  size  :  str.length();	      int    strLen    =(strLen    ==    width)?    size    :    str.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
222	[BUG]  [BUGGY]  int  size  =  width  -  strLen  +  1;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  width  -  strLen  +  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  width  -  strLen  +  1;	      int    size    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
223	[BUG]  [BUGGY]  int  size  =  height  -  strLen;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  height  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  height  -  strLen;	      int    size    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
224	[BUG]  [BUGGY]  int  size  =  width  -  strLen  +  2;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  width  -  strLen  +  2;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  width  -  strLen  +  2;	      int    size    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
225	[BUG]  [BUGGY]  int  size  =  length  -  strLen  +  1;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  length  -  strLen  +  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  length  -  strLen  +  1;	      int    size    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
226	[BUG]  [BUGGY]  int  size  =  width  -  padChar;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  width  -  padChar;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  width  -  padChar;	      int    size    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
227	[BUG]  [BUGGY]  int  size  =  width  /  strLen;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  width  /  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  width  /  strLen;	      int    size    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
228	[BUG]  [BUGGY]  int  strLen  =(strLen  >  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >  width)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >  width)?  0  :  strLen;	      int    strLen    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
229	[BUG]  [BUGGY]  int  strLen  =(strLen!=  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen!=  width)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen!=  width)?  0  :  strLen;	      int    strLen    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
230	[BUG]  [BUGGY]  int  strLen  =(strLen  >>  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >>  width)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >>  width)?  0  :  strLen;	      int    strLen    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
231	[BUG]  [BUGGY]  int  strLen  =(strLen  >=  length)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >=  length)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >=  length)?  0  :  strLen;	      int    strLen    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
232	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  length)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  length)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  length)?  0  :  strLen;	      int    strLen    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
233	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  0  :  length;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  0  :  length;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  0  :  length;	      int    strLen    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
234	[BUG]  [BUGGY]  int  strLen  =(strLen  >=  width)?  0  :  length;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  >=  width)?  0  :  length;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  >=  width)?  0  :  length;	      int    strLen    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
235	[BUG]  [BUGGY]  ensureCapacity(size  +  width);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(size  +  width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(size  +  width);	      ensureCapacity(strLen    +    width);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
236	[BUG]  [BUGGY]  ensureCapacity(strLen  +  width  -  1);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  +  width  -  1);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  +  width  -  1);	      ensureCapacity(strLen    +    width);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
237	[BUG]  [BUGGY]  ensureCapacity(strLen  +  width  -  padChar);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  +  width  -  padChar);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  +  width  -  padChar);	      ensureCapacity(strLen    +    width);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
238	[BUG]  [BUGGY]  ensureCapacity(strLen  +  padChar);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  +  padChar);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  +  padChar);	      ensureCapacity(strLen    +    width);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
239	[BUG]  [BUGGY]  String  strLen  =(str!=  null)?  getNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str!=  null)?  getNullText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str!=  null)?  getNullText()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
240	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  getNonNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  getNonNullText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  getNonNullText()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
241	[BUG]  [BUGGY]  String  strLen  =(str  >=  null)?  getNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  >=  null)?  getNullText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  >=  null)?  getNullText()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
242	[BUG]  [BUGGY]  String  strLen  =(str!=  null)?  getNonNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str!=  null)?  getNonNullText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str!=  null)?  getNonNullText()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
243	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  getFixedText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  getFixedText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  getFixedText()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
244	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  getNumberText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  getNumberText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  getNumberText()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
245	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  getWidth()  :  str.toString();  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  getWidth()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  getWidth()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
246	[BUG]  [BUGGY]  String  strLen  =(str!=  null)?  getWidth()  :  str.toString();  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str!=  null)?  getWidth()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str!=  null)?  getWidth()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
247	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  getNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  getNullText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  getNullText()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
248	[BUG]  [BUGGY]  String  strLen  =(str!=  null)?  getNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str!=  null)?  getNullText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str!=  null)?  getNullText()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
249	[BUG]  [BUGGY]  String  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
250	[BUG]  [BUGGY]  String  strLen  =(obj!=  null)?  getNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(obj!=  null)?  getNullText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(obj!=  null)?  getNullText()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
251	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  getFixedText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  getFixedText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  getFixedText()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
252	[BUG]  [BUGGY]  String  strLen  =(str  >=  null)?  getNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  >=  null)?  getNullText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  >=  null)?  getNullText()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
253	[BUG]  [BUGGY]  String  strLen  =(str!=  null)?  getFixedText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str!=  null)?  getFixedText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str!=  null)?  getFixedText()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
254	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  getWidthText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  getWidthText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  getWidthText()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
255	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  getFixedWidthLen()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  getFixedWidthLen()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  getFixedWidthLen()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
256	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  width  +  2);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  width  +  2);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  width  +  2);	  str.getChars(0,    strLen,    buffer,    size    +    2);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
257	[BUG]  [BUGGY]  str.getChars(0,  width,  buffer,  size  +  2);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  width,  buffer,  size  +  2);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  width,  buffer,  size  +  2);	  str.getChars(0,    strLen,    buffer,    size    +    2);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
258	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  /  2);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  /  2);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  /  2);	  str.getChars(0,    strLen,    buffer,    size    +    2);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
259	[BUG]  [BUGGY]  int  size  =  width  -  strLen  +  4;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  width  -  strLen  +  4;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  width  -  strLen  +  4;	      int    size    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
260	[BUG]  [BUGGY]  int  size  =  width  -  strLen  +  3;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  width  -  strLen  +  3;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  width  -  strLen  +  3;	      int    size    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
261	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getWidth()  :  str.toString();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getWidth()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getWidth()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
262	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getSeparator()  :  str.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getSeparator()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getSeparator()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
263	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getText()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
264	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getNumberText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getNumberText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getNumberText()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
265	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getFixedWidth()  :  str.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getFixedWidth()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getFixedWidth()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
266	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getNonNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getNonNullText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getNonNullText()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
267	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getNegativeText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getNegativeText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getNegativeText()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
268	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getFixedWidthText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getFixedWidthText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getFixedWidthText()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
269	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  height  :  str.length();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  height  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  height  :  str.length();	      int    strLen    =(strLen    ==    width)?    size    :    str.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
270	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  size  -  width  :  str.length();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  size  -  width  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  size  -  width  :  str.length();	      int    strLen    =(strLen    ==    width)?    size    :    str.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
271	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  1  :  str.length();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  1  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  1  :  str.length();	      int    strLen    =(strLen    ==    width)?    size    :    str.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
272	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  size  :  length.length();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  size  :  length.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  size  :  length.length();	      int    strLen    =(strLen    ==    width)?    size    :    str.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
273	[BUG]  [BUGGY]  int  strLen  =(length  ==  width)?  size  :  str.length();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(length  ==  width)?  size  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(length  ==  width)?  size  :  str.length();	      int    strLen    =(strLen    ==    width)?    size    :    str.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
274	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getSeparator()  :  obj.toString();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getSeparator()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getSeparator()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
275	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidthText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidthText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getFixedWidthText()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
276	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getWidthText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getWidthText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getWidthText()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
277	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getImmediateString()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getImmediateString()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getImmediateString()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
278	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  1,  strLen);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  1,  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  1,  strLen);	  str.getChars(0,    strLen,    buffer,    size    +    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
279	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  3);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  3);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  3);	  str.getChars(0,    strLen,    buffer,    size    +    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
280	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  4);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  4);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  4);	  str.getChars(0,    strLen,    buffer,    size    +    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
281	[BUG]  [BUGGY]  int  strLen  =  len  -  strLen;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  len  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  len  -  strLen;	      int    strLen    =    length    -    strLen;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
282	[BUG]  [BUGGY]  int  strLen  =  length  -  strLen  +  2;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  length  -  strLen  +  2;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  length  -  strLen  +  2;	      int    strLen    =    length    -    strLen;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
283	[BUG]  [BUGGY]  int  strLen  =  length  -  strLen  +  size;  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  length  -  strLen  +  size;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  length  -  strLen  +  size;	      int    strLen    =    length    -    strLen;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
284	[BUG]  [BUGGY]  int  size  =  length()  -  strLen;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  length()  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  length()  -  strLen;	      int    size    =    length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
285	[BUG]  [BUGGY]  int  size  =  this.strLen;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  this.strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  this.strLen;	      int    size    =    length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
286	[BUG]  [BUGGY]  int  size  =(strLen  >  0)?  length()  :  0;  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen  >  0)?  length()  :  0;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen  >  0)?  length()  :  0;	      int    size    =    length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
287	[BUG]  [BUGGY]  int  size  =  getLength();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  getLength();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  getLength();	      int    size    =    length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
288	[BUG]  [BUGGY]  int  size  =(strLen  >  0)?  length()  :  1;  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen  >  0)?  length()  :  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen  >  0)?  length()  :  1;	      int    size    =    length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
289	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getWidth()  :  obj.toString();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getWidth()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getWidth()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
290	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getSeparator()  :  obj.toString();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getSeparator()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getSeparator()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
291	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getText()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
292	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getWidthText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getWidthText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getWidthText()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
293	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getNumberText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getNumberText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getNumberText()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
294	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getFixedWidth()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getFixedWidth()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getFixedWidth()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
295	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getImmediateText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getImmediateText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getImmediateText()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
296	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen  -  width);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen  -  width);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  strLen  -  width);	  str.getChars(0,    strLen,    buffer,    size    +    strLen);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
297	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen  +  1);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen  +  1);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  strLen  +  1);	  str.getChars(0,    strLen,    buffer,    size    +    strLen);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
298	[BUG]  [BUGGY]  str.getChars(1,  strLen,  buffer,  size  +  strLen);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(1,  strLen,  buffer,  size  +  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(1,  strLen,  buffer,  size  +  strLen);	  str.getChars(0,    strLen,    buffer,    size    +    strLen);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
299	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen  -  padLen);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen  -  padLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  strLen  -  padLen);	  str.getChars(0,    strLen,    buffer,    size    +    strLen);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
300	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen  -  1);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen  -  1);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  strLen  -  1);	  str.getChars(0,    strLen,    buffer,    size    +    strLen);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
301	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen,  width);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen,  width);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  strLen,  width);	  str.getChars(0,    strLen,    buffer,    size    +    strLen);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
302	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  length  -  strLen);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  length  -  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  length  -  strLen);	  str.getChars(0,    strLen,    buffer,    size    +    length);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
303	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  strLen  +  1);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  strLen  +  1);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  strLen  +  1);	  str.getChars(0,    strLen,    buffer,    size    -    padLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
304	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  padLen  +  2);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  padLen  +  2);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  padLen  +  2);	  str.getChars(0,    strLen,    buffer,    size    -    padLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
305	[BUG]  [BUGGY]  str.getChars(1,  strLen,  buffer,  size  -  padLen);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(1,  strLen,  buffer,  size  -  padLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(1,  strLen,  buffer,  size  -  padLen);	  str.getChars(0,    strLen,    buffer,    size    -    padLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
306	[BUG]  [BUGGY]  int  len  =  width  -  strLen  +  size;  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  width  -  strLen  +  size;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  width  -  strLen  +  size;	      int    len    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
307	[BUG]  [BUGGY]  int  len  =  width  /  strLen;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  width  /  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  width  /  strLen;	      int    len    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
308	[BUG]  [BUGGY]  int  len  =  width  -  strLen  +  4;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  width  -  strLen  +  4;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  width  -  strLen  +  4;	      int    len    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
309	[BUG]  [BUGGY]  int  strLen  =  size  -  strLen  +  width;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  size  -  strLen  +  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  size  -  strLen  +  width;	      int    strLen    =    size    -    strLen;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
310	[BUG]  [BUGGY]  int  strLen  =  size  -  strLen  +  2;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  size  -  strLen  +  2;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  size  -  strLen  +  2;	      int    strLen    =    size    -    strLen;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
311	[BUG]  [BUGGY]  int  strLen  =  width.length();  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  width.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  width.length();	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
312	[BUG]  [BUGGY]  int  strLen  =  str.length()  +  size;  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  str.length()  +  size;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  str.length()  +  size;	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
313	[BUG]  [BUGGY]  int  strLen  =  length  -  str.length();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  length  -  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  length  -  str.length();	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
314	[BUG]  [BUGGY]  int  strLen  =  width  -  str.length();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  width  -  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  width  -  str.length();	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
315	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  strLen  +  2);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  strLen  +  2);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  strLen  +  2);	  str.getChars(0,    strLen,    buffer,    size    -    strLen);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
316	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  *  strLen);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  *  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  *  strLen);	  str.getChars(0,    strLen,    buffer,    size    -    strLen);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
317	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  /  width);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  /  width);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  /  width);	  str.getChars(0,    strLen,    buffer,    size    -    width);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
318	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  *  width);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  *  width);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  *  width);	  str.getChars(0,    strLen,    buffer,    size    -    width);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
319	[BUG]  [BUGGY]  str.getChars(1,  strLen,  buffer,  size  -  width);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(1,  strLen,  buffer,  size  -  width);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(1,  strLen,  buffer,  size  -  width);	  str.getChars(0,    strLen,    buffer,    size    -    width);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
320	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen  +  3);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen  +  3);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen  +  3);	      Integer    strLen    =    getIndex(strLen);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
321	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getSize()  :  str.length());  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(str  ==  null?  getSize()  :  str.length());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(str  ==  null?  getSize()  :  str.length());	      int    strLen    =(strLen    ==    null?    getNullText()    :    str.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
322	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getSeparator()  :  str.length());  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(str  ==  null?  getSeparator()  :  str.length());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(str  ==  null?  getSeparator()  :  str.length());	      int    strLen    =(strLen    ==    null?    getNullText()    :    str.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
323	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getImmediateParentPointer()  :  str.length());  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(str  ==  null?  getImmediateParentPointer()  :  str.length());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(str  ==  null?  getImmediateParentPointer()  :  str.length());	      int    strLen    =(strLen    ==    null?    getNullText()    :    str.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
324	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getText()  :  str.length());  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(str  ==  null?  getText()  :  str.length());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(str  ==  null?  getText()  :  str.length());	      int    strLen    =(strLen    ==    null?    getNullText()    :    str.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
325	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null?  getWidth()  :  obj.toString());  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null?  getWidth()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null?  getWidth()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
326	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null?  getSeparator()  :  obj.toString());  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null?  getSeparator()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null?  getSeparator()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
327	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null?  getNumberText()  :  obj.toString());  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null?  getNumberText()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null?  getNumberText()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
328	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null?  getText()  :  obj.toString());  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null?  getText()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null?  getText()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
329	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null?  getSize()  :  obj.toString());  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null?  getSize()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null?  getSize()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
330	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null?  getFixedWidth()  :  obj.toString());  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null?  getFixedWidth()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null?  getFixedWidth()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
331	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null?  getStringText()  :  obj.toString());  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null?  getStringText()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null?  getStringText()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
332	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  1  :  str.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  1  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  1  :  str.toString();	      String    strLen    =(strLen    ==    width)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
333	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  this  :  str.toString();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  this  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  this  :  str.toString();	      String    strLen    =(strLen    ==    width)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
334	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  size)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  size)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  size)?  null  :  str.toString();	      String    strLen    =(strLen    ==    width)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
335	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getWidthText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getWidthText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getWidthText()  :  obj.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
336	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getFixedWidthText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getFixedWidthText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getFixedWidthText()  :  obj.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
337	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getNonNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getNonNullText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getNonNullText()  :  obj.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
338	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getNativeText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getNativeText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getNativeText()  :  obj.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
339	[BUG]  [BUGGY]  str.getChars(1,  strLen,  buffer,  size  +  padLen);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(1,  strLen,  buffer,  size  +  padLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(1,  strLen,  buffer,  size  +  padLen);	  str.getChars(0,    strLen,    buffer,    size    +    padLen);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
340	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  padLen  -  strLen);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  padLen  -  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  padLen  -  strLen);	  str.getChars(0,    strLen,    buffer,    size    +    padLen);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
341	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  padLen  -  width);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  padLen  -  width);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  padLen  -  width);	  str.getChars(0,    strLen,    buffer,    size    +    padLen);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
342	[BUG]  [BUGGY]  int  size  =  Math.max(strLen,  width);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  Math.max(strLen,  width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  Math.max(strLen,  width);	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
343	[BUG]  [BUGGY]  int  size  =  Math.max(size,  strLen);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  Math.max(size,  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  Math.max(size,  strLen);	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
344	[BUG]  [BUGGY]  int  size  =  Math.max(strLen,  width  -  strLen);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  Math.max(strLen,  width  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  Math.max(strLen,  width  -  strLen);	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
345	[BUG]  [BUGGY]  int  size  =  Math.min(size,  strLen);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  Math.min(size,  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  Math.min(size,  strLen);	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
346	[BUG]  [BUGGY]  int  size  =  Math.abs(strLen);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  Math.abs(strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  Math.abs(strLen);	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
347	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  0)?  width  :  str.length();  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  0)?  width  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  0)?  width  :  str.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
348	[BUG]  [BUGGY]  int  strLen  =(length  ==  width)?  width  :  str.length();  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(length  ==  width)?  width  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(length  ==  width)?  width  :  str.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
349	[BUG]  [BUGGY]  int  strLen  =(size  ==  width)?  width  :  str.length();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(size  ==  width)?  width  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(size  ==  width)?  width  :  str.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
350	[BUG]  [BUGGY]  int  size  =(strLen  ==  width)?  0  :  strLen  +  1;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen  ==  width)?  0  :  strLen  +  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen  ==  width)?  0  :  strLen  +  1;	      int    size    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
351	[BUG]  [BUGGY]  int  size  =(strLen  ==  0)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen  ==  0)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen  ==  0)?  0  :  strLen;	      int    size    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
352	[BUG]  [BUGGY]  int  size  =(strLen  ==  width)?  1  :  0;  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen  ==  width)?  1  :  0;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen  ==  width)?  1  :  0;	      int    size    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
353	[BUG]  [BUGGY]  int  size  =(strLen  <  =  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen  <  =  width)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen  <  =  width)?  0  :  strLen;	      int    size    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
354	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  buffer,  size);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  buffer,  size);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  buffer,  size);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
355	[BUG]  [BUGGY]  StrBuilder.appendFixedWidthPadRight(strLen,  width,  buffer,  size);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.appendFixedWidthPadRight(strLen,  width,  buffer,  size);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.appendFixedWidthPadRight(strLen,  width,  buffer,  size);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
356	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer,  width);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer,  width);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer,  width);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
357	[BUG]  [BUGGY]  StrBuilder.appendFixedWidthPadRight(strLen,  buffer,  width);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.appendFixedWidthPadRight(strLen,  buffer,  width);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.appendFixedWidthPadRight(strLen,  buffer,  width);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
358	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer,  size);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer,  size);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer,  size);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
359	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthpadRight(strLen,  width,  buffer,  size);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.this.appendFixedWidthpadRight(strLen,  width,  buffer,  size);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.this.appendFixedWidthpadRight(strLen,  width,  buffer,  size);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
360	[BUG]  [BUGGY]  StrBuilder.appendFixedWidthPadRight(strLen,  buffer,  size);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.appendFixedWidthPadRight(strLen,  buffer,  size);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.appendFixedWidthPadRight(strLen,  buffer,  size);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
361	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen  -  width);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen  -  width);  size  +=  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(strLen  -  width);  size  +=  strLen;	      Integer    strLen    =    getIndex(strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
362	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  0)?  width  -  width  :  strLen;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  0)?  width  -  width  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  0)?  width  -  width  :  strLen;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
363	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  0)?  width  :  1;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  0)?  width  :  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  0)?  width  :  1;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
364	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  0)?  width  :  width;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  0)?  width  :  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  0)?  width  :  width;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
365	[BUG]  [BUGGY]  int  strLen  =  width  -  strLen  +  size;  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  width  -  strLen  +  size;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  width  -  strLen  +  size;	      int    strLen    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
366	[BUG]  [BUGGY]  int  strLen  =  width  -  strLen  +  4;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  width  -  strLen  +  4;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  width  -  strLen  +  4;	      int    strLen    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
367	[BUG]  [BUGGY]  ensureCapacity(strLen  -  width,  strLen);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  -  width,  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  -  width,  strLen);	      ensureCapacity(strLen    -    width);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
368	[BUG]  [BUGGY]  ensureCapacity(strLen  -  width  +  strLen);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  -  width  +  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  -  width  +  strLen);	      ensureCapacity(strLen    -    width);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
369	[BUG]  [BUGGY]  ensureCapacity(strLen  -  width,  size);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  -  width,  size);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  -  width,  size);	      ensureCapacity(strLen    -    width);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
370	[BUG]  [BUGGY]  ensureCapacity(strLen  -  width  +  2);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  -  width  +  2);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  -  width  +  2);	      ensureCapacity(strLen    -    width);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
371	[BUG]  [BUGGY]  int  len  =  length()  -  strLen;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  length()  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  length()  -  strLen;	      int    len    =    length();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
372	[BUG]  [BUGGY]  int  len  =  this.strLen;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  this.strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  this.strLen;	      int    len    =    length();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
373	[BUG]  [BUGGY]  int  len  =  length()  *  strLen;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  length()  *  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  length()  *  strLen;	      int    len    =    length();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
374	[BUG]  [BUGGY]  int  strLen  =  Math.max(size,  strLen);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(size,  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(size,  strLen);	      int    strLen    =    Math.min(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
375	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  width  -  width);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  width  -  width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  width  -  width);	      int    strLen    =    Math.min(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
376	[BUG]  [BUGGY]  int  strLen  =  Math.min(length,  strLen);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(length,  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(length,  strLen);	      int    strLen    =    Math.min(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
377	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  1,  strLen);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  1,  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  1,  strLen);	  str.getChars(0,    strLen,    buffer,    size    -    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
378	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  3);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  3);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  3);	  str.getChars(0,    strLen,    buffer,    size    -    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
379	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  0  :  size;  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  0  :  size;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  0  :  size;	      int    strLen    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
380	[BUG]  [BUGGY]  int  strLen  =(strLen  <  =  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  <  =  width)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  <  =  width)?  0  :  strLen;	      int    strLen    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
381	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  0)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  0)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  0)?  0  :  strLen;	      int    strLen    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
382	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  0  :  strLen  +  1;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  0  :  strLen  +  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  0  :  strLen  +  1;	      int    strLen    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
383	[BUG]  [BUGGY]  ensureCapacity(strLen  *  strLen);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  *  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  *  strLen);	      ensureCapacity(strLen    +    strLen);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
384	[BUG]  [BUGGY]  ensureCapacity(size  *  strLen  +  strLen);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(size  *  strLen  +  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(size  *  strLen  +  strLen);	      ensureCapacity(strLen    +    strLen);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
385	[BUG]  [BUGGY]  ensureCapacity(len  +  strLen);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(len  +  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(len  +  strLen);	      ensureCapacity(strLen    +    strLen);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
386	[BUG]  [BUGGY]  int  strLen  =  Math.max(size,  width  -  strLen);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(size,  width  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(size,  width  -  strLen);	      int    strLen    =    Math.min(strLen,    width    -    strLen);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
387	[BUG]  [BUGGY]  int  strLen  =  Math.max(strLen,  width  -  strLen);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(strLen,  width  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(strLen,  width  -  strLen);	      int    strLen    =    Math.min(strLen,    width    -    strLen);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
388	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  width  -  strLen  +  1);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  width  -  strLen  +  1);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  width  -  strLen  +  1);	      int    strLen    =    Math.min(strLen,    width    -    strLen);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
389	[BUG]  [BUGGY]  int  strLen  =  Math.min(size  +  strLen,  width  -  strLen);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(size  +  strLen,  width  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(size  +  strLen,  width  -  strLen);	      int    strLen    =    Math.min(strLen,    width    -    strLen);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
390	[BUG]  [BUGGY]  int  strLen  =  Math.max(strLen,  size  -  strLen);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(strLen,  size  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(strLen,  size  -  strLen);	      int    strLen    =    Math.min(strLen,    width    -    strLen);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
391	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  height  :  strLen;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  height  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  height  :  strLen;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
392	[BUG]  [BUGGY]  int  strLen  =(size  ==  width)?  width  :  strLen;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(size  ==  width)?  width  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(size  ==  width)?  width  :  strLen;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
393	[BUG]  [BUGGY]  int  strLen  =(length  ==  width)?  width  :  strLen;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(length  ==  width)?  width  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(length  ==  width)?  width  :  strLen;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
394	[BUG]  [BUGGY]  int  strLen  =  Math.min(size,  strLen);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(size,  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(size,  strLen);	      int    strLen    =    Math.max(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
395	[BUG]  [BUGGY]  int  strLen  =  Math.max(size,  width);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(size,  width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(size,  width);	      int    strLen    =    Math.max(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
396	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getSeparator()  :  str.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getSeparator()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getSeparator()  :  str.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
397	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getImmediateString()  :  str.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getImmediateString()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getImmediateString()  :  str.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
398	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidthText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidthText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getFixedWidthText()  :  str.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
399	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getNonNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getNonNullText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getNonNullText()  :  str.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
400	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen;  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen;  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  strLen;	  str.getChars(0,    strLen,    buffer,    size    +    width);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
401	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  0  :  str.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  0  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  0  :  str.toString();	      String    strLen    =(strLen    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
402	[BUG]  [BUGGY]  String  strLen  =(separator  ==  null)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(separator  ==  null)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(separator  ==  null)?  null  :  str.toString();	      String    strLen    =(strLen    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
403	[BUG]  [BUGGY]  ensureCapacity(strLen  +  width,  strLen);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  +  width,  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  +  width,  strLen);	      ensureCapacity(strLen    +    width);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
404	[BUG]  [BUGGY]  ensureCapacity(strLen  +  width  -  strLen);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  +  width  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  +  width  -  strLen);	      ensureCapacity(strLen    +    width);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
405	[BUG]  [BUGGY]  ensureCapacity(strLen  +  width,  size);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  +  width,  size);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  +  width,  size);	      ensureCapacity(strLen    +    width);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
406	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  strLen);	  str.getChars(0,    strLen,    buffer,    width);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
407	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer);	  str.getChars(0,    strLen,    buffer,    width);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
408	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer,  length);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer,  length);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  buffer,  length);	  str.getChars(0,    strLen,    buffer,    width);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
409	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getNonNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getNonNullText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getNonNullText()  :  str.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
410	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getFixedWidthText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getFixedWidthText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getFixedWidthText()  :  str.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
411	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getSeparator()  :  str.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getSeparator()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getSeparator()  :  str.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
412	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getWidthText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getWidthText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getWidthText()  :  str.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
413	[BUG]  [BUGGY]  int  strLen  =  Math.max(strLen,  width  -  width);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(strLen,  width  -  width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(strLen,  width  -  width);	      int    strLen    =    Math.max(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
414	[BUG]  [BUGGY]  int  strLen  =  Math.max(strLen,  width  -  2);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(strLen,  width  -  2);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(strLen,  width  -  2);	      int    strLen    =    Math.max(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
415	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidthLen()  :  str.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidthLen()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getFixedWidthLen()  :  str.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
416	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  0)?  width  -  strLen  :  strLen;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  0)?  width  -  strLen  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  0)?  width  -  strLen  :  strLen;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
417	[BUG]  [BUGGY]  int  strLen  =(width  ==  0)?  width  :  strLen;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(width  ==  0)?  width  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(width  ==  0)?  width  :  strLen;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
418	[BUG]  [BUGGY]  int  strLen  =(length  ==  0)?  width  :  strLen;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(length  ==  0)?  width  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(length  ==  0)?  width  :  strLen;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
419	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  width  -  strLen);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  width  -  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  width  -  strLen);	  str.getChars(0,    strLen,    buffer,    size    +    width);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
420	[BUG]  [BUGGY]  StrBuilder.appendFixedWidthPadRight(str,  width,  buffer,  size);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.appendFixedWidthPadRight(str,  width,  buffer,  size);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.appendFixedWidthPadRight(str,  width,  buffer,  size);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
421	[BUG]  [BUGGY]  str.getChars(1,  width,  buffer,  size);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(1,  width,  buffer,  size);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(1,  width,  buffer,  size);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
422	[BUG]  [BUGGY]  StrBuilder.appendFixedWidthPadRight(strLen,  width  -  strLen,  buffer,  size);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.appendFixedWidthPadRight(strLen,  width  -  strLen,  buffer,  size);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.appendFixedWidthPadRight(strLen,  width  -  strLen,  buffer,  size);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
423	[BUG]  [BUGGY]  StrBuilder.appendFixedWidthPadRight(str,  width  -  strLen,  buffer,  size);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.appendFixedWidthPadRight(str,  width  -  strLen,  buffer,  size);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.appendFixedWidthPadRight(str,  width  -  strLen,  buffer,  size);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
424	[BUG]  [BUGGY]  StrBuilder.appendFixedWidthPadRight(strlLen,  width,  buffer,  size);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.appendFixedWidthPadRight(strlLen,  width,  buffer,  size);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.appendFixedWidthPadRight(strlLen,  width,  buffer,  size);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
425	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  padLen  +  1);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  padLen  +  1);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  padLen  +  1);	  str.getChars(0,    strLen,    buffer,    size    +    padLen);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
426	[BUG]  [BUGGY]  int  len  =  length()  -  width;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  length()  -  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  length()  -  width;	      int    len    =    length();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
427	[BUG]  [BUGGY]  int  len  =  length()  -  size;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  length()  -  size;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  length()  -  size;	      int    len    =    length();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
428	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  1,  width);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  1,  width);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  1,  width);	  str.getChars(0,    strLen,    buffer,    size    +    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
429	[BUG]  [BUGGY]  str.getChars(1,  strLen,  buffer,  size  +  1);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(1,  strLen,  buffer,  size  +  1);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(1,  strLen,  buffer,  size  +  1);	  str.getChars(0,    strLen,    buffer,    size    +    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
430	[BUG]  [BUGGY]  ensureCapacity(length  -  strLen);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(length  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(length  -  strLen);	      ensureCapacity(strLen    -    width);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
431	[BUG]  [BUGGY]  ensureCapacity(width  -  strLen);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(width  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(width  -  strLen);	      ensureCapacity(strLen    -    width);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
432	[BUG]  [BUGGY]  ensureCapacity(strLen  +  width  -  width);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  +  width  -  width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  +  width  -  width);	      ensureCapacity(strLen    +    width);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
433	[BUG]  [BUGGY]  ensureCapacity(strLen  +  width,  padChar);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  +  width,  padChar);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  +  width,  padChar);	      ensureCapacity(strLen    +    width);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
434	[BUG]  [BUGGY]  int  strLen  =  length  -  strLen  +  width;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  length  -  strLen  +  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  length  -  strLen  +  width;	      int    strLen    =    length    -    strLen;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
435	[BUG]  [BUGGY]  int  strLen  =  width  -  strLen  +  padChar;  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  width  -  strLen  +  padChar;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  width  -  strLen  +  padChar;	      int    strLen    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
436	[BUG]  [BUGGY]  int  strLen  =  width  -  strLen  +  3;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  width  -  strLen  +  3;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  width  -  strLen  +  3;	      int    strLen    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
437	[BUG]  [BUGGY]  int  size  = "width ";  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  = "width ";  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  = "width ";	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
438	[BUG]  [BUGGY]  int  size  =  0;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  0;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  0;	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
439	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  width  +  strLen);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  width  +  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  width  +  strLen);	  str.getChars(0,    strLen,    buffer,    size    -    width);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
440	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  width  +  1);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  width  +  1);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  width  +  1);	  str.getChars(0,    strLen,    buffer,    size    -    width);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
441	[BUG]  [BUGGY]  str.getChars(1,  strLen,  buffer,  size  -  1);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(1,  strLen,  buffer,  size  -  1);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(1,  strLen,  buffer,  size  -  1);	  str.getChars(0,    strLen,    buffer,    size    -    width);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
442	[BUG]  [BUGGY]  int  size  =  width  -  strLen  +  padChar;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  width  -  strLen  +  padChar;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  width  -  strLen  +  padChar;	      int    size    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
443	[BUG]  [BUGGY]  int  size  =  width  -  strLen  +  length;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  width  -  strLen  +  length;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  width  -  strLen  +  length;	      int    size    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
444	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen  +  width);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen  +  width);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  strLen  +  width);	  str.getChars(0,    strLen,    buffer,    size    +    strLen);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
445	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null?  getStringValue()  :  obj.toString());  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null?  getStringValue()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null?  getStringValue()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
446	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null?  getFixedWidthLen()  :  obj.toString());  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null?  getFixedWidthLen()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null?  getFixedWidthLen()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
447	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null?  getString()  :  obj.toString());  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null?  getString()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null?  getString()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
448	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  width  -  width  :  str.length();  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  width  -  width  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  width  -  width  :  str.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
449	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  width  :  padChar.length();  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  width  :  padChar.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  width  :  padChar.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
450	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  width  -  1  :  str.length();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  width  -  1  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  width  -  1  :  str.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
451	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  width  :  length.length();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  width  :  length.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  width  :  length.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
452	[BUG]  [BUGGY]  int  size  =  length()  -  2;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  length()  -  2;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  length()  -  2;	      int    size    =    length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
453	[BUG]  [BUGGY]  StrBuilder.appendFixedWidthPadRight(str,  width,  strLen);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.appendFixedWidthPadRight(str,  width,  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.appendFixedWidthPadRight(str,  width,  strLen);	  str.getChars(0,    strLen,    buffer,    width);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
454	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getNullText()  :  str.charAt(strLen);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getNullText()  :  str.charAt(strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getNullText()  :  str.charAt(strLen);	      String    strLen    =(strLen    ==    width)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
455	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getNullText()  :  padChar.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getNullText()  :  padChar.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getNullText()  :  padChar.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
456	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  size  :  buffer.length();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  size  :  buffer.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  size  :  buffer.length();	      int    strLen    =(strLen    ==    width)?    size    :    str.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
457	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  size  :  padChar.length();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  size  :  padChar.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  size  :  padChar.length();	      int    strLen    =(strLen    ==    width)?    size    :    str.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
458	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidthLen()  :  obj.toString();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidthLen()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getFixedWidthLen()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
459	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidthPadding()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidthPadding()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getFixedWidthPadding()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
460	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidthPadRight()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getFixedWidthPadRight()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getFixedWidthPadRight()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
461	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  nullText  :  str.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  nullText  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  nullText  :  str.toString();	      String    strLen    =(strLen    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
462	[BUG]  [BUGGY]  String  strLen  =(str!=  null)?  nullText  :  str.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str!=  null)?  nullText  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str!=  null)?  nullText  :  str.toString();	      String    strLen    =(strLen    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
463	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getFixedWidthText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getFixedWidthText()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getFixedWidthText()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
464	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getFixedWidthLen()  :  obj.toString();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getFixedWidthLen()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getFixedWidthLen()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
465	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getStringValue()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getStringValue()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getStringValue()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
466	[BUG]  [BUGGY]  ensureCapacity(strLen  *  width);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  *  width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  *  width);	      ensureCapacity(strLen    +    strLen);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
467	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  getFixedWidthLen()  :  str.toString();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  getFixedWidthLen()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  getFixedWidthLen()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
468	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  getFixedWidthText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  getFixedWidthText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  getFixedWidthText()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
469	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  getText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  getText()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  getText()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
470	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  getImmediateParentPointer()  :  str.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  getImmediateParentPointer()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  getImmediateParentPointer()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
471	[BUG]  [BUGGY]  String  strLen  =(str  ==  null)?  getSeparator()  :  str.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(str  ==  null)?  getSeparator()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(str  ==  null)?  getSeparator()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
472	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getFixedWidthPadRight()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getFixedWidthPadRight()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getFixedWidthPadRight()  :  obj.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
473	[BUG]  [BUGGY]  int  size  =(width  ==  strLen)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(width  ==  strLen)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(width  ==  strLen)?  0  :  strLen;	      int    size    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
474	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  width  :  length;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  width  :  length;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  width  :  length;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
475	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  width  :  width;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  width  :  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  width  :  width;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
476	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  width  -  width  :  strLen;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  width  -  width  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  width  -  width  :  strLen;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
477	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  width  :  size;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  width  :  size;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  width  :  size;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
478	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(width);  size  +=  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(width);  size  +=  strLen;	      Integer    strLen    =    getIndex(strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
479	[BUG]  [BUGGY]  int  strLen  =  getIndex(strLen);  size  +=  width;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  getIndex(strLen);  size  +=  width;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  getIndex(strLen);  size  +=  width;	      Integer    strLen    =    getIndex(strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
480	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(width);	      Integer    strLen    =    getIndex(strLen);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
481	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(length);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  Integer  strLen  =  getIndex(length);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	Integer  strLen  =  getIndex(length);	      Integer    strLen    =    getIndex(strLen);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
482	[BUG]  [BUGGY]  int  strLen  =(strLen  <  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  <  width)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  <  width)?  0  :  strLen;	      int    strLen    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
483	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  width  -  2);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  width  -  2);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  width  -  2);	      int    strLen    =    Math.min(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
484	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  width  +  2);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  width  +  2);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  width  +  2);	      int    strLen    =    Math.min(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
485	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  nullText  :  str.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  nullText  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  nullText  :  str.toString();	      String    strLen    =(strLen    ==    width)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
486	[BUG]  [BUGGY]  String  strLen  =(strLen  >  width)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  >  width)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  >  width)?  null  :  str.toString();	      String    strLen    =(strLen    ==    width)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
487	[BUG]  [BUGGY]  int  strLen  =  this.str.length();  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  this.str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  this.str.length();	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
488	[BUG]  [BUGGY]  int  strLen  =  width  +  str.length();  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  width  +  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  width  +  str.length();	      int    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
489	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getStringValue()  :  str.length());  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(str  ==  null?  getStringValue()  :  str.length());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(str  ==  null?  getStringValue()  :  str.length());	      int    strLen    =(strLen    ==    null?    getNullText()    :    str.length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
490	[BUG]  [BUGGY]  ensureCapacity(width);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(width);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(width);	      ensureCapacity(strLen);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
491	[BUG]  [BUGGY]  ensureCapacity(len);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(len);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(len);	      ensureCapacity(strLen);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
492	[BUG]  [BUGGY]  ensureCapacity(initialCapacity);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(initialCapacity);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(initialCapacity);	      ensureCapacity(strLen);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
493	[BUG]  [BUGGY]  int  len  =  width  -  strLen  +  padChar;  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  width  -  strLen  +  padChar;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  width  -  strLen  +  padChar;	      int    len    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
494	[BUG]  [BUGGY]  int  len  =  width  -  strLen  +  length;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  width  -  strLen  +  length;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  width  -  strLen  +  length;	      int    len    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
495	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null?  getImmediateParentPointer()  :  obj.toString());  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null?  getImmediateParentPointer()  :  obj.toString());  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null?  getImmediateParentPointer()  :  obj.toString());	      String    strLen    =(strLen    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
496	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  strLen);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.this.appendFixedWidthPadRight(strLen,  width,  strLen);	  str.getChars(0,    strLen,    buffer,    width);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
497	[BUG]  [BUGGY]  int  strLen  =(strLen  <  =  width)?  size  :  str.length();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  <  =  width)?  size  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  <  =  width)?  size  :  str.length();	      int    strLen    =(strLen    ==    width)?    size    :    str.length();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
498	[BUG]  [BUGGY]  int  size  -=  strLen;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  -=  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  -=  strLen;	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
499	[BUG]  [BUGGY]  int  size  =  len;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  len;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  len;	      int    size    =    strLen;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
500	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getImmediateParentPointer()  :  str.toString();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getImmediateParentPointer()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getImmediateParentPointer()  :  str.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
501	[BUG]  [BUGGY]  int  strLen  =  Math.min(length,  strLen  -  strLen);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(length,  strLen  -  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(length,  strLen  -  strLen);	      int    strLen    =    Math.min(strLen,    width    -    strLen);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
502	[BUG]  [BUGGY]  int  strLen  =  Math.min(strLen,  width  -  strLen)+  1;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.min(strLen,  width  -  strLen)+  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.min(strLen,  width  -  strLen)+  1;	      int    strLen    =    Math.min(strLen,    width    -    strLen);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
503	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  width  -  strLen  :  str.length();  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  width  -  strLen  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  width  -  strLen  :  str.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
504	[BUG]  [BUGGY]  int  strLen  =(strLen  <  =  width)?  width  :  str.length();  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  <  =  width)?  width  :  str.length();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  <  =  width)?  width  :  str.length();	      int    strLen    =(strLen    ==    width)?    width    :    str.length();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
505	[BUG]  [BUGGY]  ensureCapacity(strLen  *  length);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  *  length);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  *  length);	      ensureCapacity(strLen    +    strLen);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
506	[BUG]  [BUGGY]  int  len  =  width  -  strLen  -  1;  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  len  =  width  -  strLen  -  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  len  =  width  -  strLen  -  1;	      int    len    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
507	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getImmediateParentPointer()  :  obj.toString();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getImmediateParentPointer()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getImmediateParentPointer()  :  obj.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
508	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getNullText()  :  padChar.toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getNullText()  :  padChar.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getNullText()  :  padChar.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
509	[BUG]  [BUGGY]  int  strLen  =  Math.max(strLen,  width  +  strLen);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(strLen,  width  +  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(strLen,  width  +  strLen);	      int    strLen    =    Math.max(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
510	[BUG]  [BUGGY]  int  strLen  =  Math.max(strLen,  width  +  2);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  Math.max(strLen,  width  +  2);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  Math.max(strLen,  width  +  2);	      int    strLen    =    Math.max(strLen,    width);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
511	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getImmediateParentPointer()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getImmediateParentPointer()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getImmediateParentPointer()  :  obj.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
512	[BUG]  [BUGGY]  int  size  =(strLen  <  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =(strLen  <  width)?  0  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =(strLen  <  width)?  0  :  strLen;	      int    size    =(strLen    ==    width)?    0    :    strLen;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
513	[BUG]  [BUGGY]  int  size  =  width  -  strLen  -  1;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  width  -  strLen  -  1;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  width  -  strLen  -  1;	      int    size    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
514	[BUG]  [BUGGY]  int  size  =  padChar  -  strLen;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  size  =  padChar  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  size  =  padChar  -  strLen;	      int    size    =    width    -    strLen;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
515	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  width)?  width  -  strLen  :  strLen;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  width)?  width  -  strLen  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  width)?  width  -  strLen  :  strLen;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
516	[BUG]  [BUGGY]  int  strLen  =(strLen  <  width)?  width  :  strLen;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  <  width)?  width  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  <  width)?  width  :  strLen;	      int    strLen    =(strLen    ==    width)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
517	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  null)?  getImmediateParentPointer()  :  obj.toString();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  null)?  getImmediateParentPointer()  :  obj.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  null)?  getImmediateParentPointer()  :  obj.toString();	      String    strLen    =(strLen    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
518	[BUG]  [BUGGY]  str.getChars(1,  strLen,  buffer,  size  -  strLen);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(1,  strLen,  buffer,  size  -  strLen);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(1,  strLen,  buffer,  size  -  strLen);	  str.getChars(0,    strLen,    buffer,    size    -    strLen);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
519	[BUG]  [BUGGY]  int  strLen  =  length  -  strLen  +  4;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =  length  -  strLen  +  4;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =  length  -  strLen  +  4;	      int    strLen    =    length    -    strLen;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
520	[BUG]  [BUGGY]  ensureCapacity(strLen  -  width  +  1,  strLen);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  ensureCapacity(strLen  -  width  +  1,  strLen);  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	ensureCapacity(strLen  -  width  +  1,  strLen);	      ensureCapacity(strLen    -    width);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
521	[BUG]  [BUGGY]  int  strLen  =(strLen  <  0)?  width  :  strLen;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  <  0)?  width  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  <  0)?  width  :  strLen;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
522	[BUG]  [BUGGY]  int  strLen  =(strLen  ==  1)?  width  :  strLen;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  int  strLen  =(strLen  ==  1)?  width  :  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	int  strLen  =(strLen  ==  1)?  width  :  strLen;	      int    strLen    =(strLen    ==    0)?    width    :    strLen;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
523	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  padChar);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  padChar);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  padChar);	  str.getChars(0,    strLen,    buffer,    size    +    width);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
524	[BUG]  [BUGGY]  String  strLen  =(strLen  <  =  width)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  <  =  width)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  <  =  width)?  null  :  str.toString();	      String    strLen    =(strLen    ==    width)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
525	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  1,  strLen  -  1);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  1,  strLen  -  1);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  1,  strLen  -  1);	  str.getChars(0,    strLen,    buffer,    size    -    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
526	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  *  1);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  str.getChars(0,  strLen,  buffer,  size  *  1);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  *  1);	  str.getChars(0,    strLen,    buffer,    size    -    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
527	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  size);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  size);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  buffer,  size);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
528	[BUG]  [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  padChar);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  StrBuilder.this.appendFixedWidthPadRight(str,  width,  padChar);  [BUGGY]    }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	StrBuilder.this.appendFixedWidthPadRight(str,  width,  padChar);	  str.getChars(0,    width,    buffer,    size);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
529	[BUG]  [BUGGY]  char  strLen  =  width  -  strLen;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  char  strLen  =  width  -  strLen;  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	char  strLen  =  width  -  strLen;	      int    strLen    =    size    -    strLen;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
530	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  0)?  getImmediateParentPointer()  :  str.toString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  0)?  getImmediateParentPointer()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  0)?  getImmediateParentPointer()  :  str.toString();	      String    strLen    =(strLen    ==    0)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
531	[BUG]  [BUGGY]  String  strLen  =(strCLenied  ==  null)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strCLenied  ==  null)?  null  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strCLenied  ==  null)?  null  :  str.toString();	      String    strLen    =(strLen    ==    null)?    null    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
532	[BUG]  [BUGGY]  String  strLen  =(strLen  ==  width)?  getImmediateParentPointer()  :  str.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {    [BUGGY]  String  strLen  =(strLen  ==  width)?  getImmediateParentPointer()  :  str.toString();  [BUGGY]    str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	String  strLen  =(strLen  ==  width)?  getImmediateParentPointer()  :  str.toString();	      String    strLen    =(strLen    ==    width)?    getNullText()    :    str.toString();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
