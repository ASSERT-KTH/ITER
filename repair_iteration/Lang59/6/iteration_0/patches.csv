bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  strLen  =  str.length();  [CE]  variable  strLen  is  already  defined  in  method  appendFixedWidthPadRight(Object,int,char)  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  strLen  =  str.length();  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  strLen  =  str.length();		non-compiled	[CE]  variable  strLen  is  already  defined  in  method  appendFixedWidthPadRight(Object,int,char)	12	None	add
2	[BUG]  [BUGGY]    String  strLen  =(strLen  ==  null?  getNullText()  :  obj.toString());  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    String  strLen  =(strLen  ==  null?  getNullText()  :  obj.toString());  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    String  strLen  =(strLen  ==  null?  getNullText()  :  obj.toString());		non-compiled	[CE]  <identifier>  expected	12	None	add
3	[BUG]  [BUGGY]    String  strLen  =(strLen  ==  null)?  getNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    String  strLen  =(strLen  ==  null)?  getNullText()  :  obj.toString();  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    String  strLen  =(strLen  ==  null)?  getNullText()  :  obj.toString();		non-compiled	[CE]  <identifier>  expected	12	None	add
4	[BUG]  [BUGGY]    String  strLen  =(strLen  ==  0)?  getNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    String  strLen  =(strLen  ==  0)?  getNullText()  :  obj.toString();  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    String  strLen  =(strLen  ==  0)?  getNullText()  :  obj.toString();		non-compiled	[CE]  <identifier>  expected	12	None	add
5	[BUG]  [BUGGY]    String  strLen  =(strLen  ==  width)?  getNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    String  strLen  =(strLen  ==  width)?  getNullText()  :  obj.toString();  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    String  strLen  =(strLen  ==  width)?  getNullText()  :  obj.toString();		non-compiled	[CE]  <identifier>  expected	12	None	add
6	[BUG]  [BUGGY]    String  strLen  =(strLen  ==  null)?  getNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    String  strLen  =(strLen  ==  null)?  getNullText()  :  str.toString();  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    String  strLen  =(strLen  ==  null)?  getNullText()  :  str.toString();		non-compiled	[CE]  <identifier>  expected	12	None	add
7	[BUG]  [BUGGY]    String  strLen  =(strLen  ==  null)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    String  strLen  =(strLen  ==  null)?  null  :  str.toString();  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    String  strLen  =(strLen  ==  null)?  null  :  str.toString();		non-compiled	[CE]  <identifier>  expected	12	None	add
8	[BUG]  [BUGGY]    String  strLen  =(strLen  ==  width)?  getNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    String  strLen  =(strLen  ==  width)?  getNullText()  :  str.toString();  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    String  strLen  =(strLen  ==  width)?  getNullText()  :  str.toString();		non-compiled	[CE]  <identifier>  expected	12	None	add
9	[BUG]  [BUGGY]    String  strLen  =(strLen  ==  0)?  getNullText()  :  str.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    String  strLen  =(strLen  ==  0)?  getNullText()  :  str.toString();  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    String  strLen  =(strLen  ==  0)?  getNullText()  :  str.toString();		non-compiled	[CE]  <identifier>  expected	12	None	add
10	[BUG]  [BUGGY]    String  strLen  =(strLen  ==  width)?  null  :  str.toString();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    String  strLen  =(strLen  ==  width)?  null  :  str.toString();  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    String  strLen  =(strLen  ==  width)?  null  :  str.toString();		non-compiled	[CE]  <identifier>  expected	12	None	add
11	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  width);  [CE]  <identifier>  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]  str.getChars(0,  strLen,  buffer,  width);  [BUGGY]  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  width);	str.getChars(0,  strLen,  buffer,  size);  	non-compiled	[CE]  <identifier>  expected	11	None	replace
12	[BUG]  [BUGGY]  str.getChars(0,  width,  buffer,  size);  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]  str.getChars(0,  width,  buffer,  size);  [BUGGY]  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  width,  buffer,  size);	str.getChars(0,  strLen,  buffer,  size);  	non-compiled	[CE]  <identifier>  expected	11	None	replace
13	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  padLen);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  padLen);  [BUGGY]  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  padLen);	str.getChars(0,  strLen,  buffer,  size);  	non-compiled	[CE]  <identifier>  expected	11	None	replace
14	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  1);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  1);  [BUGGY]  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  1);	str.getChars(0,  strLen,  buffer,  size);  	non-compiled	[CE]  <identifier>  expected	11	None	replace
15	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  width);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  width);  [BUGGY]  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  width);	str.getChars(0,  strLen,  buffer,  size);  	non-compiled	[CE]  <identifier>  expected	11	None	replace
16	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  1);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  1);  [BUGGY]  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  1);	str.getChars(0,  strLen,  buffer,  size);  	non-compiled	[CE]  <identifier>  expected	11	None	replace
17	[BUG]  [BUGGY]    int  strLen  =(strLen  ==  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  strLen  =(strLen  ==  width)?  0  :  strLen;  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  strLen  =(strLen  ==  width)?  0  :  strLen;		non-compiled	[CE]  <identifier>  expected	12	None	add
18	[BUG]  [BUGGY]    int  strLen  =  width  -  strLen;  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  strLen  =  width  -  strLen;  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  strLen  =  width  -  strLen;		non-compiled	[CE]  <identifier>  expected	12	None	add
19	[BUG]  [BUGGY]    int  strLen  =(strLen  ==  null?  getNullText()  :  str.length());  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  strLen  =(strLen  ==  null?  getNullText()  :  str.length());  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  strLen  =(strLen  ==  null?  getNullText()  :  str.length());		non-compiled	[CE]  <identifier>  expected	12	None	add
20	[BUG]  [BUGGY]    int  strLen  =(strLen  ==  width)?  size  :  str.length();  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  strLen  =(strLen  ==  width)?  size  :  str.length();  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  strLen  =(strLen  ==  width)?  size  :  str.length();		non-compiled	[CE]  <identifier>  expected	12	None	add
21	[BUG]  [BUGGY]    Integer  strLen  =  getIndex(strLen);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    Integer  strLen  =  getIndex(strLen);  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    Integer  strLen  =  getIndex(strLen);		non-compiled	[CE]  <identifier>  expected	12	None	add
22	[BUG]  [BUGGY]    Integer  strLen  =  getIndex(strLen);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    Integer  strLen  =  getIndex(strLen);  size  +=  strLen;  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    Integer  strLen  =  getIndex(strLen);  size  +=  strLen;		non-compiled	[CE]  <identifier>  expected	12	None	add
23	[BUG]  [BUGGY]    int  strLen  =(strLen  ==  0)?  width  :  strLen;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  strLen  =(strLen  ==  0)?  width  :  strLen;  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  strLen  =(strLen  ==  0)?  width  :  strLen;		non-compiled	[CE]  <identifier>  expected	12	None	add
24	[BUG]  [BUGGY]    int  strLen  =  length  -  strLen;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  strLen  =  length  -  strLen;  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  strLen  =  length  -  strLen;		non-compiled	[CE]  <identifier>  expected	12	None	add
25	[BUG]  [BUGGY]    int  size  =(strLen  ==  width)?  0  :  strLen;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  size  =(strLen  ==  width)?  0  :  strLen;  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  size  =(strLen  ==  width)?  0  :  strLen;		non-compiled	[CE]  <identifier>  expected	12	None	add
26	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen);  [CE]  <identifier>  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  strLen);  [BUGGY]  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  strLen);	str.getChars(0,  strLen,  buffer,  size);  	non-compiled	[CE]  <identifier>  expected	11	None	replace
27	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  strLen);  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  -  strLen);  [BUGGY]  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  -  strLen);	str.getChars(0,  strLen,  buffer,  size);  	non-compiled	[CE]  <identifier>  expected	11	None	replace
28	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  2);  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  2);  [BUGGY]  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  2);	str.getChars(0,  strLen,  buffer,  size);  	non-compiled	[CE]  <identifier>  expected	11	None	replace
29	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  padLen);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  padLen);  [BUGGY]  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  padLen);	str.getChars(0,  strLen,  buffer,  size);  	non-compiled	[CE]  <identifier>  expected	11	None	replace
30	[BUG]  [BUGGY]    ensureCapacity(strLen  +  width);  [CE]  <identifier>  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    ensureCapacity(strLen  +  width);  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    ensureCapacity(strLen  +  width);		non-compiled	[CE]  <identifier>  expected	12	None	add
31	[BUG]  [BUGGY]    int  len  =  width  -  strLen;  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  len  =  width  -  strLen;  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  len  =  width  -  strLen;		non-compiled	[CE]  <identifier>  expected	12	None	add
32	[BUG]  [BUGGY]    int  size  =  width  -  strLen;  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  size  =  width  -  strLen;  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  size  =  width  -  strLen;		non-compiled	[CE]  <identifier>  expected	12	None	add
33	[BUG]  [BUGGY]    int  len  =  length();  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  len  =  length();  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  len  =  length();		non-compiled	[CE]  <identifier>  expected	12	None	add
34	[BUG]  [BUGGY]    ensureCapacity(strLen);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    ensureCapacity(strLen);  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    ensureCapacity(strLen);		non-compiled	[CE]  <identifier>  expected	12	None	add
35	[BUG]  [BUGGY]    ensureCapacity(strLen  -  width);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    ensureCapacity(strLen  -  width);  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    ensureCapacity(strLen  -  width);		non-compiled	[CE]  <identifier>  expected	12	None	add
36	[BUG]  [BUGGY]    int  size  =  strLen;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  size  =  strLen;  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  size  =  strLen;		non-compiled	[CE]  <identifier>  expected	12	None	add
37	[BUG]  [BUGGY]    int  size  =  length();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  size  =  length();  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  size  =  length();		non-compiled	[CE]  <identifier>  expected	12	None	add
38	[BUG]  [BUGGY]    ensureCapacity(strLen  +  strLen);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    ensureCapacity(strLen  +  strLen);  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    ensureCapacity(strLen  +  strLen);		non-compiled	[CE]  <identifier>  expected	12	None	add
39	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  width);  [CE]  <identifier>  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  width);  [BUGGY]  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  width);	str.getChars(0,  strLen,  buffer,  size);  	non-compiled	[CE]  <identifier>  expected	11	None	replace
40	[BUG]  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  length);  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]  str.getChars(0,  strLen,  buffer,  size  +  length);  [BUGGY]  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	str.getChars(0,  strLen,  buffer,  size  +  length);	str.getChars(0,  strLen,  buffer,  size);  	non-compiled	[CE]  <identifier>  expected	11	None	replace
41	[BUG]  [BUGGY]    int  strLen  =(strLen  ==  width)?  width  :  str.length();  [CE]  <identifier>  expected  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  strLen  =(strLen  ==  width)?  width  :  str.length();  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  strLen  =(strLen  ==  width)?  width  :  str.length();		non-compiled	[CE]  <identifier>  expected	12	None	add
42	[BUG]  [BUGGY]    int  strLen  =  Math.min(strLen,  width);  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  strLen  =  Math.min(strLen,  width);  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  strLen  =  Math.min(strLen,  width);		non-compiled	[CE]  <identifier>  expected	12	None	add
43	[BUG]  [BUGGY]    int  strLen  =  size  -  strLen;  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  strLen  =  size  -  strLen;  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  strLen  =  size  -  strLen;		non-compiled	[CE]  <identifier>  expected	12	None	add
44	[BUG]  [BUGGY]    int  strLen  =(strLen  ==  width)?  width  :  strLen;  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  strLen  =(strLen  ==  width)?  width  :  strLen;  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  strLen  =(strLen  ==  width)?  width  :  strLen;		non-compiled	[CE]  <identifier>  expected	12	None	add
45	[BUG]  [BUGGY]    int  strLen  =  Math.max(strLen,  width);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  strLen  =  Math.max(strLen,  width);  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  strLen  =  Math.max(strLen,  width);		non-compiled	[CE]  <identifier>  expected	12	None	add
46	[BUG]  [BUGGY]    int  strLen  =  Math.min(strLen,  width  -  strLen);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  [BUGGY]    int  strLen  =  Math.min(strLen,  width  -  strLen);  [BUGGY]  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  }  }  size  +=  width;  }  return  this;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	    int  strLen  =  Math.min(strLen,  width  -  strLen);		non-compiled	[CE]  <identifier>  expected	12	None	add
