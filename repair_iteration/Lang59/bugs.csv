bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] if (width > 0) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) { [BUGGY] if (width > 0) { [BUGGY] ensureCapacity(size + width); String str = (obj == null ? getNullText() : obj.toString()); int strLen = str.length(); if (strLen >= width) { str.getChars(0, strLen, buffer, size); } else { int padLen = width - strLen; str.getChars(0, strLen, buffer, size); for (int i = 0; i < padLen; i++) { buffer[size + strLen + i] = padChar; [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] appendFixedWidthPadRight [RETURN_TYPE] StrBuilder  Object obj int width char padChar [VARIABLES] boolean char padChar Object obj String newLine nullText separator str int CAPACITY capacity destinationIndex endIndex i index initialCapacity len length mark newEnd oldEnd padLen pos size startIndex strLen value width long serialVersionUID value char[] buffer chars destination old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	
2	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) { [BUGGY] [BUGGY] if (width > 0) { ensureCapacity(size + width); String str = (obj == null ? getNullText() : obj.toString()); int strLen = str.length(); if (strLen >= width) { str.getChars(0, strLen, buffer, size); } else { int padLen = width - strLen; str.getChars(0, strLen, buffer, size); for (int i = 0; i < padLen; i++) { buffer[size + strLen + i] = padChar; [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] appendFixedWidthPadRight [RETURN_TYPE] StrBuilder  Object obj int width char padChar [VARIABLES] boolean char padChar Object obj String newLine nullText separator str int CAPACITY capacity destinationIndex endIndex i index initialCapacity len length mark newEnd oldEnd padLen pos size startIndex strLen value width long serialVersionUID value char[] buffer chars destination old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	add	
3	[BUG] [BUGGY] ensureCapacity(size + width); [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) { if (width > 0) { [BUGGY] ensureCapacity(size + width); [BUGGY] String str = (obj == null ? getNullText() : obj.toString()); int strLen = str.length(); if (strLen >= width) { str.getChars(0, strLen, buffer, size); } else { int padLen = width - strLen; str.getChars(0, strLen, buffer, size); for (int i = 0; i < padLen; i++) { buffer[size + strLen + i] = padChar; } [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] appendFixedWidthPadRight [RETURN_TYPE] StrBuilder  Object obj int width char padChar [VARIABLES] boolean char padChar Object obj String newLine nullText separator str int CAPACITY capacity destinationIndex endIndex i index initialCapacity len length mark newEnd oldEnd padLen pos size startIndex strLen value width long serialVersionUID value char[] buffer chars destination old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	replace	
4	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) { if (width > 0) { [BUGGY] [BUGGY] ensureCapacity(size + width); String str = (obj == null ? getNullText() : obj.toString()); int strLen = str.length(); if (strLen >= width) { str.getChars(0, strLen, buffer, size); } else { int padLen = width - strLen; str.getChars(0, strLen, buffer, size); for (int i = 0; i < padLen; i++) { buffer[size + strLen + i] = padChar; } [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] appendFixedWidthPadRight [RETURN_TYPE] StrBuilder  Object obj int width char padChar [VARIABLES] boolean char padChar Object obj String newLine nullText separator str int CAPACITY capacity destinationIndex endIndex i index initialCapacity len length mark newEnd oldEnd padLen pos size startIndex strLen value width long serialVersionUID value char[] buffer chars destination old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	880	880	1	add	
5	[BUG] [BUGGY] String str = (obj == null ? getNullText() : obj.toString()); [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) { if (width > 0) { ensureCapacity(size + width); [BUGGY] String str = (obj == null ? getNullText() : obj.toString()); [BUGGY] int strLen = str.length(); if (strLen >= width) { str.getChars(0, strLen, buffer, size); } else { int padLen = width - strLen; str.getChars(0, strLen, buffer, size); for (int i = 0; i < padLen; i++) { buffer[size + strLen + i] = padChar; } } [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] appendFixedWidthPadRight [RETURN_TYPE] StrBuilder  Object obj int width char padChar [VARIABLES] boolean char padChar Object obj String newLine nullText separator str int CAPACITY capacity destinationIndex endIndex i index initialCapacity len length mark newEnd oldEnd padLen pos size startIndex strLen value width long serialVersionUID value char[] buffer chars destination old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	881	881	1	replace	
6	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) { if (width > 0) { ensureCapacity(size + width); [BUGGY] [BUGGY] String str = (obj == null ? getNullText() : obj.toString()); int strLen = str.length(); if (strLen >= width) { str.getChars(0, strLen, buffer, size); } else { int padLen = width - strLen; str.getChars(0, strLen, buffer, size); for (int i = 0; i < padLen; i++) { buffer[size + strLen + i] = padChar; } } [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] appendFixedWidthPadRight [RETURN_TYPE] StrBuilder  Object obj int width char padChar [VARIABLES] boolean char padChar Object obj String newLine nullText separator str int CAPACITY capacity destinationIndex endIndex i index initialCapacity len length mark newEnd oldEnd padLen pos size startIndex strLen value width long serialVersionUID value char[] buffer chars destination old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	881	881	1	add	
7	[BUG] [BUGGY] int strLen = str.length(); [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) { if (width > 0) { ensureCapacity(size + width); String str = (obj == null ? getNullText() : obj.toString()); [BUGGY] int strLen = str.length(); [BUGGY] if (strLen >= width) { str.getChars(0, strLen, buffer, size); } else { int padLen = width - strLen; str.getChars(0, strLen, buffer, size); for (int i = 0; i < padLen; i++) { buffer[size + strLen + i] = padChar; } } size += width; [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] appendFixedWidthPadRight [RETURN_TYPE] StrBuilder  Object obj int width char padChar [VARIABLES] boolean char padChar Object obj String newLine nullText separator str int CAPACITY capacity destinationIndex endIndex i index initialCapacity len length mark newEnd oldEnd padLen pos size startIndex strLen value width long serialVersionUID value char[] buffer chars destination old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	882	882	1	replace	
8	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) { if (width > 0) { ensureCapacity(size + width); String str = (obj == null ? getNullText() : obj.toString()); [BUGGY] [BUGGY] int strLen = str.length(); if (strLen >= width) { str.getChars(0, strLen, buffer, size); } else { int padLen = width - strLen; str.getChars(0, strLen, buffer, size); for (int i = 0; i < padLen; i++) { buffer[size + strLen + i] = padChar; } } size += width; [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] appendFixedWidthPadRight [RETURN_TYPE] StrBuilder  Object obj int width char padChar [VARIABLES] boolean char padChar Object obj String newLine nullText separator str int CAPACITY capacity destinationIndex endIndex i index initialCapacity len length mark newEnd oldEnd padLen pos size startIndex strLen value width long serialVersionUID value char[] buffer chars destination old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	882	882	1	add	
9	[BUG] [BUGGY] if (strLen >= width) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) { if (width > 0) { ensureCapacity(size + width); String str = (obj == null ? getNullText() : obj.toString()); int strLen = str.length(); [BUGGY] if (strLen >= width) { [BUGGY] str.getChars(0, strLen, buffer, size); } else { int padLen = width - strLen; str.getChars(0, strLen, buffer, size); for (int i = 0; i < padLen; i++) { buffer[size + strLen + i] = padChar; } } size += width; } [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] appendFixedWidthPadRight [RETURN_TYPE] StrBuilder  Object obj int width char padChar [VARIABLES] boolean char padChar Object obj String newLine nullText separator str int CAPACITY capacity destinationIndex endIndex i index initialCapacity len length mark newEnd oldEnd padLen pos size startIndex strLen value width long serialVersionUID value char[] buffer chars destination old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	883	883	1	replace	
10	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) { if (width > 0) { ensureCapacity(size + width); String str = (obj == null ? getNullText() : obj.toString()); int strLen = str.length(); [BUGGY] [BUGGY] if (strLen >= width) { str.getChars(0, strLen, buffer, size); } else { int padLen = width - strLen; str.getChars(0, strLen, buffer, size); for (int i = 0; i < padLen; i++) { buffer[size + strLen + i] = padChar; } } size += width; } [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] appendFixedWidthPadRight [RETURN_TYPE] StrBuilder  Object obj int width char padChar [VARIABLES] boolean char padChar Object obj String newLine nullText separator str int CAPACITY capacity destinationIndex endIndex i index initialCapacity len length mark newEnd oldEnd padLen pos size startIndex strLen value width long serialVersionUID value char[] buffer chars destination old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	883	883	1	add	
11	[BUG] [BUGGY] str.getChars(0, strLen, buffer, size); [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) { if (width > 0) { ensureCapacity(size + width); String str = (obj == null ? getNullText() : obj.toString()); int strLen = str.length(); if (strLen >= width) { [BUGGY] str.getChars(0, strLen, buffer, size); [BUGGY] } else { int padLen = width - strLen; str.getChars(0, strLen, buffer, size); for (int i = 0; i < padLen; i++) { buffer[size + strLen + i] = padChar; } } size += width; } return this; [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] appendFixedWidthPadRight [RETURN_TYPE] StrBuilder  Object obj int width char padChar [VARIABLES] boolean char padChar Object obj String newLine nullText separator str int CAPACITY capacity destinationIndex endIndex i index initialCapacity len length mark newEnd oldEnd padLen pos size startIndex strLen value width long serialVersionUID value char[] buffer chars destination old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	replace	
12	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder appendFixedWidthPadRight(Object obj, int width, char padChar) { if (width > 0) { ensureCapacity(size + width); String str = (obj == null ? getNullText() : obj.toString()); int strLen = str.length(); if (strLen >= width) { [BUGGY] [BUGGY] str.getChars(0, strLen, buffer, size); } else { int padLen = width - strLen; str.getChars(0, strLen, buffer, size); for (int i = 0; i < padLen; i++) { buffer[size + strLen + i] = padChar; } } size += width; } return this; [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] appendFixedWidthPadRight [RETURN_TYPE] StrBuilder  Object obj int width char padChar [VARIABLES] boolean char padChar Object obj String newLine nullText separator str int CAPACITY capacity destinationIndex endIndex i index initialCapacity len length mark newEnd oldEnd padLen pos size startIndex strLen value width long serialVersionUID value char[] buffer chars destination old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	884	884	1	add	
13	[BUG] [BUGGY] super(); [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder(int initialCapacity) { [BUGGY] super(); [BUGGY] if (initialCapacity <= 0) { initialCapacity = CAPACITY; } buffer = new char[initialCapacity]; } [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] <init> [RETURN_TYPE] StrBuilder(int)  int initialCapacity [VARIABLES] String newLine nullText boolean int CAPACITY initialCapacity mark pos size long serialVersionUID char[] buffer  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.20412414523193154	107	107	1	replace	
14	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder(int initialCapacity) { [BUGGY] [BUGGY] super(); if (initialCapacity <= 0) { initialCapacity = CAPACITY; } buffer = new char[initialCapacity]; } [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] <init> [RETURN_TYPE] StrBuilder(int)  int initialCapacity [VARIABLES] String newLine nullText boolean int CAPACITY initialCapacity mark pos size long serialVersionUID char[] buffer  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.20412414523193154	107	107	1	add	
15	[BUG] [BUGGY] if (initialCapacity <= 0) { [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder(int initialCapacity) { super(); [BUGGY] if (initialCapacity <= 0) { [BUGGY] initialCapacity = CAPACITY; } buffer = new char[initialCapacity]; } [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] <init> [RETURN_TYPE] StrBuilder(int)  int initialCapacity [VARIABLES] String newLine nullText boolean int CAPACITY initialCapacity mark pos size long serialVersionUID char[] buffer  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.20412414523193154	108	108	1	replace	
16	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder(int initialCapacity) { super(); [BUGGY] [BUGGY] if (initialCapacity <= 0) { initialCapacity = CAPACITY; } buffer = new char[initialCapacity]; } [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] <init> [RETURN_TYPE] StrBuilder(int)  int initialCapacity [VARIABLES] String newLine nullText boolean int CAPACITY initialCapacity mark pos size long serialVersionUID char[] buffer  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.20412414523193154	108	108	1	add	
17	[BUG] [BUGGY] buffer = new char[initialCapacity]; [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder(int initialCapacity) { super(); if (initialCapacity <= 0) { initialCapacity = CAPACITY; } [BUGGY] buffer = new char[initialCapacity]; [BUGGY] } [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] <init> [RETURN_TYPE] StrBuilder(int)  int initialCapacity [VARIABLES] String newLine nullText boolean int CAPACITY initialCapacity mark pos size long serialVersionUID char[] buffer  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.20412414523193154	111	111	1	replace	
18	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder(int initialCapacity) { super(); if (initialCapacity <= 0) { initialCapacity = CAPACITY; } [BUGGY] [BUGGY] buffer = new char[initialCapacity]; } [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] <init> [RETURN_TYPE] StrBuilder(int)  int initialCapacity [VARIABLES] String newLine nullText boolean int CAPACITY initialCapacity mark pos size long serialVersionUID char[] buffer  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.20412414523193154	111	111	1	add	
19	[BUG] [BUGGY] } [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder(int initialCapacity) { super(); if (initialCapacity <= 0) { initialCapacity = CAPACITY; } buffer = new char[initialCapacity]; [BUGGY] } [BUGGY]  [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] <init> [RETURN_TYPE] StrBuilder(int)  int initialCapacity [VARIABLES] String newLine nullText boolean int CAPACITY initialCapacity mark pos size long serialVersionUID char[] buffer  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.20412414523193154	112	112	1	replace	
20	[BUG] [BUGGY] [FE] ArrayIndexOutOfBoundsException [CONTEXT] public StrBuilder(int initialCapacity) { super(); if (initialCapacity <= 0) { initialCapacity = CAPACITY; } buffer = new char[initialCapacity]; [BUGGY] [BUGGY] } [CLASS] StrBuilder StrBuilderTokenizer StrBuilderReader StrBuilderWriter [METHOD] <init> [RETURN_TYPE] StrBuilder(int)  int initialCapacity [VARIABLES] String newLine nullText boolean int CAPACITY initialCapacity mark pos size long serialVersionUID char[] buffer  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.20412414523193154	112	112	1	add	
