bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(width  ==  0  ||  padChar  ==  obj.getClass())  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  ==  0  ||  padChar  ==  obj.getClass())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  ==  0  ||  padChar  ==  obj.getClass())  {	  if(width    >    0    ||    padChar    ==    obj.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  if(width  <  0  ||  padChar  ==  obj.getClass())  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  <  0  ||  padChar  ==  obj.getClass())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  0  ||  padChar  ==  obj.getClass())  {	  if(width    >    0    ||    padChar    ==    obj.getClass())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
3	[BUG]  [BUGGY]  if(width  >  0  &&  padChar  ==  obj.getClass())  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  >  0  &&  padChar  ==  obj.getClass())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  &&  padChar  ==  obj.getClass())  {	  if(width    >    0    ||    padChar    ==    obj.getClass())    {    	non-compiled	[CE]  ';'  expected	4	None	replace
4	[BUG]  [BUGGY]  if(width  <  0)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  <  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  0)  {	  if(width    <    =    0)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
5	[BUG]  [BUGGY]  if(size  <  =  0)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(size  <  =  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  <  =  0)  {	  if(width    <    =    0)    {    	non-compiled	[CE]  ';'  expected	3	None	replace
6	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  ';'  expected	19	None	replace
7	[BUG]  [BUGGY]  size  +=  strLen;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  size  +=  strLen;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	size  +=  strLen;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  ';'  expected	19	None	replace
8	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  size  +=  strLen;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  size  +=  strLen;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  size  +=  strLen;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  ';'  expected	19	None	replace
9	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(obj,  width);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  strLen  =  getIndex(obj,  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(obj,  width);	      Integer    strLen    =    getIndex(obj);    	non-compiled	[CE]  ';'  expected	10	None	replace
10	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(obj.intValue);  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  strLen  =  getIndex(obj.intValue);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(obj.intValue);	      Integer    strLen    =    getIndex(obj);    	non-compiled	[CE]  not  a  statement	10	None	replace
11	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(obj.intValue());  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  strLen  =  getIndex(obj.intValue());  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(obj.intValue());	      Integer    strLen    =    getIndex(obj);    	non-compiled	[CE]  not  a  statement	10	None	replace
12	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  not  a  statement	18	None	replace
13	[BUG]  [BUGGY]  int  strLen  =(obj!=  null?  getNullText()  :  obj.toString());  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(obj!=  null?  getNullText()  :  obj.toString());  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj!=  null?  getNullText()  :  obj.toString());	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
14	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
15	[BUG]  [BUGGY]  if(width  ==  0  &&  padChar!=  obj.getWidth())  {  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  ==  0  &&  padChar!=  obj.getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  ==  0  &&  padChar!=  obj.getWidth())  {	  if(width    >    0    &&    padChar!=    obj.getWidth())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
16	[BUG]  [BUGGY]  if(width  >  0  ||  padChar!=  obj.getWidth())  {  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  >  0  ||  padChar!=  obj.getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  ||  padChar!=  obj.getWidth())  {	  if(width    >    0    &&    padChar!=    obj.getWidth())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
17	[BUG]  [BUGGY]  if(width  >=  0  &&  padChar!=  obj.getWidth())  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  >=  0  &&  padChar!=  obj.getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >=  0  &&  padChar!=  obj.getWidth())  {	  if(width    >    0    &&    padChar!=    obj.getWidth())    {    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
18	[BUG]  [BUGGY]  int  width  =  obj.getLength()  +  1;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  obj.getLength()  +  1;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj.getLength()  +  1;	      int    width    =    obj.getLength();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
19	[BUG]  [BUGGY]  int  width  =  obj.getHeight();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  obj.getHeight();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj.getHeight();	      int    width    =    obj.getLength();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
20	[BUG]  [BUGGY]  size  +=  width;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  size  +=  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	size  +=  width;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    width;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
21	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    width;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
22	[BUG]  [BUGGY]  Size  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Size  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Size  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  width;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    width;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
23	[BUG]  [BUGGY]  int  width  =  obj.getWidth()  +  1;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  obj.getWidth()  +  1;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj.getWidth()  +  1;	      int    width    =    obj.getWidth();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
24	[BUG]  [BUGGY]  int  width  =  obj.getWidth()  +  2;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  obj.getWidth()  +  2;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj.getWidth()  +  2;	      int    width    =    obj.getWidth();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
25	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize()  +  width;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  size  =  getImplicitSize()  +  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize()  +  width;	      Integer    size    =    getImplicitSize();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize()  -  width;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  size  =  getImplicitSize()  -  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize()  -  width;	      Integer    size    =    getImplicitSize();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
27	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize()  *  width;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  size  =  getImplicitSize()  *  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize()  *  width;	      Integer    size    =    getImplicitSize();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  if(length  >  0)  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(length  >  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(length  >  0)  {	  if(size    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
29	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString())+  width;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString())+  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString())+  width;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
30	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString())+  width;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString())+  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(str  ==  null?  getWidth()  :  obj.toString())+  width;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
31	[BUG]  [BUGGY]  int  width  =  this.size();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  this.size();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  this.size();	      int    width    =    size();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  int  width  =  width();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  width();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  width();	      int    width    =    size();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
33	[BUG]  [BUGGY]  int  width  =  size()  +  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  size()  +  1;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  size()  +  1;	      int    width    =    size();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
34	[BUG]  [BUGGY]  if(size  ==  0)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(size  ==  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  ==  0)  {	  if(width    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
35	[BUG]  [BUGGY]  if(width  >  0  ||  padChar!=  null)  {  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  >  0  ||  padChar!=  null)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  ||  padChar!=  null)  {	  if(width    >    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	12	None	replace
36	[BUG]  [BUGGY]  if(width  ==  0  ||  padChar  ==  null)  {  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  ==  0  ||  padChar  ==  null)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  ==  0  ||  padChar  ==  null)  {	  if(width    >    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	12	None	replace
37	[BUG]  [BUGGY]  if(width  <  0  ||  padChar  ==  null)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  <  0  ||  padChar  ==  null)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  0  ||  padChar  ==  null)  {	  if(width    >    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	12	None	replace
38	[BUG]  [BUGGY]  if(width  ==  0  ||  padChar!=  obj.getClass())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  ==  0  ||  padChar!=  obj.getClass())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  ==  0  ||  padChar!=  obj.getClass())  {	  if(width    >    0    ||    padChar!=    obj.getClass())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
39	[BUG]  [BUGGY]  if(width  >  0  &&  padChar!=  obj.getClass())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  >  0  &&  padChar!=  obj.getClass())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  &&  padChar!=  obj.getClass())  {	  if(width    >    0    ||    padChar!=    obj.getClass())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
40	[BUG]  [BUGGY]  if(width  >=  0  ||  padChar!=  obj.getClass())  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  >=  0  ||  padChar!=  obj.getClass())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >=  0  ||  padChar!=  obj.getClass())  {	  if(width    >    0    ||    padChar!=    obj.getClass())    {    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	5	None	replace
41	[BUG]  [BUGGY]  Integer  width  =  getWidth()  +  1;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  width  =  getWidth()  +  1;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getWidth()  +  1;	      Integer    width    =    getWidth();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
42	[BUG]  [BUGGY]  Integer  width  =  getWidth()  -  width;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  width  =  getWidth()  -  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getWidth()  -  width;	      Integer    width    =    getWidth();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
43	[BUG]  [BUGGY]  Integer  width  =  getWidth()  /  2;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  width  =  getWidth()  /  2;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getWidth()  /  2;	      Integer    width    =    getWidth();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
44	[BUG]  [BUGGY]  Integer  width  =  getWidth()  +  width;  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  width  =  getWidth()  +  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getWidth()  +  width;	      Integer    width    =    getWidth();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	7	None	replace
45	[BUG]  [BUGGY]  if(size  >  0)  {  if(size  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]    ComparisonFailure    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(size  >  0)  {  if(size  >  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size    >    0)    {    if(size  >  0)  {	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	add
46	[BUG]  [BUGGY]  if(size  >  0)  {  If(size  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]      ComparisonFailure    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(size  >  0)  {  If(size  >  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size    >    0)    {    If(size  >  0)  {	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	add
47	[BUG]  [BUGGY]  if(size  >  0)  {  int  size  >  0)  {  [CE]  generics  are  not  supported  in  -source  1.3  [FE]        ComparisonFailure    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(size  >  0)  {  int  size  >  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size    >    0)    {    int  size  >  0)  {	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	add
48	[BUG]  [BUGGY]  if(size  >  0)  {  if(size  >  0)  <  [CE]  generics  are  not  supported  in  -source  1.3  [FE]          ComparisonFailure    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(size  >  0)  {  if(size  >  0)  <  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size    >    0)    {    if(size  >  0)  <	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	1	None	add
49	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(size);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  strLen  =  getIndex(size);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(size);	      Integer    strLen    =    getIndex(width);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
50	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  size);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  strLen  =  getIndex(width,  size);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  size);	      Integer    strLen    =    getIndex(width);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
51	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  strLen  =  getIndex(strLen);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(strLen);	      Integer    strLen    =    getIndex(width);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();	      int    strLen    =(str    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
53	[BUG]  [BUGGY]  int  strLen  =(str  ==  null)?  getWidth()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(str  ==  null)?  getWidth()  :  obj.toString();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(str  ==  null)?  getWidth()  :  obj.toString();	      int    strLen    =(str    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
54	[BUG]  [BUGGY]  int  strLen  =(obj!=  null)?  getNullText()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(obj!=  null)?  getNullText()  :  obj.toString();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj!=  null)?  getNullText()  :  obj.toString();	      int    strLen    =(str    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
55	[BUG]  [BUGGY]  int  width  =  this.length();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  this.length();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  this.length();	      int    width    =    length();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
56	[BUG]  [BUGGY]  int  width  =  length()  +  1;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  length()  +  1;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  length()  +  1;	      int    width    =    length();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
57	[BUG]  [BUGGY]  int  width  =  0;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  0;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  0;	      int    width    =    length();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
58	[BUG]  [BUGGY]  int  size  =  obj.size();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  size  =  obj.size();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj.size();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
59	[BUG]  [BUGGY]  int  size  =  obj.getSize();  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  size  =  obj.getSize();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj.getSize();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
60	[BUG]  [BUGGY]  int  size  =  obj.getLength();  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  size  =  obj.getLength();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj.getLength();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
61	[BUG]  [BUGGY]  if(width  >  0  &&  padChar  ==  null)  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  >  0  &&  padChar  ==  null)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  &&  padChar  ==  null)  {	  if(width    >    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
62	[BUG]  [BUGGY]  if(width  >=  0  ||  padChar  ==  null)  {  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  >=  0  ||  padChar  ==  null)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >=  0  ||  padChar  ==  null)  {	  if(width    >    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
63	[BUG]  [BUGGY]  char  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  char  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	char  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();	      int    strLen    =(str    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
64	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(str);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  strLen  =  getIndex(str);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(str);	      Integer    strLen    =    getIndex(obj);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
65	[BUG]  [BUGGY]  if(width  >  0  &&  padChar!=  obj.getHeight())  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  >  0  &&  padChar!=  obj.getHeight())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  &&  padChar!=  obj.getHeight())  {	  if(width    >    0    &&    padChar!=    obj.getWidth())    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
66	[BUG]  [BUGGY]  Integer  width  =  getWidth()  *  width;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  width  =  getWidth()  *  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getWidth()  *  width;	      Integer    width    =    getWidth();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
67	[BUG]  [BUGGY]  if(size  >  0)  {  size  >  0)  {  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(size  >  0)  {  size  >  0)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size    >    0)    {    size  >  0)  {	  	non-compiled	[CE]  not  a  statement	1	None	add
68	[BUG]  [BUGGY]  int  width  =  obj  ==  null?  getWidth()  :  obj.getWidth();  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  obj  ==  null?  getWidth()  :  obj.getWidth();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj  ==  null?  getWidth()  :  obj.getWidth();	      int    width    =    obj.getWidth();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
69	[BUG]  [BUGGY]  int  width  =  obj!=  null?  getWidth()  :  obj.getWidth();  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  obj!=  null?  getWidth()  :  obj.getWidth();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj!=  null?  getWidth()  :  obj.getWidth();	      int    width    =    obj.getWidth();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
70	[BUG]  [BUGGY]  int  width  =  obj.getWidth()  +  width;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  obj.getWidth()  +  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj.getWidth()  +  width;	      int    width    =    obj.getWidth();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
71	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  width);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  strLen  =  getIndex(width,  width);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  width);	      Integer    strLen    =    getIndex(width);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
72	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width  -  1);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  strLen  =  getIndex(width  -  1);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width  -  1);	      Integer    strLen    =    getIndex(width);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
73	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width  +  1);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  strLen  =  getIndex(width  +  1);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width  +  1);	      Integer    strLen    =    getIndex(width);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
74	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.toString();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getNullText()  :  obj.toString();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
75	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getNumberText()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  size  =  obj  ==  null?  getNumberText()  :  obj.toString();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getNumberText()  :  obj.toString();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
76	[BUG]  [BUGGY]  if(width  >  0)  {  if(obj  ==  null  ||!obj.isEmpty())  {  return;  }  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  >  0)  {  if(obj  ==  null  ||!obj.isEmpty())  {  return;  }  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0)  {  if(obj  ==  null  ||!obj.isEmpty())  {  return;  }	      	non-compiled	[CE]  cannot  find  symbol	6	None	replace
77	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.getString();  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.getString();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getNullText()  :  obj.getString();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
78	[BUG]  [BUGGY]  int  strLen  =(obj!=  null?  getNullText()  :  obj.toString());  size  +=  strLen;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(obj!=  null?  getNullText()  :  obj.toString());  size  +=  strLen;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj!=  null?  getNullText()  :  obj.toString());  size  +=  strLen;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
79	[BUG]  [BUGGY]  int  width  =  obj  ==  null?  getWidth()  :  obj.getLength();  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  obj  ==  null?  getWidth()  :  obj.getLength();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj  ==  null?  getWidth()  :  obj.getLength();	      int    width    =    obj.getLength();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
80	[BUG]  [BUGGY]  int  width  =  obj!=  null?  obj.getLength()  :  width;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  obj!=  null?  obj.getLength()  :  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj!=  null?  obj.getLength()  :  width;	      int    width    =    obj.getLength();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
81	[BUG]  [BUGGY]  int  strLen  =(width  ==  null?  getNullText()  :  obj.toString())+  width;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(width  ==  null?  getNullText()  :  obj.toString())+  width;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(width  ==  null?  getNullText()  :  obj.toString())+  width;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
82	[BUG]  [BUGGY]  if(width  >=  width)  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  >=  width)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >=  width)  {	  if(size    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
83	[BUG]  [BUGGY]  int  width  =  size()  -  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  size()  -  1;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  size()  -  1;	      int    width    =    size();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
84	[BUG]  [BUGGY]  int  width  =  length()  -  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  length()  -  1;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  length()  -  1;	      int    width    =    length();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
85	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getNullText()  :  obj.toString())+  padChar;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(str  ==  null?  getNullText()  :  obj.toString())+  padChar;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(str  ==  null?  getNullText()  :  obj.toString())+  padChar;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
86	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  0);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  strLen  =  getIndex(width,  0);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  0);	      Integer    strLen    =    getIndex(width);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
87	[BUG]  [BUGGY]  if(width  <  =  0  ||  padChar  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  <  =  0  ||  padChar  ==  null)  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  =  0  ||  padChar  ==  null)  {	  if(width    >    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
88	[BUG]  [BUGGY]  if(width  >  0  &&  padChar  ==  obj.getWidth())  {  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  >  0  &&  padChar  ==  obj.getWidth())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  &&  padChar  ==  obj.getWidth())  {	  if(width    >    0    &&    padChar!=    obj.getWidth())    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
89	[BUG]  [BUGGY]  if(width  <  =  0  ||  padChar  ==  obj.getClass())  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  <  =  0  ||  padChar  ==  obj.getClass())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  =  0  ||  padChar  ==  obj.getClass())  {	  if(width    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
90	[BUG]  [BUGGY]  if(width  <  =  0  ||  padChar!=  obj.getClass())  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  if(width  <  =  0  ||  padChar!=  obj.getClass())  {  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  =  0  ||  padChar!=  obj.getClass())  {	  if(width    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
91	[BUG]  [BUGGY]  Integer  strLen  =  getEndIndex(obj);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  strLen  =  getEndIndex(obj);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getEndIndex(obj);	      Integer    strLen    =    getIndex(obj);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
92	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  padChar);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  strLen  =  getIndex(width,  padChar);  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  padChar);	      Integer    strLen    =    getIndex(obj);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
93	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  padChar;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  padChar;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  padChar;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
94	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  length;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  length;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  length;	      int    strLen    =(str    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
95	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize()  -  1;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  Integer  size  =  getImplicitSize()  -  1;  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize()  -  1;	      Integer    size    =    getImplicitSize();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
96	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.getClass().getName();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.getClass().getName();  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getNullText()  :  obj.getClass().getName();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
97	[BUG]  [BUGGY]  int  size  =  obj  instanceof  Number?((  Number)obj).length()  :  width;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  size  =  obj  instanceof  Number?((  Number)obj).length()  :  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  instanceof  Number?((  Number)obj).length()  :  width;	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
98	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  width;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  width;  [BUGGY]    ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getNullText()  :  width;	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
99	[BUG]  [BUGGY]  int  width  =  obj  ==  null?  width  :  obj.getWidth();  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  obj  ==  null?  width  :  obj.getWidth();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj  ==  null?  width  :  obj.getWidth();	      int    width    =    obj.getWidth();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
100	[BUG]  [BUGGY]  int  width  =  obj!=  null?  width  :  obj.getWidth();  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  obj!=  null?  width  :  obj.getWidth();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj!=  null?  width  :  obj.getWidth();	      int    width    =    obj.getWidth();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
101	[BUG]  [BUGGY]  int  width  =  obj  ==  null?  width  :  obj.getLength();  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  obj  ==  null?  width  :  obj.getLength();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj  ==  null?  width  :  obj.getLength();	      int    width    =    obj.getLength();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
102	[BUG]  [BUGGY]  int  width  =  obj!=  null?  width  :  obj.getLength();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {    [BUGGY]  int  width  =  obj!=  null?  width  :  obj.getLength();  [BUGGY]    if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj!=  null?  width  :  obj.getLength();	      int    width    =    obj.getLength();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
