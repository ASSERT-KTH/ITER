bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]  if(size  >  0)  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	add	if(size  >  0)  {	if  (width  >  0)  {  	compilable	  [FE]  ComparisonFailure  	1	3	replace
2	[BUG]  [BUGGY]  if(size  >  0)  {  [FE]  ComparisonFailure  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]  if(size  >  0)  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  >  0)  {	if  (width  >  0)  {  	compilable	  [FE]  ComparisonFailure  	1	3	replace
3	[BUG]  [BUGGY]  if(width  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]  if(width  <  =  0)  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  =  0)  {	if  (width  >  0)  {  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  if(width  >  0  ||  padChar  ==  obj.getClass())  {  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]  if(width  >  0  ||  padChar  ==  obj.getClass())  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  ||  padChar  ==  obj.getClass())  {	if  (width  >  0)  {  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	1	None	replace
5	[BUG]  [BUGGY]  if(width  >  0  ||  padChar!=  obj.getClass())  {  [CE]  bad  operand  types  for  binary  operator  '!='  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]  if(width  >  0  ||  padChar!=  obj.getClass())  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  ||  padChar!=  obj.getClass())  {	if  (width  >  0)  {  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '!='	1	None	replace
6	[BUG]  [BUGGY]    [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]    [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	  	if  (width  >  0)  {  	non-compiled	[CE]  not  a  statement	1	None	replace
7	[BUG]  [BUGGY]    Integer  width  =  getWidth();  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]    Integer  width  =  getWidth();  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	    Integer  width  =  getWidth();		non-compiled	[CE]  not  a  statement	2	None	add
8	[BUG]  [BUGGY]    Integer  strLen  =  getIndex(width);  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]    Integer  strLen  =  getIndex(width);  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	    Integer  strLen  =  getIndex(width);		non-compiled	[CE]  not  a  statement	2	None	add
9	[BUG]  [BUGGY]    int  width  =  size();  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]    int  width  =  size();  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	    int  width  =  size();		non-compiled	[CE]  not  a  statement	2	None	add
10	[BUG]  [BUGGY]    Integer  strLen  =  getIndex(obj);  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]    Integer  strLen  =  getIndex(obj);  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	    Integer  strLen  =  getIndex(obj);		non-compiled	[CE]  not  a  statement	2	None	add
11	[BUG]  [BUGGY]    Integer  size  =  getImplicitSize();  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]    Integer  size  =  getImplicitSize();  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	    Integer  size  =  getImplicitSize();		non-compiled	[CE]  not  a  statement	2	None	add
12	[BUG]  [BUGGY]  if(width  >  0  ||  padChar  ==  null)  {  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]  if(width  >  0  ||  padChar  ==  null)  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  ||  padChar  ==  null)  {	if  (width  >  0)  {  	non-compiled	[CE]  not  a  statement	1	None	replace
13	[BUG]  [BUGGY]  if(width  ==  0)  {  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]  if(width  ==  0)  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  ==  0)  {	if  (width  >  0)  {  	non-compiled	[CE]  not  a  statement	1	None	replace
14	[BUG]  [BUGGY]  if(width  >=  0)  {  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]  if(width  >=  0)  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >=  0)  {	if  (width  >  0)  {  	non-compiled	[CE]  not  a  statement	1	None	replace
15	[BUG]  [BUGGY]    int  width  =  obj.getWidth();  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]    int  width  =  obj.getWidth();  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	    int  width  =  obj.getWidth();		non-compiled	[CE]  not  a  statement	2	None	add
16	[BUG]  [BUGGY]    int  width  =  obj.getLength();  [CE]  not  a  statement  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]    int  width  =  obj.getLength();  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	    int  width  =  obj.getLength();		non-compiled	[CE]  not  a  statement	2	None	add
17	[BUG]  [BUGGY]    int  width  =  length();  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]    int  width  =  length();  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	    int  width  =  length();		non-compiled	[CE]  not  a  statement	2	None	add
18	[BUG]  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  [CE]  not  a  statement  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());		non-compiled	[CE]  not  a  statement	2	None	add
19	[BUG]  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  size  +=  strLen;		non-compiled	[CE]  <identifier>  expected	2	None	add
20	[BUG]  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString())+  width;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString())+  width;  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString())+  width;		non-compiled	[CE]  illegal  start  of  type	2	None	add
21	[BUG]  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  size  +=  width;  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  size  +=  width;  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	    int  strLen  =(str  ==  null?  getNullText()  :  obj.toString());  size  +=  width;		non-compiled	[CE]  <identifier>  expected	2	None	add
22	[BUG]  [BUGGY]    int  strLen  =(str  ==  null)?  getNullText()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]    int  strLen  =(str  ==  null)?  getNullText()  :  obj.toString();  [BUGGY]  if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	    int  strLen  =(str  ==  null)?  getNullText()  :  obj.toString();		non-compiled	[CE]  illegal  start  of  type	2	None	add
23	[BUG]  [BUGGY]  if(width  >  0  &&  padChar!=  obj.getWidth())  {  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {  [BUGGY]  if(width  >  0  &&  padChar!=  obj.getWidth())  {  [BUGGY]  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  &&  padChar!=  obj.getWidth())  {	if  (width  >  0)  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
