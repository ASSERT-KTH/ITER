bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null)?  getWidth()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null)?  getWidth()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null)?  getWidth()  :  obj.toString();	  int    strLen    =(str    ==    null)?    getWidth()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
2	[BUG]  [BUGGY]  int  strLen  =(obj!=  null)?  getWidth()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj!=  null)?  getWidth()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj!=  null)?  getWidth()  :  obj.toString();	  int    strLen    =(str    ==    null)?    getWidth()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
3	[BUG]  [BUGGY]  size  +=  length;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  size  +=  length;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	size  +=  length;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    length;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
4	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  size  +=  length;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  size  +=  length;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  size  +=  length;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    length;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
5	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  length;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  length;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  length;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    length;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
6	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());	  int    strLen    =(obj!=    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
7	[BUG]  [BUGGY]  int  strLen  =(obj!=  null?  getWidth()  :  obj.toString());  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj!=  null?  getWidth()  :  obj.toString());  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj!=  null?  getWidth()  :  obj.toString());	  int    strLen    =(obj!=    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());	  int    strLen    =(obj!=    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
9	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getSize()  :  obj.toString());  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getSize()  :  obj.toString());  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getSize()  :  obj.toString());	  int    strLen    =(obj!=    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  Integer  width  =  getWidth()  /  1;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getWidth()  /  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getWidth()  /  1;	  Integer    width    =    getWidth()    +    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
11	[BUG]  [BUGGY]  Integer  width  =  getHeight();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getHeight();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getHeight();	  Integer    width    =    getWidth()    +    1;    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
12	[BUG]  [BUGGY]  int  width  =  obj  ==  null?  getWidth()  :  obj.getHeight();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj  ==  null?  getWidth()  :  obj.getHeight();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj  ==  null?  getWidth()  :  obj.getHeight();	  int    width    =    obj!=    null?    getWidth()    :    obj.getWidth();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
13	[BUG]  [BUGGY]  int  width  =  obj!=  null?  getWidth()  :  obj.getHeight();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj!=  null?  getWidth()  :  obj.getHeight();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj!=  null?  getWidth()  :  obj.getHeight();	  int    width    =    obj!=    null?    getWidth()    :    obj.getWidth();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
14	[BUG]  [BUGGY]  Integer  width  =  getWidth()  *  2;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getWidth()  *  2;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getWidth()  *  2;	  Integer    width    =    getWidth()    /    2;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
15	[BUG]  [BUGGY]  int  width  =  width()  +  1;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  width()  +  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  width()  +  1;	  int    width    =    width();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
16	[BUG]  [BUGGY]  int  width  =  width()  *  padChar;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  width()  *  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  width()  *  padChar;	  int    width    =    width();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
17	[BUG]  [BUGGY]  int  width  =  width()  +  padChar;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  width()  +  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  width()  +  padChar;	  int    width    =    width();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
18	[BUG]  [BUGGY]  if(width  >  0)  {  If(width  >  0)  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0)  {  If(width  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0)  {  If(width  >  0)  {	  if(size    >    0)    {    If(size    >    0)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
19	[BUG]  [BUGGY]  if(width  >  0)  {  If(width  <  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0)  {  If(width  <  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0)  {  If(width  <  0)  {	  if(size    >    0)    {    If(size    >    0)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
20	[BUG]  [BUGGY]  if(length  >  0)  {  If(length  >  0)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(length  >  0)  {  If(length  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(length  >  0)  {  If(length  >  0)  {	  if(size    >    0)    {    If(size    >    0)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
21	[BUG]  [BUGGY]  if(width  <  =  0)  {  If(width  >  0)  {  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  =  0)  {  If(width  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  =  0)  {  If(width  >  0)  {	  if(size    >    0)    {    If(size    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
22	[BUG]  [BUGGY]  if(width  >  0)  {  int  size  >  0)  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0)  {  int  size  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0)  {  int  size  >  0)  {	  if(size    >    0)    {    int    size    >    0)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
23	[BUG]  [BUGGY]  if(size  >  0)  {  int  size  =  0;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  >  0)  {  int  size  =  0;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  >  0)  {  int  size  =  0;	  if(size    >    0)    {    int    size    >    0)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
24	[BUG]  [BUGGY]  if(length  >  0)  {  int  size  >  0)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(length  >  0)  {  int  size  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(length  >  0)  {  int  size  >  0)  {	  if(size    >    0)    {    int    size    >    0)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
25	[BUG]  [BUGGY]  if(length  ==  0)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(length  ==  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(length  ==  0)  {	  if(size    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
26	[BUG]  [BUGGY]  Integer  strLen  =  getEndIndex(obj,  width);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getEndIndex(obj,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getEndIndex(obj,  width);	  Integer    strLen    =    getEndIndex(obj);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
27	[BUG]  [BUGGY]  Integer  strLen  =  getStartIndex(obj);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getStartIndex(obj);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getStartIndex(obj);	  Integer    strLen    =    getEndIndex(obj);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
28	[BUG]  [BUGGY]  Integer  strLen  =  getEndIndex(obj,  size);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getEndIndex(obj,  size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getEndIndex(obj,  size);	  Integer    strLen    =    getEndIndex(obj);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
29	[BUG]  [BUGGY]  Integer  strLen  =  getEndIndex(obj.length);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getEndIndex(obj.length);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getEndIndex(obj.length);	  Integer    strLen    =    getEndIndex(obj);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
30	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(obj.length);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(obj.length);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(obj.length);	  Integer    strLen    =    getIndex(size);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
31	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize()  /  width;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  size  =  getImplicitSize()  /  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize()  /  width;	  Integer    size    =    getImplicitSize()    *    width;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
32	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize()  *  padChar;  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  size  =  getImplicitSize()  *  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize()  *  padChar;	  Integer    size    =    getImplicitSize()    *    width;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
33	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize()  *  width  +  1;  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  size  =  getImplicitSize()  *  width  +  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize()  *  width  +  1;	  Integer    size    =    getImplicitSize()    *    width;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
34	[BUG]  [BUGGY]  if(size  <  0)  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  <  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  <  0)  {	  if(width    <    0)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  if(width  <  0  ||  padChar  ==  ';')  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  0  ||  padChar  ==  ';')  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  0  ||  padChar  ==  ';')  {	  if(width    <    0)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
36	[BUG]  [BUGGY]  size  -=  strLen;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  size  -=  strLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	size  -=  strLen;	  size    +=    strLen;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  size  +=  padLen;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  size  +=  padLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	size  +=  padLen;	  size    +=    strLen;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
38	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null)?  getNumberText()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null)?  getNumberText()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null)?  getNumberText()  :  obj.toString();	  int    strLen    =(obj    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
39	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null)?  getSeparator()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null)?  getSeparator()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null)?  getSeparator()  :  obj.toString();	  int    strLen    =(obj    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
40	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null)?  getSize()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null)?  getSize()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null)?  getSize()  :  obj.toString();	  int    strLen    =(obj    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
41	[BUG]  [BUGGY]  if(width  ==  0  &&  padChar  ==  obj.getClass())  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  ==  0  &&  padChar  ==  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  ==  0  &&  padChar  ==  obj.getClass())  {	  if(width    >    0    &&    padChar    ==    obj.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
42	[BUG]  [BUGGY]  if(width  ==  width  &&  padChar  ==  obj.getClass())  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  ==  width  &&  padChar  ==  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  ==  width  &&  padChar  ==  obj.getClass())  {	  if(width    >    0    &&    padChar    ==    obj.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
43	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  width;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  width;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    width;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
44	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  size  +=  width;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  size  +=  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  size  +=  width;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    width;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
45	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getSize()  :  obj.toString());  size  +=  width;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getSize()  :  obj.toString());  size  +=  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getSize()  :  obj.toString());  size  +=  width;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    width;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
46	[BUG]  [BUGGY]  if(width  >  0  &&  padChar!=  null)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0  &&  padChar!=  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  &&  padChar!=  null)  {	  if(width    >    0    &&    padChar    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
47	[BUG]  [BUGGY]  if(size  >  0  &&  padChar  ==  null)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  >  0  &&  padChar  ==  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  >  0  &&  padChar  ==  null)  {	  if(width    >    0    &&    padChar    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
48	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString())+  width;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString())+  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString())+  width;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
49	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString())+  width;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString())+  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString())+  width;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
50	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString())+  padChar;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString())+  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString())+  padChar;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
51	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(size,  0);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(size,  0);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(size,  0);	  Integer    strLen    =    getIndex(width,    0);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
52	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  4);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width,  4);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  4);	  Integer    strLen    =    getIndex(width,    0);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
53	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(obj,  0);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(obj,  0);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(obj,  0);	  Integer    strLen    =    getIndex(width,    0);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
54	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize()  +  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  size  =  getImplicitSize()  +  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize()  +  1;	  Integer    size    =    getImplicitSize()    -    1;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
55	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize().length  -  1;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  size  =  getImplicitSize().length  -  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize().length  -  1;	  Integer    size    =    getImplicitSize()    -    1;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
56	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize()  *  1;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  size  =  getImplicitSize()  *  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize()  *  1;	  Integer    size    =    getImplicitSize()    -    1;    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
57	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString())+  padChar;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString())+  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(str  ==  null?  getWidth()  :  obj.toString())+  padChar;	  int    strLen    =(str    ==    null?    getNullText()    :    obj.toString())+    padChar;    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
58	[BUG]  [BUGGY]  int  width  =  obj.getWidth()  +  padChar;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj.getWidth()  +  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj.getWidth()  +  padChar;	  int    width    =    obj.getWidth()    +    width;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
59	[BUG]  [BUGGY]  int  width  =  obj.getWidth()  *  width;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj.getWidth()  *  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj.getWidth()  *  width;	  int    width    =    obj.getWidth()    +    width;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
60	[BUG]  [BUGGY]  int  width  =  obj.getHeight()  +  width;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj.getHeight()  +  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj.getHeight()  +  width;	  int    width    =    obj.getWidth()    +    width;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
61	[BUG]  [BUGGY]  int  width  =  obj.getWidth()  /  width;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj.getWidth()  /  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj.getWidth()  /  width;	  int    width    =    obj.getWidth()    +    width;    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
62	[BUG]  [BUGGY]  int  width  =  obj  ==  null?  obj.getLength()  :  width;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj  ==  null?  obj.getLength()  :  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj  ==  null?  obj.getLength()  :  width;	  int    width    =    obj!=    null?    obj.getLength()    :    width;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
63	[BUG]  [BUGGY]  int  width  =  obj!=  null?  obj.getWidth()  :  width;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj!=  null?  obj.getWidth()  :  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj!=  null?  obj.getWidth()  :  width;	  int    width    =    obj!=    null?    obj.getLength()    :    width;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
64	[BUG]  [BUGGY]  int  width  =  obj  ==  null?  obj.getWidth()  :  width;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj  ==  null?  obj.getWidth()  :  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj  ==  null?  obj.getWidth()  :  width;	  int    width    =    obj!=    null?    obj.getLength()    :    width;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
65	[BUG]  [BUGGY]  Size  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  width;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Size  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Size  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  width;	  Size    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    width;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
66	[BUG]  [BUGGY]  Size  strLen  =(obj  ==  null?  getSize()  :  obj.toString());  size  +=  width;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Size  strLen  =(obj  ==  null?  getSize()  :  obj.toString());  size  +=  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Size  strLen  =(obj  ==  null?  getSize()  :  obj.toString());  size  +=  width;	  Size    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    width;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
67	[BUG]  [BUGGY]  Size  strLen  =(obj!=  null?  getWidth()  :  obj.toString());  size  +=  width;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Size  strLen  =(obj!=  null?  getWidth()  :  obj.toString());  size  +=  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Size  strLen  =(obj!=  null?  getWidth()  :  obj.toString());  size  +=  width;	  Size    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    width;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
68	[BUG]  [BUGGY]  int  width  =  obj.length();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj.length();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj.length();	  int    width    =    this.length();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
69	[BUG]  [BUGGY]  int  width  =  this.length()  -  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  this.length()  -  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  this.length()  -  1;	  int    width    =    this.length();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
70	[BUG]  [BUGGY]  int  width  =  this.length()  +  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  this.length()  +  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  this.length()  +  1;	  int    width    =    this.length();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
71	[BUG]  [BUGGY]  Integer  width  =  getWidth()  /  width;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getWidth()  /  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getWidth()  /  width;	  Integer    width    =    getWidth()    *    width;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
72	[BUG]  [BUGGY]  Integer  width  =  getWidth()  *  padChar;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getWidth()  *  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getWidth()  *  padChar;	  Integer    width    =    getWidth()    *    width;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
73	[BUG]  [BUGGY]  Integer  width  =  getHeight()  *  width;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getHeight()  *  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getHeight()  *  width;	  Integer    width    =    getWidth()    *    width;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
74	[BUG]  [BUGGY]  int  width  =  getWidth()  /  width;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  getWidth()  /  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  getWidth()  /  width;	  Integer    width    =    getWidth()    *    width;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
75	[BUG]  [BUGGY]  if(obj  ==  null  ||!obj.isEmpty())  {  return;  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(obj  ==  null  ||!obj.isEmpty())  {  return;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(obj  ==  null  ||!obj.isEmpty())  {  return;  }	  if(width    >    0)    {    if(obj    ==    null    ||!obj.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
76	[BUG]  [BUGGY]  if(obj!=  null  ||!obj.isEmpty())  {  return;  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(obj!=  null  ||!obj.isEmpty())  {  return;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(obj!=  null  ||!obj.isEmpty())  {  return;  }	  if(width    >    0)    {    if(obj    ==    null    ||!obj.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
77	[BUG]  [BUGGY]  if(width  ==  0)  {  if(obj  ==  null  ||!obj.isEmpty())  {  return;  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  ==  0)  {  if(obj  ==  null  ||!obj.isEmpty())  {  return;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  ==  0)  {  if(obj  ==  null  ||!obj.isEmpty())  {  return;  }	  if(width    >    0)    {    if(obj    ==    null    ||!obj.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
78	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize()  -  padChar;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  size  =  getImplicitSize()  -  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize()  -  padChar;	  Integer    size    =    getImplicitSize()    -    width;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
79	[BUG]  [BUGGY]  if(size  <  0  ||  padChar  ==  obj.getClass())  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  <  0  ||  padChar  ==  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  <  0  ||  padChar  ==  obj.getClass())  {	  if(width    <    0    ||    padChar    ==    obj.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
80	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null)?  getNegativeText()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null)?  getNegativeText()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null)?  getNegativeText()  :  obj.toString();	  int    strLen    =(obj!=    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
81	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(obj.intValue(),  width);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(obj.intValue(),  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(obj.intValue(),  width);	  Integer    strLen    =    getIndex(obj.intValue());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
82	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(obj.intValue()  -  width);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(obj.intValue()  -  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(obj.intValue()  -  width);	  Integer    strLen    =    getIndex(obj.intValue());    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
83	[BUG]  [BUGGY]  int  width  =  padChar  ==  null?  getWidth()  :  obj.getWidth();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  padChar  ==  null?  getWidth()  :  obj.getWidth();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  padChar  ==  null?  getWidth()  :  obj.getWidth();	  int    width    =    obj    ==    null?    getWidth()    :    obj.getWidth();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
84	[BUG]  [BUGGY]  if(width  >  0  ||  padChar  ==  obj.getWidth())  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0  ||  padChar  ==  obj.getWidth())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  ||  padChar  ==  obj.getWidth())  {	  if(width    >    0    &&    padChar    ==    obj.getWidth())    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
85	[BUG]  [BUGGY]  if(width  >  0  &&  padChar  >=  obj.getWidth())  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0  &&  padChar  >=  obj.getWidth())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  &&  padChar  >=  obj.getWidth())  {	  if(width    >    0    &&    padChar    ==    obj.getWidth())    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
86	[BUG]  [BUGGY]  if(length  ==  0  ||  padChar  ==  obj.getClass())  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(length  ==  0  ||  padChar  ==  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(length  ==  0  ||  padChar  ==  obj.getClass())  {	  if(width    ==    0    ||    padChar    ==    obj.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
87	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize()  +  padChar;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  size  =  getImplicitSize()  +  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize()  +  padChar;	  Integer    size    =    getImplicitSize()    +    width;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
88	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize()  +  width  +  1;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  size  =  getImplicitSize()  +  width  +  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize()  +  width  +  1;	  Integer    size    =    getImplicitSize()    +    width;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
89	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  width  -  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width,  width  -  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  width  -  1);	  Integer    strLen    =    getIndex(width    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
90	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  size  -  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width,  size  -  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  size  -  1);	  Integer    strLen    =    getIndex(width    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
91	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(size  -  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(size  -  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(size  -  1);	  Integer    strLen    =    getIndex(width    -    1);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
92	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(obj,  width,  padChar);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(obj,  width,  padChar);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(obj,  width,  padChar);	  Integer    strLen    =    getIndex(width,    padChar);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
93	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  padChar,  size);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width,  padChar,  size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  padChar,  size);	  Integer    strLen    =    getIndex(width,    padChar);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
94	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(size,  padChar);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(size,  padChar);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(size,  padChar);	  Integer    strLen    =    getIndex(width,    padChar);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
95	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen,  width);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(strLen,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(strLen,  width);	  Integer    strLen    =    getIndex(strLen);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
96	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen  +  width);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(strLen  +  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(strLen  +  width);	  Integer    strLen    =    getIndex(strLen);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
97	[BUG]  [BUGGY]  int  size  =  obj.getSize()  +  width;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj.getSize()  +  width;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj.getSize()  +  width;	  int    size    =    obj.getSize();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
98	[BUG]  [BUGGY]  int  size  =  obj.getSize()  +  1;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj.getSize()  +  1;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj.getSize()  +  1;	  int    size    =    obj.getSize();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
99	[BUG]  [BUGGY]  int  size  =  obj.getLength()  +  width;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj.getLength()  +  width;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj.getLength()  +  width;	  int    size    =    obj.getLength();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
100	[BUG]  [BUGGY]  int  size  =  obj.getLength()  +  1;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj.getLength()  +  1;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj.getLength()  +  1;	  int    size    =    obj.getLength();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
101	[BUG]  [BUGGY]  int  size  =  obj!=  null?  width  :  obj.getLength();  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj!=  null?  width  :  obj.getLength();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj!=  null?  width  :  obj.getLength();	  int    size    =    obj.getLength();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
102	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(obj.intValue,  width);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(obj.intValue,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(obj.intValue,  width);	  Integer    strLen    =    getIndex(obj.intValue);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
103	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(obj.intValue,  size);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(obj.intValue,  size);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(obj.intValue,  size);	  Integer    strLen    =    getIndex(obj.intValue);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
104	[BUG]  [BUGGY]  if(width  ==  0  ||  padChar!=  obj.getWidth())  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  ==  0  ||  padChar!=  obj.getWidth())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  ==  0  ||  padChar!=  obj.getWidth())  {	  if(width    ==    0    &&    padChar!=    obj.getWidth())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
105	[BUG]  [BUGGY]  if(size  ==  0  &&  padChar!=  obj.getWidth())  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  ==  0  &&  padChar!=  obj.getWidth())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  ==  0  &&  padChar!=  obj.getWidth())  {	  if(width    ==    0    &&    padChar!=    obj.getWidth())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
106	[BUG]  [BUGGY]  int  size  =  obj!=  null?  getNumberText()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj!=  null?  getNumberText()  :  obj.toString();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj!=  null?  getNumberText()  :  obj.toString();	  int    size    =    obj    ==    null?    getNumberText()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
107	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getSize()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getSize()  :  obj.toString();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getSize()  :  obj.toString();	  int    size    =    obj    ==    null?    getNumberText()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
108	[BUG]  [BUGGY]  int  strLen  =(width  ==  null?  getNullText()  :  obj.toString())+  padChar;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(width  ==  null?  getNullText()  :  obj.toString())+  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(width  ==  null?  getNullText()  :  obj.toString())+  padChar;	  int    strLen    =(width    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
109	[BUG]  [BUGGY]  int  strLen  =(size  ==  null?  getNullText()  :  obj.toString())+  width;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(size  ==  null?  getNullText()  :  obj.toString())+  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(size  ==  null?  getNullText()  :  obj.toString())+  width;	  int    strLen    =(width    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
110	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  size  +=  strLen;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  size  +=  strLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  size  +=  strLen;	  int    strLen    =(obj!=    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
111	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  strLen;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  strLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  strLen;	  int    strLen    =(obj!=    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
112	[BUG]  [BUGGY]  size  +=(obj  ==  null?  getNullText()  :  obj.toString());  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  size  +=(obj  ==  null?  getNullText()  :  obj.toString());  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	size  +=(obj  ==  null?  getNullText()  :  obj.toString());	  int    strLen    =(obj!=    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
113	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  padChar;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  size  +=  padChar;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    padChar;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
114	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  size  +=  padChar;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  size  +=  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getNumberText()  :  obj.toString());  size  +=  padChar;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    padChar;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
115	[BUG]  [BUGGY]  size  +=  padChar;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  size  +=  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	size  +=  padChar;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    padChar;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
116	[BUG]  [BUGGY]  int  width  =  obj!=  null?  getWidth()  :  obj.getLength();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj!=  null?  getWidth()  :  obj.getLength();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj!=  null?  getWidth()  :  obj.getLength();	  int    width    =    obj    ==    null?    getWidth()    :    obj.getLength();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
117	[BUG]  [BUGGY]  int  width  =  padChar  ==  null?  getWidth()  :  obj.getLength();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  padChar  ==  null?  getWidth()  :  obj.getLength();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  padChar  ==  null?  getWidth()  :  obj.getLength();	  int    width    =    obj    ==    null?    getWidth()    :    obj.getLength();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
118	[BUG]  [BUGGY]  size  +=  width  +  1;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  size  +=  width  +  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	size  +=  width  +  1;	  size    +=    width;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
119	[BUG]  [BUGGY]  size  +=  width  -  1;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  size  +=  width  -  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	size  +=  width  -  1;	  size    +=    width;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
120	[BUG]  [BUGGY]  int  width  =  obj  ==  null?  width  :  obj.getHeight();  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj  ==  null?  width  :  obj.getHeight();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj  ==  null?  width  :  obj.getHeight();	  int    width    =    obj    ==    null?    width    :    obj.getWidth();    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
121	[BUG]  [BUGGY]  if(size  >  0  &&  padChar!=  obj.getClass())  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  >  0  &&  padChar!=  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  >  0  &&  padChar!=  obj.getClass())  {	  if(width    >    0    &&    padChar!=    obj.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
122	[BUG]  [BUGGY]  if(width  ==  0  &&  padChar!=  obj.getClass())  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  ==  0  &&  padChar!=  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  ==  0  &&  padChar!=  obj.getClass())  {	  if(width    >    0    &&    padChar!=    obj.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
123	[BUG]  [BUGGY]  if(length  ==  0  ||  padChar  ==  null)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(length  ==  0  ||  padChar  ==  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(length  ==  0  ||  padChar  ==  null)  {	  if(width    ==    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
124	[BUG]  [BUGGY]  if(size  ==  0  ||  padChar  ==  null)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  ==  0  ||  padChar  ==  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  ==  0  ||  padChar  ==  null)  {	  if(width    ==    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
125	[BUG]  [BUGGY]  if(width  ==  0  ||  padChar!=  null)  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  ==  0  ||  padChar!=  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  ==  0  ||  padChar!=  null)  {	  if(width    ==    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
126	[BUG]  [BUGGY]  if(size  ==  0  ||  padChar!=  obj.getClass())  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  ==  0  ||  padChar!=  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  ==  0  ||  padChar!=  obj.getClass())  {	  if(width    ==    0    ||    padChar!=    obj.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
127	[BUG]  [BUGGY]  if(size  <  =  0  ||  padChar  ==  obj.getClass())  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  <  =  0  ||  padChar  ==  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  <  =  0  ||  padChar  ==  obj.getClass())  {	  if(width    <    =    0    ||    padChar    ==    obj.getClass())    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
128	[BUG]  [BUGGY]  int  width  =  padChar  ==  null?  width  :  obj.getLength();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  padChar  ==  null?  width  :  obj.getLength();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  padChar  ==  null?  width  :  obj.getLength();	  int    width    =    obj!=    null?    width    :    obj.getLength();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
129	[BUG]  [BUGGY]  Integer  width  =  getWidth()  -  padChar;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getWidth()  -  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getWidth()  -  padChar;	  Integer    width    =    getWidth()    -    width;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
130	[BUG]  [BUGGY]  Integer  width  =  getHeight()  -  width;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getHeight()  -  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getHeight()  -  width;	  Integer    width    =    getWidth()    -    width;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
131	[BUG]  [BUGGY]  if(size  >=  0  ||  padChar!=  obj.getClass())  {  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  >=  0  ||  padChar!=  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  >=  0  ||  padChar!=  obj.getClass())  {	  if(width    >=    0    ||    padChar!=    obj.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
132	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(size,  width);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(size,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(size,  width);	  Integer    strLen    =    getIndex(width,    size);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
133	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  width,  padChar);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width,  width,  padChar);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  width,  padChar);	  Integer    strLen    =    getIndex(width,    size);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
134	[BUG]  [BUGGY]  int  width  =  obj!=  null?  0  :  obj.getHeight();  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj!=  null?  0  :  obj.getHeight();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj!=  null?  0  :  obj.getHeight();	  int    width    =    obj.getHeight();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
135	[BUG]  [BUGGY]  int  width  =  obj  ==  null?  0  :  obj.getHeight();  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj  ==  null?  0  :  obj.getHeight();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj  ==  null?  0  :  obj.getHeight();	  int    width    =    obj.getHeight();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
136	[BUG]  [BUGGY]  int  size  =  width  instanceof  Number?((  Number)obj).length()  :  width;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  width  instanceof  Number?((  Number)obj).length()  :  width;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  width  instanceof  Number?((  Number)obj).length()  :  width;	  int    size    =    obj    instanceof    Number?((    Number)obj).length()    :    width;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
137	[BUG]  [BUGGY]  int  size  =  width  instanceof  Number?((  Number)obj).length()  :  0;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  width  instanceof  Number?((  Number)obj).length()  :  0;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  width  instanceof  Number?((  Number)obj).length()  :  0;	  int    size    =    obj    instanceof    Number?((    Number)obj).length()    :    width;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
138	[BUG]  [BUGGY]  int  size  =  width  instanceof  Number?((  Number)obj).length()  :  length;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  width  instanceof  Number?((  Number)obj).length()  :  length;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  width  instanceof  Number?((  Number)obj).length()  :  length;	  int    size    =    obj    instanceof    Number?((    Number)obj).length()    :    width;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
139	[BUG]  [BUGGY]  int  size  =(obj  instanceof  Number?((  Number)obj).length()  :  width);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =(obj  instanceof  Number?((  Number)obj).length()  :  width);  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =(obj  instanceof  Number?((  Number)obj).length()  :  width);	  int    size    =    obj    instanceof    Number?((    Number)obj).length()    :    width;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
140	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(obj,  width  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(obj,  width  -  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(obj,  width  -  1);	  Integer    strLen    =    getIndex(obj,    width);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
141	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(obj,  width  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(obj,  width  +  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(obj,  width  +  1);	  Integer    strLen    =    getIndex(obj,    width);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
142	[BUG]  [BUGGY]  char  width  =  obj.getWidth()  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  char  width  =  obj.getWidth()  +  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	char  width  =  obj.getWidth()  +  1;	  int    width    =    obj.getWidth()    +    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
143	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getRightText()  :  obj.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getRightText()  :  obj.toString());  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getRightText()  :  obj.toString());	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
144	[BUG]  [BUGGY]  if(size  <  0  ||  padChar  ==  null)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  <  0  ||  padChar  ==  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  <  0  ||  padChar  ==  null)  {	  if(width    <    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
145	[BUG]  [BUGGY]  int  size  =  obj.size()  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj.size()  -  1;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj.size()  -  1;	  int    size    =    obj.size();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
146	[BUG]  [BUGGY]  int  size  =  obj.size()  +  width;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj.size()  +  width;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj.size()  +  width;	  int    size    =    obj.size();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
147	[BUG]  [BUGGY]  int  size  =  obj.size()  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj.size()  +  1;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj.size()  +  1;	  int    size    =    obj.size();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
148	[BUG]  [BUGGY]  int  size  =  obj.size()  -  width;  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj.size()  -  width;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj.size()  -  width;	  int    size    =    obj.size();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
149	[BUG]  [BUGGY]  if(width  <  0  ||  padChar!=  obj.getClass())  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  0  ||  padChar!=  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  0  ||  padChar!=  obj.getClass())  {	  if(width    <    =    0    ||    padChar!=    obj.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
150	[BUG]  [BUGGY]  if(size  <  =  0  ||  padChar!=  obj.getClass())  {  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  <  =  0  ||  padChar!=  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  <  =  0  ||  padChar!=  obj.getClass())  {	  if(width    <    =    0    ||    padChar!=    obj.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
151	[BUG]  [BUGGY]  if(width  >=  0  ||  padChar!=  obj.getWidth())  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >=  0  ||  padChar!=  obj.getWidth())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >=  0  ||  padChar!=  obj.getWidth())  {	  if(width    >    0    ||    padChar!=    obj.getWidth())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
152	[BUG]  [BUGGY]  int  width  =  obj.size();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj.size();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj.size();	  int    width    =    this.size();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
153	[BUG]  [BUGGY]  int  width  =  this.size()  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  this.size()  -  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  this.size()  -  1;	  int    width    =    this.size();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
154	[BUG]  [BUGGY]  int  width  =  this.size()  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  this.size()  +  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  this.size()  +  1;	  int    width    =    this.size();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
155	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getWidth()  :  obj.getString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getWidth()  :  obj.getString();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getWidth()  :  obj.getString();	  int    size    =    obj    ==    null?    getNullText()    :    obj.getString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
156	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getSize()  :  obj.getString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getSize()  :  obj.getString();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getSize()  :  obj.getString();	  int    size    =    obj    ==    null?    getNullText()    :    obj.getString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
157	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getNumberText()  :  obj.getString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getNumberText()  :  obj.getString();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getNumberText()  :  obj.getString();	  int    size    =    obj    ==    null?    getNullText()    :    obj.getString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
158	[BUG]  [BUGGY]  if(size  >=  0  ||  padChar  ==  null)  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  >=  0  ||  padChar  ==  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  >=  0  ||  padChar  ==  null)  {	  if(width    >=    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
159	[BUG]  [BUGGY]  if(size  <  =  0  ||  padChar  ==  null)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  <  =  0  ||  padChar  ==  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  <  =  0  ||  padChar  ==  null)  {	  if(width    <    =    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
160	[BUG]  [BUGGY]  if(width  >  width)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  width)  {	  if(width    >=    width)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
161	[BUG]  [BUGGY]  if(width  ==  width)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  ==  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  ==  width)  {	  if(width    >=    width)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
162	[BUG]  [BUGGY]  if(size  >=  width)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(size  >=  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(size  >=  width)  {	  if(width    >=    width)    {    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
163	[BUG]  [BUGGY]  char  width  =  obj.getWidth();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  char  width  =  obj.getWidth();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	char  width  =  obj.getWidth();	  int    width    =    obj.getWidth()    +    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
164	[BUG]  [BUGGY]  t  width  =  obj.getWidth();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  t  width  =  obj.getWidth();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	t  width  =  obj.getWidth();	  int    width    =    obj.getWidth()    +    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
165	[BUG]  [BUGGY]  int  width  =  padChar  ==  null?  width  :  obj.getWidth();  [CE]  invalid  method  declaration;  return  type  required  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  padChar  ==  null?  width  :  obj.getWidth();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  padChar  ==  null?  width  :  obj.getWidth();	  int    width    =    obj!=    null?    width    :    obj.getWidth();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
166	[BUG]  [BUGGY]  if(width  >  0)  {  if(width  >  0)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0)  {  if(width  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0)  {  if(width  >  0)  {	  if(size    >    0)    {    if(size    >    0)    <    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
167	[BUG]  [BUGGY]  if(width  >  0)  {  if(length  >  0)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0)  {  if(length  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0)  {  if(length  >  0)  {	  if(size    >    0)    {    if(size    >    0)    <    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
168	[BUG]  [BUGGY]  if(width  >  0)  {  if(width  <  0)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0)  {  if(width  <  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0)  {  if(width  <  0)  {	  if(size    >    0)    {    if(size    >    0)    <    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
169	[BUG]  [BUGGY]  if(length  >  0)  {  if(length  >  0)  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(length  >  0)  {  if(length  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(length  >  0)  {  if(length  >  0)  {	  if(size    >    0)    {    if(size    >    0)    <    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
170	[BUG]  [BUGGY]  int  width  =  size()  /  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  size()  /  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  size()  /  1;	  int    width    =    size()    +    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
171	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getSize()  :  obj.toString());  size  +=  strLen;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getSize()  :  obj.toString());  size  +=  strLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getSize()  :  obj.toString());  size  +=  strLen;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
172	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getRightText()  :  obj.toString());  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getRightText()  :  obj.toString());  size  +=  strLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getRightText()  :  obj.toString());  size  +=  strLen;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
173	[BUG]  [BUGGY]  if(width!=  0  &&  padChar!=  obj.getWidth())  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width!=  0  &&  padChar!=  obj.getWidth())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width!=  0  &&  padChar!=  obj.getWidth())  {	  if(width    >=    0    &&    padChar!=    obj.getWidth())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
174	[BUG]  [BUGGY]  if(length  <  =  0)  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(length  <  =  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(length  <  =  0)  {	  if(size    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
175	[BUG]  [BUGGY]  if(width  >  0  ||  padChar!=  obj.getHeight())  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0  ||  padChar!=  obj.getHeight())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  ||  padChar!=  obj.getHeight())  {	  if(width    >    0    &&    padChar!=    obj.getHeight())    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
176	[BUG]  [BUGGY]  if(width  >  0  &&  padChar  ==  obj.getHeight())  {  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0  &&  padChar  ==  obj.getHeight())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  &&  padChar  ==  obj.getHeight())  {	  if(width    >    0    &&    padChar!=    obj.getHeight())    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
177	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getWidth()  :  obj.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getWidth()  :  obj.toString();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getWidth()  :  obj.toString();	  int    size    =    obj    ==    null?    getNullText()    :    obj.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
178	[BUG]  [BUGGY]  if(width  >  0)  {  size  >  0)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0)  {  size  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0)  {  size  >  0)  {	  if(size    >    0)    {    size    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
179	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(size  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(size  +  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(size  +  1);	  Integer    strLen    =    getIndex(width    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
180	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  width  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width,  width  +  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  width  +  1);	  Integer    strLen    =    getIndex(width    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
181	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  size  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width,  size  +  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  size  +  1);	  Integer    strLen    =    getIndex(width    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
182	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  size  +=  padChar;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  size  +=  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(str  ==  null?  getWidth()  :  obj.toString());  size  +=  padChar;	  int    strLen    =(str    ==    null?    getWidth()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
183	[BUG]  [BUGGY]  String  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  String  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	String  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();	  char    strLen    =(obj    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
184	[BUG]  [BUGGY]  String  strLen  =(obj!=  null)?  getNullText()  :  obj.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  String  strLen  =(obj!=  null)?  getNullText()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	String  strLen  =(obj!=  null)?  getNullText()  :  obj.toString();	  char    strLen    =(obj    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
185	[BUG]  [BUGGY]  Character  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Character  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Character  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();	  char    strLen    =(obj    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
186	[BUG]  [BUGGY]  int  size  =  obj!=  null?  getNullText()  :  obj.getClass().getName();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj!=  null?  getNullText()  :  obj.getClass().getName();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj!=  null?  getNullText()  :  obj.getClass().getName();	  int    size    =    obj    ==    null?    getNullText()    :    obj.getClass().getName();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
187	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getNumberText()  :  obj.getClass().getName();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getNumberText()  :  obj.getClass().getName();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getNumberText()  :  obj.getClass().getName();	  int    size    =    obj    ==    null?    getNullText()    :    obj.getClass().getName();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
188	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getWidth()  :  obj.getClass().getName();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getWidth()  :  obj.getClass().getName();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getWidth()  :  obj.getClass().getName();	  int    size    =    obj    ==    null?    getNullText()    :    obj.getClass().getName();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
189	[BUG]  [BUGGY]  int  size  =  width  ==  null?  getNullText()  :  obj.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  width  ==  null?  getNullText()  :  obj.toString();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  width  ==  null?  getNullText()  :  obj.toString();	  int    size    =    obj    ==    null?    getNullText()    :    width;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
190	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getWidth()  :  width;  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getWidth()  :  width;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getWidth()  :  width;	  int    size    =    obj    ==    null?    getNullText()    :    width;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
191	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getSize()  :  width;  [CE]  invalid  method  declaration;  return  type  required  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getSize()  :  width;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getSize()  :  width;	  int    size    =    obj    ==    null?    getNullText()    :    width;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
192	[BUG]  [BUGGY]  Integer  width  =  getWidth()  +  padChar;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getWidth()  +  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getWidth()  +  padChar;	  Integer    width    =    getWidth()    +    width;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
193	[BUG]  [BUGGY]  Integer  width  =  getHeight()  +  width;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getHeight()  +  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getHeight()  +  width;	  Integer    width    =    getWidth()    +    width;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
194	[BUG]  [BUGGY]  int  width  =  size;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  size;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  size;	  int    width    =    0;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
195	[BUG]  [BUGGY]  int  width  =  getWidth();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  getWidth();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  getWidth();	  int    width    =    0;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
196	[BUG]  [BUGGY]  int  width  =  0L;  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  0L;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  0L;	  int    width    =    0;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
197	[BUG]  [BUGGY]  if(width  >=  0  ||  padChar!=  null)  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >=  0  ||  padChar!=  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >=  0  ||  padChar!=  null)  {	  if(width    >    0    ||    padChar!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
198	[BUG]  [BUGGY]  if(width  >=  0  &&  padChar  ==  obj.getClass())  {  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >=  0  &&  padChar  ==  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >=  0  &&  padChar  ==  obj.getClass())  {	  if(width    >    0    &&    padChar    ==    obj.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
199	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width  /  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width  /  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width  /  1);	  Integer    strLen    =    getIndex(width    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
200	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null)?  getFixedWidthText()  :  obj.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null)?  getFixedWidthText()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null)?  getFixedWidthText()  :  obj.toString();	  int    strLen    =(obj!=    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
201	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null)?  getWidthText()  :  obj.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null)?  getWidthText()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null)?  getWidthText()  :  obj.toString();	  int    strLen    =(obj!=    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
202	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null)?  getFixedWidth()  :  obj.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null)?  getFixedWidth()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null)?  getFixedWidth()  :  obj.toString();	  int    strLen    =(obj    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
203	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  obj);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width,  obj);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  obj);	  Integer    strLen    =    getIndex(obj,    width);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
204	[BUG]  [BUGGY]  Integer  width  =  getWidth()  /  2  +  width;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getWidth()  /  2  +  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getWidth()  /  2  +  width;	  Integer    width    =    getWidth()    /    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
205	[BUG]  [BUGGY]  Integer  width  =  getWidth()  +  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getWidth()  +  2;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getWidth()  +  2;	  Integer    width    =    getWidth()    /    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
206	[BUG]  [BUGGY]  int  strLen  =(obj!=  null?  getWidth()  :  obj.toString());  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj!=  null?  getWidth()  :  obj.toString());  size  +=  strLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj!=  null?  getWidth()  :  obj.toString());  size  +=  strLen;	  int    strLen    =(str    ==    null?    getWidth()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
207	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(length);  [CE]  invalid  method  declaration;  return  type  required  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(length);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(length);	  Integer    strLen    =    getIndex(size);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
208	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.getSize();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.getSize();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getNullText()  :  obj.getSize();	  int    size    =    obj.getSize();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
209	[BUG]  [BUGGY]  int  size  =  obj!=  null?  getNullText()  :  obj.getSize();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj!=  null?  getNullText()  :  obj.getSize();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj!=  null?  getNullText()  :  obj.getSize();	  int    size    =    obj.getSize();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
210	[BUG]  [BUGGY]  int  size  =  obj!=  null?  width  :  obj.getSize();  [CE]  invalid  method  declaration;  return  type  required  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj!=  null?  width  :  obj.getSize();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj!=  null?  width  :  obj.getSize();	  int    size    =    obj.getSize();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
211	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(this.separator);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(this.separator);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(this.separator);	  Integer    strLen    =    getIndex(str);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
212	[BUG]  [BUGGY]  if(width  <  0)  {  int  size  >  0)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  0)  {  int  size  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  0)  {  int  size  >  0)  {	  if(size    >    0)    {    int    size    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
213	[BUG]  [BUGGY]  if(width  <  width)  {  int  size  >  0)  {  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  width)  {  int  size  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  width)  {  int  size  >  0)  {	  if(size    >    0)    {    int    size    >    0)    {    	non-compiled	[CE]  not  a  statement	47	None	replace
214	[BUG]  [BUGGY]  int  width  =  length;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  length;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  length;	  int    width    =    0;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
215	[BUG]  [BUGGY]  int  width  =  width()  -  1;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  width()  -  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  width()  -  1;	  int    width    =    width();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
216	[BUG]  [BUGGY]  Integer  width  =  getWidth()  +  width  -  1;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getWidth()  +  width  -  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getWidth()  +  width  -  1;	  Integer    width    =    getWidth()    +    width;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
217	[BUG]  [BUGGY]  if(width!=  width)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width!=  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width!=  width)  {	  if(width    >=    width)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
218	[BUG]  [BUGGY]  char  strLen  =(obj  ==  null)?  getWidth()  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  char  strLen  =(obj  ==  null)?  getWidth()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	char  strLen  =(obj  ==  null)?  getWidth()  :  obj.toString();	  int    strLen    =(str    ==    null)?    getWidth()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
219	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  width  +  padChar);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width,  width  +  padChar);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  width  +  padChar);	  Integer    strLen    =    getIndex(width,    width);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
220	[BUG]  [BUGGY]  size  /=  strLen;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  size  /=  strLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	size  /=  strLen;	  size    +=    strLen;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
221	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(obj.intValue  -  width);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(obj.intValue  -  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(obj.intValue  -  width);	  Integer    strLen    =    getIndex(obj.intValue);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
222	[BUG]  [BUGGY]  int  size  =  width  ==  null?  getNumberText()  :  obj.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  width  ==  null?  getNumberText()  :  obj.toString();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  width  ==  null?  getNumberText()  :  obj.toString();	  int    size    =    obj    ==    null?    getNumberText()    :    obj.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
223	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getWidthText()  :  obj.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getWidthText()  :  obj.toString();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getWidthText()  :  obj.toString();	  int    size    =    obj    ==    null?    getNumberText()    :    obj.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
224	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getFixedWidthPadRight()  :  obj.toString();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getFixedWidthPadRight()  :  obj.toString();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getFixedWidthPadRight()  :  obj.toString();	  int    size    =    obj    ==    null?    getNullText()    :    obj.toString();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
225	[BUG]  [BUGGY]  Size  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Size  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Size  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());	  Size    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    width;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
226	[BUG]  [BUGGY]  Size  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Size  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Size  strLen  =(obj  ==  null?  getWidth()  :  obj.toString());	  Size    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    width;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
227	[BUG]  [BUGGY]  if(width!=  0)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width!=  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width!=  0)  {	  if(size    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
228	[BUG]  [BUGGY]  int  strLen  =(length  ==  null?  getNullText()  :  obj.toString())+  width;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(length  ==  null?  getNullText()  :  obj.toString())+  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(length  ==  null?  getNullText()  :  obj.toString())+  width;	  int    strLen    =(width    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
229	[BUG]  [BUGGY]  if(width  >  0)  {  If(size  >  0)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0)  {  If(size  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0)  {  If(size  >  0)  {	  if(size    >    0)    {    If(size    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
230	[BUG]  [BUGGY]  int  strLen  =(obj!=  null?  getNullText()  :  obj.toString())+  width;  [CE]  invalid  method  declaration;  return  type  required  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj!=  null?  getNullText()  :  obj.toString())+  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj!=  null?  getNullText()  :  obj.toString())+  width;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString())+    width;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
231	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getFixedWidthPadRight()  :  obj.getClass().getName();  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getFixedWidthPadRight()  :  obj.getClass().getName();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getFixedWidthPadRight()  :  obj.getClass().getName();	  int    size    =    obj    ==    null?    getNullText()    :    obj.getClass().getName();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
232	[BUG]  [BUGGY]  int  width  =  obj!=  null?  obj.getWidth()  :  obj.getHeight();  [CE]  invalid  method  declaration;  return  type  required  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj!=  null?  obj.getWidth()  :  obj.getHeight();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj!=  null?  obj.getWidth()  :  obj.getHeight();	  int    width    =    obj.getHeight();    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
233	[BUG]  [BUGGY]  int  width  =  obj  ==  null?  obj.getWidth()  :  obj.getHeight();  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj  ==  null?  obj.getWidth()  :  obj.getHeight();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj  ==  null?  obj.getWidth()  :  obj.getHeight();	  int    width    =    obj.getHeight();    	non-compiled	[CE]  not  a  statement	19	None	replace
234	[BUG]  [BUGGY]  int  size  =(obj  instanceof  Number?((  Number)obj).length()  :  width;  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =(obj  instanceof  Number?((  Number)obj).length()  :  width;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =(obj  instanceof  Number?((  Number)obj).length()  :  width;	  int    size    =    obj    instanceof    Number?((    Number)obj).length()    :    width;    	non-compiled	[CE]  not  a  statement	97	None	replace
235	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getFixedWidthPadRight()  :  obj.getString();  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getFixedWidthPadRight()  :  obj.getString();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getFixedWidthPadRight()  :  obj.getString();	  int    size    =    obj    ==    null?    getNullText()    :    obj.getString();    	non-compiled	[CE]  not  a  statement	77	None	replace
236	[BUG]  [BUGGY]  if(width  >=  0  ||  padChar  ==  obj.getClass())  {  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >=  0  ||  padChar  ==  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >=  0  ||  padChar  ==  obj.getClass())  {	  if(width    ==    0    ||    padChar    ==    obj.getClass())    {    	non-compiled	[CE]  ';'  expected	1	None	replace
237	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.size();  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.size();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getNullText()  :  obj.size();	  int    size    =    obj.size();    	non-compiled	[CE]  ';'  expected	58	None	replace
238	[BUG]  [BUGGY]  int  size  =  obj!=  null?  width  :  obj.size();  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj!=  null?  width  :  obj.size();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj!=  null?  width  :  obj.size();	  int    size    =    obj.size();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
239	[BUG]  [BUGGY]  int  strLen  =(width  ==  null?  getWidth()  :  obj.toString())+  padChar;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(width  ==  null?  getWidth()  :  obj.toString())+  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(width  ==  null?  getWidth()  :  obj.toString())+  padChar;	  int    strLen    =(str    ==    null?    getWidth()    :    obj.toString())+    width;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
240	[BUG]  [BUGGY]  int  strLen  =(width  ==  null?  getWidth()  :  obj.toString())+  width;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(width  ==  null?  getWidth()  :  obj.toString())+  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(width  ==  null?  getWidth()  :  obj.toString())+  width;	  int    strLen    =(str    ==    null?    getWidth()    :    obj.toString())+    width;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
241	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize()  -  width  +  1;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  size  =  getImplicitSize()  -  width  +  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize()  -  width  +  1;	  Integer    size    =    getImplicitSize()    -    width;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
242	[BUG]  [BUGGY]  Integer  width  =  obj.getWidth();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  obj.getWidth();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  obj.getWidth();	  int    width    =    obj.getWidth()    +    2;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
243	[BUG]  [BUGGY]  Integer  size  =  getImplicitSize()  *  width  -  1;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  size  =  getImplicitSize()  *  width  -  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  size  =  getImplicitSize()  *  width  -  1;	  Integer    size    =    getImplicitSize()    *    width;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
244	[BUG]  [BUGGY]  if(width  >  0)  {  if(size  >  0)  {  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0)  {  if(size  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0)  {  if(size  >  0)  {	  if(size    >    0)    {    if(size    >    0)    <    	non-compiled	[CE]  <identifier>  expected	48	None	replace
245	[BUG]  [BUGGY]  if(width  >  0)  {  if(buffer.length  >  0)  {  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0)  {  if(buffer.length  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0)  {  if(buffer.length  >  0)  {	  if(size    >    0)    {    if(size    >    0)    <    	non-compiled	[CE]  <identifier>  expected	48	None	replace
246	[BUG]  [BUGGY]  if(width  >=  0)  {  if(obj  ==  null  ||!obj.isEmpty())  {  return;  }  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >=  0)  {  if(obj  ==  null  ||!obj.isEmpty())  {  return;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >=  0)  {  if(obj  ==  null  ||!obj.isEmpty())  {  return;  }	  if(width    >    0)    {    if(obj    ==    null    ||!obj.isEmpty())    {    return;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
247	[BUG]  [BUGGY]  if(width  >  0)  {  if(obj!=  null  ||!obj.isEmpty())  {  return;  }  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0)  {  if(obj!=  null  ||!obj.isEmpty())  {  return;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0)  {  if(obj!=  null  ||!obj.isEmpty())  {  return;  }	  if(width    >    0)    {    if(obj    ==    null    ||!obj.isEmpty())    {    return;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
248	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  padChar  +  1);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width,  padChar  +  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  padChar  +  1);	  Integer    strLen    =    getIndex(width,    padChar);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
249	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  length);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width,  length);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  length);	  Integer    strLen    =    getIndex(width,    padChar);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
250	[BUG]  [BUGGY]  if(width  >=  0  &&  padChar!=  obj.getClass())  {  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >=  0  &&  padChar!=  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >=  0  &&  padChar!=  obj.getClass())  {	  if(width    >=    0    ||    padChar!=    obj.getClass())    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
251	[BUG]  [BUGGY]  if(width  >=  0  &&  padChar  ==  null)  {  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >=  0  &&  padChar  ==  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >=  0  &&  padChar  ==  null)  {	  if(width    >    0    &&    padChar    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
252	[BUG]  [BUGGY]  Integer  strLen  =  getEndIndex(width);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getEndIndex(width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getEndIndex(width);	  Integer    strLen    =    getEndIndex(obj);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
253	[BUG]  [BUGGY]  int  width  =  this.size()  -  2;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  this.size()  -  2;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  this.size()  -  2;	  int    width    =    this.size();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
254	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width  -  2);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width  -  2);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width  -  2);	  Integer    strLen    =    getIndex(width    -    1);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
255	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width  -  1  +  1);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width  -  1  +  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width  -  1  +  1);	  Integer    strLen    =    getIndex(width    -    1);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
256	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width  -  1,  width);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width  -  1,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width  -  1,  width);	  Integer    strLen    =    getIndex(width    -    1);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
257	[BUG]  [BUGGY]  int  width  =  height();  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  height();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  height();	  int    width    =    length()    +    1;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
258	[BUG]  [BUGGY]  if(width  <  0  ||  padChar!=  obj.getWidth())  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  0  ||  padChar!=  obj.getWidth())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  0  ||  padChar!=  obj.getWidth())  {	  if(width    >    0    ||    padChar!=    obj.getWidth())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
259	[BUG]  [BUGGY]  int  size  =  width  ==  null?  getNullText()  :  width;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  width  ==  null?  getNullText()  :  width;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  width  ==  null?  getNullText()  :  width;	  int    size    =    obj    ==    null?    getNullText()    :    width;    	non-compiled	[CE]  <identifier>  expected	98	None	replace
260	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getFixedWidthPadRight()  :  width;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getFixedWidthPadRight()  :  width;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getFixedWidthPadRight()  :  width;	  int    size    =    obj    ==    null?    getNullText()    :    width;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
261	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  buffer.length);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width,  buffer.length);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  buffer.length);	  Integer    strLen    =    getIndex(width,    size);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
262	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  width  :  obj.getLength();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  width  :  obj.getLength();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  width  :  obj.getLength();	  int    size    =    obj.getLength();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
263	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.getLength();  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getNullText()  :  obj.getLength();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getNullText()  :  obj.getLength();	  int    size    =    obj.getLength();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
264	[BUG]  [BUGGY]  int  strLen  =(obj!=  null?  getNullText()  :  obj.toString())+  padChar;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj!=  null?  getNullText()  :  obj.toString())+  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj!=  null?  getNullText()  :  obj.toString())+  padChar;	  int    strLen    =(str    ==    null?    getNullText()    :    obj.toString())+    padChar;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
265	[BUG]  [BUGGY]  size  -=  width;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  size  -=  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	size  -=  width;	  size    +=    width;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
266	[BUG]  [BUGGY]  if(width  <  width  ||  padChar  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  width  ||  padChar  ==  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  width  ||  padChar  ==  null)  {	  if(width    >=    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
267	[BUG]  [BUGGY]  if(width  <  =  0  &&  padChar  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  =  0  &&  padChar  ==  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  =  0  &&  padChar  ==  null)  {	  if(width    >    0    &&    padChar    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
268	[BUG]  [BUGGY]  if(width  >  0)  {  if(obj  ==  null  ||!obj.isEmpty())return;  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0)  {  if(obj  ==  null  ||!obj.isEmpty())return;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0)  {  if(obj  ==  null  ||!obj.isEmpty())return;  }	  if(width    >    0)    {    if(obj    ==    null    ||!obj.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
269	[BUG]  [BUGGY]  if(width  <  =  0)  {  if(obj  ==  null  ||!obj.isEmpty())  {  return;  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  =  0)  {  if(obj  ==  null  ||!obj.isEmpty())  {  return;  }  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  =  0)  {  if(obj  ==  null  ||!obj.isEmpty())  {  return;  }	  if(width    >    0)    {    if(obj    ==    null    ||!obj.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
270	[BUG]  [BUGGY]  if(width  >  0  ||  padChar!=  obj.getLength())  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0  ||  padChar!=  obj.getLength())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  ||  padChar!=  obj.getLength())  {	  if(length    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
271	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  padChar)+  1;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width,  padChar)+  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  padChar)+  1;	  Integer    strLen    =    getIndex(width,    padChar);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
272	[BUG]  [BUGGY]  int  size  =  width  ==  null?  getNullText()  :  obj.getClass().getName();  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  width  ==  null?  getNullText()  :  obj.getClass().getName();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  width  ==  null?  getNullText()  :  obj.getClass().getName();	  int    size    =    obj    ==    null?    getNullText()    :    obj.getClass().getName();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
273	[BUG]  [BUGGY]  if(width  <  width)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  width)  {	  if(size    >    0)    {    if(size    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
274	[BUG]  [BUGGY]  if(width  <  =  0)  {  if(size  >  0)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  =  0)  {  if(size  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  =  0)  {  if(size  >  0)  {	  if(size    >    0)    {    if(size    >    0)    <    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
275	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width,  2);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width,  2);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width,  2);	  Integer    strLen    =    getIndex(width,    0);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
276	[BUG]  [BUGGY]  if(width  <  width  ||  padChar  ==  obj.getClass())  {  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  width  ||  padChar  ==  obj.getClass())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  width  ||  padChar  ==  obj.getClass())  {	  if(width    ==    0    ||    padChar    ==    obj.getClass())    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
277	[BUG]  [BUGGY]  Integer  width  =  getHeight()  /  2;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getHeight()  /  2;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getHeight()  /  2;	  Integer    width    =    getWidth()    /    2;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
278	[BUG]  [BUGGY]  Integer  width  =  getLength()  -  padChar;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  width  =  getLength()  -  padChar;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  width  =  getLength()  -  padChar;	  Integer    width    =    getWidth()    -    width;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
279	[BUG]  [BUGGY]  int  width  =  padChar!=  null?  width  :  obj.getWidth();  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  padChar!=  null?  width  :  obj.getWidth();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  padChar!=  null?  width  :  obj.getWidth();	  int    width    =    obj!=    null?    width    :    obj.getWidth();    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
280	[BUG]  [BUGGY]  int  size  =  width  instanceof  Number?((  Number)obj).length()  :  obj;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  width  instanceof  Number?((  Number)obj).length()  :  obj;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  width  instanceof  Number?((  Number)obj).length()  :  obj;	  int    size    =    obj    instanceof    Number?((    Number)obj).length()    :    width;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
281	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getImmediateParentPointer()  :  obj.toString();  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getImmediateParentPointer()  :  obj.toString();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getImmediateParentPointer()  :  obj.toString();	  int    size    =    obj    ==    null?    getNullText()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
282	[BUG]  [BUGGY]  Integer  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();	  int    strLen    =(obj!=    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
283	[BUG]  [BUGGY]  Char  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Char  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Char  strLen  =(obj  ==  null)?  getNullText()  :  obj.toString();	  char    strLen    =(obj    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
284	[BUG]  [BUGGY]  int  width  =  width  -  1;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  width  -  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  width  -  1;	  int    width    =    width();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
285	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getFixedWidth()  :  obj.toString());  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getFixedWidth()  :  obj.toString());  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getFixedWidth()  :  obj.toString());	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
286	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getImmediateParentPointer()  :  obj.toString());  size  +=  strLen;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getImmediateParentPointer()  :  obj.toString());  size  +=  strLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getImmediateParentPointer()  :  obj.toString());  size  +=  strLen;	  int    strLen    =(obj    ==    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
287	[BUG]  [BUGGY]  if(width  <  0  ||  padChar  ==  'n')  {  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  0  ||  padChar  ==  'n')  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  0  ||  padChar  ==  'n')  {	  if(width    <    0)    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
288	[BUG]  [BUGGY]  int  width  =  this.length;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  this.length;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  this.length;	  int    width    =    this.length();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
289	[BUG]  [BUGGY]  Integer  strLen  =  getEndIndex(str);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getEndIndex(str);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getEndIndex(str);	  Integer    strLen    =    getEndIndex(obj);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
290	[BUG]  [BUGGY]  int  width  =  padChar!=  null?  getWidth()  :  obj.getWidth();  [CE]  generics  are  not  supported  in  -source  1.3  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  padChar!=  null?  getWidth()  :  obj.getWidth();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  padChar!=  null?  getWidth()  :  obj.getWidth();	  int    width    =    obj!=    null?    getWidth()    :    obj.getWidth();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	69	None	replace
291	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(strLen  -  width);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(strLen  -  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(strLen  -  width);	  Integer    strLen    =    getIndex(strLen);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
292	[BUG]  [BUGGY]  if(width  <  =  0  ||  padChar!=  null)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  =  0  ||  padChar!=  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  =  0  ||  padChar!=  null)  {	  if(width    <    =    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
293	[BUG]  [BUGGY]  int  size  =  padChar  ==  null?  getNullText()  :  width;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  padChar  ==  null?  getNullText()  :  width;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  padChar  ==  null?  getNullText()  :  width;	  int    size    =    obj    ==    null?    getNullText()    :    width;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
294	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(str,  width);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(str,  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(str,  width);	  Integer    strLen    =    getIndex(str);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
295	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(str.length);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(str.length);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(str.length);	  Integer    strLen    =    getIndex(str);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
296	[BUG]  [BUGGY]  if(width  >=  width)  {  If(width  >  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >=  width)  {  If(width  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >=  width)  {  If(width  >  0)  {	  if(size    >    0)    {    If(size    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
297	[BUG]  [BUGGY]  if(width  <  width)  {  If(width  >  0)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  width)  {  If(width  >  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  width)  {  If(width  >  0)  {	  if(size    >    0)    {    If(size    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
298	[BUG]  [BUGGY]  int  strLen  =(str  ==  null)?  getWidth()  :  padChar.toString();  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(str  ==  null)?  getWidth()  :  padChar.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(str  ==  null)?  getWidth()  :  padChar.toString();	  int    strLen    =(str    ==    null)?    getWidth()    :    obj.toString();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
299	[BUG]  [BUGGY]  int  size  =  obj.getWidth();  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj.getWidth();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj.getWidth();	  int    size    =    obj.getLength();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
300	[BUG]  [BUGGY]  if(width  <  0  ||  padChar!=  null)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  0  ||  padChar!=  null)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  0  ||  padChar!=  null)  {	  if(width    <    0    ||    padChar    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
301	[BUG]  [BUGGY]  if(width  >=  width  &&  padChar!=  obj.getWidth())  {  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >=  width  &&  padChar!=  obj.getWidth())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >=  width  &&  padChar!=  obj.getWidth())  {	  if(width    >=    0    &&    padChar!=    obj.getWidth())    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
302	[BUG]  [BUGGY]  if(width  <  =  0  &&  padChar!=  obj.getWidth())  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  =  0  &&  padChar!=  obj.getWidth())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  =  0  &&  padChar!=  obj.getWidth())  {	  if(width    >=    0    &&    padChar!=    obj.getWidth())    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
303	[BUG]  [BUGGY]  if(width  <  =  width)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  =  width)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  =  width)  {	  if(width    >=    width)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
304	[BUG]  [BUGGY]  int  width  =  this.str.size();  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  this.str.size();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  this.str.size();	  int    width    =    this.size();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
305	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width  -  width  +  1);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width  -  width  +  1);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width  -  width  +  1);	  Integer    strLen    =    getIndex(width    +    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
306	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(width  -  width);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(width  -  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(width  -  width);	  Integer    strLen    =    getIndex(width    +    1);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
307	[BUG]  [BUGGY]  if(width  <  =  0  ||  padChar!=  obj.getWidth())  {  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  <  =  0  ||  padChar!=  obj.getWidth())  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  <  =  0  ||  padChar!=  obj.getWidth())  {	  if(width    ==    0    &&    padChar!=    obj.getWidth())    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
308	[BUG]  [BUGGY]  int  width  =  padChar!=  null?  obj.getLength()  :  width;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  padChar!=  null?  obj.getLength()  :  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  padChar!=  null?  obj.getLength()  :  width;	  int    width    =    obj!=    null?    obj.getLength()    :    width;    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
309	[BUG]  [BUGGY]  int  size  =  obj!=  null?  getNullText()  :  obj.getString();  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj!=  null?  getNullText()  :  obj.getString();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj!=  null?  getNullText()  :  obj.getString();	  int    size    =    obj    ==    null?    getNullText()    :    obj.getString();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
310	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  getImmediateParentPointer()  :  obj.getString();  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  getImmediateParentPointer()  :  obj.getString();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  getImmediateParentPointer()  :  obj.getString();	  int    size    =    obj    ==    null?    getNullText()    :    obj.getString();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
311	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  width  :  obj.getSize();  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  width  :  obj.getSize();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  width  :  obj.getSize();	  int    size    =    obj.getSize();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
312	[BUG]  [BUGGY]  int  size  =  obj!=  null?  obj.getSize()  :  width;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj!=  null?  obj.getSize()  :  width;  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj!=  null?  obj.getSize()  :  width;	  int    size    =    obj.getSize();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
313	[BUG]  [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  padChar.toString());  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(str  ==  null?  getWidth()  :  padChar.toString());  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(str  ==  null?  getWidth()  :  padChar.toString());	  int    strLen    =(str    ==    null?    getWidth()    :    obj.toString());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
314	[BUG]  [BUGGY]  int  width  =  padChar!=  null?  width  :  obj.getLength();  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  padChar!=  null?  width  :  obj.getLength();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  padChar!=  null?  width  :  obj.getLength();	  int    width    =    obj!=    null?    width    :    obj.getLength();    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
315	[BUG]  [BUGGY]  if(width  >  0  ||  buffer.charAt(width  -  1)!=  padChar)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0  ||  buffer.charAt(width  -  1)!=  padChar)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  ||  buffer.charAt(width  -  1)!=  padChar)  {	  if(width    >    0    ||    padChar!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
316	[BUG]  [BUGGY]  if(width  >  0  ||  buffer.length  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  if(width  >  0  ||  buffer.length  ==  0)  {  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	if(width  >  0  ||  buffer.length  ==  0)  {	  if(width    >    0    ||    padChar!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
317	[BUG]  [BUGGY]  int  width  =  obj!=  null?  obj.getHeight()  :  width;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  obj!=  null?  obj.getHeight()  :  width;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  obj!=  null?  obj.getHeight()  :  width;	  int    width    =    obj.getHeight();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
318	[BUG]  [BUGGY]  int  size  =  obj  ==  null?  width  :  obj.size();  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  size  =  obj  ==  null?  width  :  obj.size();  [BUGGY]      ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  size  =  obj  ==  null?  width  :  obj.size();	  int    size    =    obj.size();    	non-compiled	[CE]  ';'  expected	58	None	replace
319	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null)?  getImmediateParentPointer()  :  obj.toString();  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null)?  getImmediateParentPointer()  :  obj.toString();  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null)?  getImmediateParentPointer()  :  obj.toString();	  int    strLen    =(obj    ==    null)?    getNullText()    :    obj.toString();    	non-compiled	[CE]  ';'  expected	52	None	replace
320	[BUG]  [BUGGY]  Integer  strLen  =  getIndex(obj.intValue()  +  width);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  Integer  strLen  =  getIndex(obj.intValue()  +  width);  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	Integer  strLen  =  getIndex(obj.intValue()  +  width);	  Integer    strLen    =    getIndex(obj.intValue());    	non-compiled	[CE]  ';'  expected	11	None	replace
321	[BUG]  [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  padLen;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  padLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  strLen  =(obj  ==  null?  getNullText()  :  obj.toString());  size  +=  padLen;	  int    strLen    =(obj!=    null?    getNullText()    :    obj.toString());    size    +=    strLen;    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
322	[BUG]  [BUGGY]  width  +=  strLen;  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  width  +=  strLen;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	width  +=  strLen;	  size    +=    strLen;    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	7	None	replace
323	[BUG]  [BUGGY]  int  width  =  size  -  1;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  StrBuilder  appendFixedWidthPadRight(Object  obj,  int  width,  char  padChar)  {      [BUGGY]  int  width  =  size  -  1;  [BUGGY]      if  (width  >  0)  {  ensureCapacity(size  +  width);  String  str  =  (obj  ==  null  ?  getNullText()  :  obj.toString());  int  strLen  =  str.length();  if  (strLen  >=  width)  {  str.getChars(0,  strLen,  buffer,  size);  }  else  {  int  padLen  =  width  -  strLen;  str.getChars(0,  strLen,  buffer,  size);  for  (int  i  =  0;  i  <  padLen;  i++)  {  buffer[size  +  strLen  +  i]  =  padChar;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  appendFixedWidthPadRight  [RETURN_TYPE]  StrBuilder  Object  obj  int  width  char  padChar  [VARIABLES]  boolean  char  padChar  Object  obj  String  newLine  nullText  separator  str  int  CAPACITY  capacity  destinationIndex  endIndex  i  index  initialCapacity  len  length  mark  newEnd  oldEnd  padLen  pos  size  startIndex  strLen  value  width  long  serialVersionUID  value  char[]  buffer  chars  destination  old  	projects/Lang59/src/java/org/apache/commons/lang/text/StrBuilder.java	0.5773502691896258	879	879	1	replace	int  width  =  size  -  1;	  int    width    =    length()    -    1;    	non-compiled	[CE]  ';'  expected	84	None	replace
