bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char[]  buf  =(char[])str.get(buffer,  startIndex  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])str.get(buffer,  startIndex  +  1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])str.get(buffer,  startIndex  +  1);	  char[]    buf    =(char[])str.get(buffer,    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  char[]  buf  =(char[])str.get(startIndex,  buffer);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])str.get(startIndex,  buffer);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])str.get(startIndex,  buffer);	  char[]    buf    =(char[])str.get(buffer,    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(buffer,  startIndex);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])thisBuf.get(buffer,  startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])thisBuf.get(buffer,  startIndex);	  char[]    buf    =(char[])str.get(buffer,    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  char[]  buf  =(char[])str.get(buffer,  startIndex,  size);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])str.get(buffer,  startIndex,  size);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])str.get(buffer,  startIndex,  size);	  char[]    buf    =(char[])str.get(buffer,    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  Integer  strLen  =  str.length()  -  startIndex  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  Integer  strLen  =  str.length()  -  startIndex  +  1;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	Integer  strLen  =  str.length()  -  startIndex  +  1;	  Integer    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
6	[BUG]  [BUGGY]  Integer  strLen  =  str.length()  -  size;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  Integer  strLen  =  str.length()  -  size;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	Integer  strLen  =  str.length()  -  size;	  Integer    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
7	[BUG]  [BUGGY]  Integer  strLen  =  str.length()  *  startIndex;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  Integer  strLen  =  str.length()  *  startIndex;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	Integer  strLen  =  str.length()  *  startIndex;	  Integer    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
8	[BUG]  [BUGGY]  int  size  =  strLen.length();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  size  =  strLen.length();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  size  =  strLen.length();	  int    size    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
9	[BUG]  [BUGGY]  int  size  =  this.str.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  size  =  this.str.length()  -  1;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  size  =  this.str.length()  -  1;	  int    size    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
10	[BUG]  [BUGGY]  char  size  =  this.str.length();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char  size  =  this.str.length();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char  size  =  this.str.length();	  int    size    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
11	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[strLen  *  2];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  new  char[strLen  *  2];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  new  char[strLen  *  2];	  char[]    thisBuf    =    new    char[strLen    *    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
12	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[size  *  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  new  char[size  *  1];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  new  char[size  *  1];	  char[]    thisBuf    =    new    char[strLen    *    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
13	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[strLen  *  4];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  new  char[strLen  *  4];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  new  char[strLen  *  4];	  char[]    thisBuf    =    new    char[strLen    *    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
14	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[strLen  *  3];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  new  char[strLen  *  3];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  new  char[strLen  *  3];	  char[]    thisBuf    =    new    char[strLen    *    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
15	[BUG]  [BUGGY]  char[]  thisBuf  =  str.toCharArray(strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  str.toCharArray(strLen  +  1);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  str.toCharArray(strLen  +  1);	  char[]    thisBuf    =    buffer.toCharArray(strLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  char[]  thisBuf  =  buf.toCharArray(strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buf.toCharArray(strLen  +  1);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buf.toCharArray(strLen  +  1);	  char[]    thisBuf    =    buffer.toCharArray(strLen    +    1);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  int  len  =  str.length()  -  startIndex  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  len  =  str.length()  -  startIndex  +  1;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  len  =  str.length()  -  startIndex  +  1;	  int    len    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
18	[BUG]  [BUGGY]  int  len  =  str.length()  /  startIndex;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  len  =  str.length()  /  startIndex;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  len  =  str.length()  /  startIndex;	  int    len    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
19	[BUG]  [BUGGY]  char[]  buffer  =  getChars(startIndex,  size);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getChars(startIndex,  size);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getChars(startIndex,  size);	  char[]    buffer    =    getChars(startIndex,    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
20	[BUG]  [BUGGY]  char[]  buffer  =  getChars(startIndex,  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getChars(startIndex,  1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getChars(startIndex,  1);	  char[]    buffer    =    getChars(startIndex,    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
21	[BUG]  [BUGGY]  char[]  buffer  =  getChars(startIndex  +  1,  startIndex);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getChars(startIndex  +  1,  startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getChars(startIndex  +  1,  startIndex);	  char[]    buffer    =    getChars(startIndex,    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
22	[BUG]  [BUGGY]  char[]  buf  =  thisBuf.toCharArray();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  thisBuf.toCharArray();  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  thisBuf.toCharArray();	  char[]    buf    =    thisBuf;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
23	[BUG]  [BUGGY]  char[]  buf  =  thisBuf  =  new  char[strLen];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  thisBuf  =  new  char[strLen];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  thisBuf  =  new  char[strLen];	  char[]    buf    =    thisBuf;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
24	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex  +  1,  strLen);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex  +  1,  strLen);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex  +  1,  strLen);	  char[]    thisBuf    =    buffer.toCharArray(startIndex    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
25	[BUG]  [BUGGY]  char[]  buffer  =  getBuffer().toCharArray(startIndex);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getBuffer().toCharArray(startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getBuffer().toCharArray(startIndex);	  char[]    buffer    =    getBuffer().toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
26	[BUG]  [BUGGY]  char[]  buffer  =  getBuffer().toCharArray(strLen);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getBuffer().toCharArray(strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getBuffer().toCharArray(strLen);	  char[]    buffer    =    getBuffer().toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
27	[BUG]  [BUGGY]  char[]  buffer  =  getBuffer().getChars(startIndex,  strLen);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getBuffer().getChars(startIndex,  strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getBuffer().getChars(startIndex,  strLen);	  char[]    buffer    =    getBuffer().toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
28	[BUG]  [BUGGY]  char[]  buf  =  new  char[size  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  new  char[size  +  1];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  new  char[size  +  1];	  char[]    buf    =    new    char[strLen    +    1];    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
29	[BUG]  [BUGGY]  char[]  buf  =  new  char[strLen  +  2];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  new  char[strLen  +  2];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  new  char[strLen  +  2];	  char[]    buf    =    new    char[strLen    +    1];    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
30	[BUG]  [BUGGY]  char[]  buf  =  new  char[strLen  *  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  new  char[strLen  *  1];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  new  char[strLen  *  1];	  char[]    buf    =    new    char[strLen    +    1];    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
31	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.toArray(new  char[strLen]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.toArray(new  char[strLen]);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.toArray(new  char[strLen]);	  char[]    buf    =(char[])this.buffer.clone();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
32	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(strIndex);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])thisBuf.get(strIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])thisBuf.get(strIndex);	  char[]    buf    =(char[])buffer.get(strIndex);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
33	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.get(strLen);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])buffer.get(strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])buffer.get(strLen);	  char[]    buf    =(char[])buffer.get(strIndex);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
34	[BUG]  [BUGGY]  char[]  buf  =  new  char[size];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  new  char[size];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  new  char[size];	  char[]    buf    =    new    char[strLen];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
35	[BUG]  [BUGGY]  char[]  buf  =  new  char[strLen  *  size];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  new  char[strLen  *  size];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  new  char[strLen  *  size];	  char[]    buf    =    new    char[strLen];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
36	[BUG]  [BUGGY]  char[]  buf  =  new  char[strLen  *  2];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  new  char[strLen  *  2];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  new  char[strLen  *  2];	  char[]    buf    =    new    char[strLen];    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
37	[BUG]  [BUGGY]  int  len  =  strLen  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  len  =  strLen  -  1;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  len  =  strLen  -  1;	  int    len    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
38	[BUG]  [BUGGY]  char  len  =  str.length();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char  len  =  str.length();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char  len  =  str.length();	  int    len    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
39	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[buffer.length  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  new  char[buffer.length  +  1];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  new  char[buffer.length  +  1];	  char[]    thisBuf    =    new    char[size    +    1];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
40	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[size  +  strLen];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  new  char[size  +  strLen];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  new  char[size  +  strLen];	  char[]    thisBuf    =    new    char[size];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
41	[BUG]  [BUGGY]  char[]  buffer  =  getChars(startIndex,  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getChars(startIndex,  strLen  +  1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getChars(startIndex,  strLen  +  1);	  char[]    buffer    =    getChars(startIndex,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
42	[BUG]  [BUGGY]  char[]  buffer  =  getChars(startIndex,  endIndex);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getChars(startIndex,  endIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getChars(startIndex,  endIndex);	  char[]    buffer    =    getChars(startIndex,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
43	[BUG]  [BUGGY]  char[]  buffer  =  getChars(startIndex,  length);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getChars(startIndex,  length);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getChars(startIndex,  length);	  char[]    buffer    =    getChars(startIndex,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
44	[BUG]  [BUGGY]  char[]  buf  =(char[])str.getKey();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])str.getKey();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])str.getKey();	  char[]    buf    =(char[])str.getValue();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
45	[BUG]  [BUGGY]  char[]  buf  =(char[])str.getData();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])str.getData();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])str.getData();	  char[]    buf    =(char[])str.getValue();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
46	[BUG]  [BUGGY]  Integer  strLen  =  this.str.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  Integer  strLen  =  this.str.length()  -  1;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	Integer  strLen  =  this.str.length()  -  1;	  Integer    strLen    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
47	[BUG]  [BUGGY]  Integer  strLen  =  this.str.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  Integer  strLen  =  this.str.length()  +  1;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	Integer  strLen  =  this.str.length()  +  1;	  Integer    strLen    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
48	[BUG]  [BUGGY]  int  size  =  strLen  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  size  =  strLen  -  1;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  size  =  strLen  -  1;	  int    size    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
49	[BUG]  [BUGGY]  char  size  =  str.length();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char  size  =  str.length();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char  size  =  str.length();	  int    size    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
50	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(strLen);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])thisBuf.get(strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])thisBuf.get(strLen);	  char[]    buf    =(char[])thisBuf.get(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(startIndex  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])thisBuf.get(startIndex  +  1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])thisBuf.get(startIndex  +  1);	  char[]    buf    =(char[])thisBuf.get(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(startIndex  +  strLen);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])thisBuf.get(startIndex  +  strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])thisBuf.get(startIndex  +  strLen);	  char[]    buf    =(char[])thisBuf.get(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
53	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(buffer);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])thisBuf.get(buffer);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])thisBuf.get(buffer);	  char[]    buf    =(char[])str.get(buffer);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
54	[BUG]  [BUGGY]  Integer  strLen  =  size  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  Integer  strLen  =  size  -  1;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	Integer  strLen  =  size  -  1;	  Integer    strLen    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
55	[BUG]  [BUGGY]  char[]  buf  =(char[])str.getChars(startIndex,  strLen);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])str.getChars(startIndex,  strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])str.getChars(startIndex,  strLen);	  char[]    buf    =(char[])str.getChars(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
56	[BUG]  [BUGGY]  char[]  buf  =(char[])str.getChars(startIndex  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])str.getChars(startIndex  +  1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])str.getChars(startIndex  +  1);	  char[]    buf    =(char[])str.getChars(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
57	[BUG]  [BUGGY]  char[]  buf  =(char[])str.getChars(startIndex,  size);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])str.getChars(startIndex,  size);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])str.getChars(startIndex,  size);	  char[]    buf    =(char[])str.getChars(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
58	[BUG]  [BUGGY]  char[]  buf  =(char[])str.getChars(startIndex,  startIndex);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])str.getChars(startIndex,  startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])str.getChars(startIndex,  startIndex);	  char[]    buf    =(char[])str.getChars(startIndex);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	37	None	replace
59	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.get(startIndex  +  1);  [CE]  generics  are  not  supported  in  -source  1.3  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])buffer.get(startIndex  +  1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])buffer.get(startIndex  +  1);	  char[]    buf    =(char[])buffer.get(startIndex);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.3	41	None	replace
60	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(strLen  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.get(strLen  -  1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.get(strLen  -  1);	  char[]    buf    =(char[])this.buffer.get(startIndex    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
61	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex  -  1  +  strLen);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex  -  1  +  strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.get(startIndex  -  1  +  strLen);	  char[]    buf    =(char[])this.buffer.get(startIndex    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
62	[BUG]  [BUGGY]  int  strLen  =  this.str.length()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  strLen  =  this.str.length()  -  1;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  strLen  =  this.str.length()  -  1;	  int    strLen    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
63	[BUG]  [BUGGY]  int  strLen  =  this.str.length()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  strLen  =  this.str.length()  +  1;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  strLen  =  this.str.length()  +  1;	  int    strLen    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
64	[BUG]  [BUGGY]  int  strLen  =  this.separator.length();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  strLen  =  this.separator.length();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  strLen  =  this.separator.length();	  int    strLen    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
65	[BUG]  [BUGGY]  char  strLen  =  str.length();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char  strLen  =  str.length();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char  strLen  =  str.length();	  int    strLen    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
66	[BUG]  [BUGGY]  char[]  buf  =  buffer.clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  buffer.clone();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  buffer.clone();	  char[]    buf    =(char[])buffer.clone();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
67	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex  +  strLen,  size);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex  +  strLen,  size);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex  +  strLen,  size);	  char[]    thisBuf    =    buffer.toCharArray(startIndex    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
68	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex  +  strLen,  length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex  +  strLen,  length);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex  +  strLen,  length);	  char[]    thisBuf    =    buffer.toCharArray(startIndex    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
69	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex  +  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex  +  strLen  +  1);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex  +  strLen  +  1);	  char[]    thisBuf    =    buffer.toCharArray(startIndex    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
70	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(strLen,  startIndex);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(strLen,  startIndex);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(strLen,  startIndex);	  char[]    thisBuf    =    buffer.toCharArray(startIndex,    size);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
71	[BUG]  [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex,  size);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex,  size);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  str.toCharArray(startIndex,  size);	  char[]    thisBuf    =    buffer.toCharArray(startIndex,    size);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
72	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(strLen,  size);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(strLen,  size);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(strLen,  size);	  char[]    thisBuf    =    buffer.toCharArray(startIndex,    size);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
73	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[size  *  strLen];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  new  char[size  *  strLen];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  new  char[size  *  strLen];	  char[]    thisBuf    =    new    char[strLen    *    strLen];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
74	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[buffer.length  *  strLen];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  new  char[buffer.length  *  strLen];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  new  char[buffer.length  *  strLen];	  char[]    thisBuf    =    new    char[strLen    *    strLen];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
75	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[strLen  *  length];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  new  char[strLen  *  length];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  new  char[strLen  *  length];	  char[]    thisBuf    =    new    char[strLen    *    strLen];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
76	[BUG]  [BUGGY]  char[]  thisBuf  =  buf.toCharArray(startIndex);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buf.toCharArray(startIndex);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buf.toCharArray(startIndex);	  char[]    thisBuf    =    buf.toCharArray(strLen);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
77	[BUG]  [BUGGY]  char[]  buf  =(char[])strLen.toCharArray();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])strLen.toCharArray();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])strLen.toCharArray();	  char[]    buf    =(char[])strLen.clone();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
78	[BUG]  [BUGGY]  char[]  strBuf  =  new  char[strLen  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  strBuf  =  new  char[strLen  +  1];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  strBuf  =  new  char[strLen  +  1];	  char[]    strBuf    =    new    char[strLen];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
79	[BUG]  [BUGGY]  char[]  strBuf  =  new  char[size];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  strBuf  =  new  char[size];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  strBuf  =  new  char[size];	  char[]    strBuf    =    new    char[strLen];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
80	[BUG]  [BUGGY]  char[]  strBuf  =  new  char[strLen  *  2];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  strBuf  =  new  char[strLen  *  2];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  strBuf  =  new  char[strLen  *  2];	  char[]    strBuf    =    new    char[strLen];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
81	[BUG]  [BUGGY]  char[]  strBuf  =  new  char[strLen  *  size];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  strBuf  =  new  char[strLen  *  size];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  strBuf  =  new  char[strLen  *  size];	  char[]    strBuf    =    new    char[strLen];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
82	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.getChars(startIndex);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.getChars(startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.getChars(startIndex);	  char[]    buf    =(char[])this.buffer.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
83	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.getChars(startIndex,  strLen);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.getChars(startIndex,  strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.getChars(startIndex,  strLen);	  char[]    buf    =(char[])this.buffer.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
84	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.getChars(startIndex,  startIndex);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.getChars(startIndex,  startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.getChars(startIndex,  startIndex);	  char[]    buf    =(char[])this.buffer.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
85	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.get(strLen  +  1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.get(strLen  +  1);	  char[]    buf    =(char[])this.buffer.get(startIndex    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
86	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex  +  1,  strLen);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex  +  1,  strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.get(startIndex  +  1,  strLen);	  char[]    buf    =(char[])this.buffer.get(startIndex    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
87	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex  +  2);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.get(startIndex  +  2);	  char[]    buf    =(char[])this.buffer.get(startIndex    +    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
88	[BUG]  [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex  +  1);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  str.toCharArray(startIndex  +  1);	  char[]    thisBuf    =    str.toCharArray(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
89	[BUG]  [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex,  strLen);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex,  strLen);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  str.toCharArray(startIndex,  strLen);	  char[]    thisBuf    =    str.toCharArray(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
90	[BUG]  [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex,  startIndex);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex,  startIndex);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  str.toCharArray(startIndex,  startIndex);	  char[]    thisBuf    =    str.toCharArray(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
91	[BUG]  [BUGGY]  int  size  =  str.length()  -  startIndex  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  size  =  str.length()  -  startIndex  +  1;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  size  =  str.length()  -  startIndex  +  1;	  int    size    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
92	[BUG]  [BUGGY]  int  size  =  str.length()  /  startIndex;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  size  =  str.length()  /  startIndex;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  size  =  str.length()  /  startIndex;	  int    size    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
93	[BUG]  [BUGGY]  int  size  =  str.length()  -  strLen;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  size  =  str.length()  -  strLen;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  size  =  str.length()  -  strLen;	  int    size    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
94	[BUG]  [BUGGY]  int  size  =  strLen  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  size  =  strLen  +  1;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  size  =  strLen  +  1;	  int    size    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
95	[BUG]  [BUGGY]  int  len  =  strLen  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  len  =  strLen  +  1;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  len  =  strLen  +  1;	  int    len    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
96	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex,  strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex,  strLen  +  1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.get(startIndex,  strLen  +  1);	  char[]    buf    =(char[])this.buffer.get(startIndex,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
97	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(strLen,  startIndex);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.get(strLen,  startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.get(strLen,  startIndex);	  char[]    buf    =(char[])this.buffer.get(startIndex,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
98	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex,  size);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex,  size);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.get(startIndex,  size);	  char[]    buf    =(char[])this.buffer.get(startIndex,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
99	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.toCharArray();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])thisBuf.toCharArray();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])thisBuf.toCharArray();	  char[]    buf    =(char[])buffer.toCharArray();    	non-compiled	[CE]  ')'  expected	52	None	replace
100	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  strLen  +  1);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  strLen  +  1);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex,  strLen  +  1);	  char[]    thisBuf    =    buffer.toCharArray(startIndex,    strLen);    	non-compiled	[CE]  ')'  expected	18	None	replace
101	[BUG]  [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex,  bufferLen);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex,  bufferLen);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  str.toCharArray(startIndex,  bufferLen);	  char[]    thisBuf    =    buffer.toCharArray(startIndex,    strLen);    	non-compiled	[CE]  ')'  expected	18	None	replace
102	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  startIndex);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  startIndex);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex,  startIndex);	  char[]    thisBuf    =    buffer.toCharArray(startIndex,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
103	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  buffer);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  buffer);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex,  buffer);	  char[]    thisBuf    =    buffer.toCharArray(buffer,    startIndex);    	non-compiled	[CE]  ')'  expected	46	None	replace
104	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  buffer.length);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  buffer.length);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex,  buffer.length);	  char[]    thisBuf    =    buffer.toCharArray(buffer,    startIndex);    	non-compiled	[CE]  ')'  expected	46	None	replace
105	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  startIndex  +  1;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  strLen  =  str.length()  -  startIndex  +  1;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  strLen  =  str.length()  -  startIndex  +  1;	  int    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  ')'  expected	23	None	replace
106	[BUG]  [BUGGY]  int  strLen  =  str.length()  +  startIndex;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  strLen  =  str.length()  +  startIndex;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  strLen  =  str.length()  +  startIndex;	  int    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  ')'  expected	23	None	replace
107	[BUG]  [BUGGY]  char[]  buf  =  this.separator.toCharArray();  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  this.separator.toCharArray();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  this.separator.toCharArray();	  char[]    buf    =    this.str.toCharArray();    	non-compiled	[CE]  ')'  expected	58	None	replace
108	[BUG]  [BUGGY]  char[]  buf  =  this.str.getBuffer();  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  this.str.getBuffer();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  this.str.getBuffer();	  char[]    buf    =    this.str.toCharArray();    	non-compiled	[CE]  ')'  expected	58	None	replace
109	[BUG]  [BUGGY]  char[]  buf  =(char[])str.get(startIndex  +  2);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])str.get(startIndex  +  2);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])str.get(startIndex  +  2);	  char[]    buf    =(char[])str.get(startIndex    +    1);    	non-compiled	[CE]  ')'  expected	3	None	replace
110	[BUG]  [BUGGY]  char[]  buf  =(char[])str.get(startIndex  +  1,  strLen);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])str.get(startIndex  +  1,  strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])str.get(startIndex  +  1,  strLen);	  char[]    buf    =(char[])str.get(startIndex    +    1);    	non-compiled	[CE]  ')'  expected	3	None	replace
111	[BUG]  [BUGGY]  char[]  thisBuf  =  BufferUtil.toCharArray(buf);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  BufferUtil.toCharArray(buf);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  BufferUtil.toCharArray(buf);	  char[]    thisBuf    =    buf.toCharArray();    	non-compiled	[CE]  ')'  expected	11	None	replace
112	[BUG]  [BUGGY]  char[]  thisBuf  =  BufferUtil.toCharArray(buf,  startIndex);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  BufferUtil.toCharArray(buf,  startIndex);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  BufferUtil.toCharArray(buf,  startIndex);	  char[]    thisBuf    =    buf.toCharArray();    	non-compiled	[CE]  ')'  expected	11	None	replace
113	[BUG]  [BUGGY]  char[]  buf  =  getBuffer();  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  getBuffer();  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  getBuffer();	  char[]    buf    =    buffer;    	non-compiled	[CE]  ')'  expected	60	None	replace
114	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[strLen  *  size  +  1];  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  new  char[strLen  *  size  +  1];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  new  char[strLen  *  size  +  1];	  char[]    thisBuf    =    new    char[strLen    *    size];    	non-compiled	[CE]  ')'  expected	49	None	replace
115	[BUG]  [BUGGY]  char[]  buf  =  buffer.toCharArray(strLen);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  buffer.toCharArray(strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  buffer.toCharArray(strLen);	  char[]    buf    =    buffer.toCharArray();    	non-compiled	[CE]  ')'  expected	6	None	replace
116	[BUG]  [BUGGY]  char[]  buffer  =  getChars(strLen);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getChars(strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getChars(strLen);	  char[]    buffer    =    getChars(startIndex);    	non-compiled	[CE]  ')'  expected	35	None	replace
117	[BUG]  [BUGGY]  char[]  buffer  =  getChars(startIndex  +  strLen);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getChars(startIndex  +  strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getChars(startIndex  +  strLen);	  char[]    buffer    =    getChars(startIndex);    	non-compiled	[CE]  ')'  expected	35	None	replace
118	[BUG]  [BUGGY]  char[]  buffer  =  getChars(str.length);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getChars(str.length);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getChars(str.length);	  char[]    buffer    =    getChars(startIndex);    	non-compiled	[CE]  ')'  expected	35	None	replace
119	[BUG]  [BUGGY]  char[]  buf  =  this.buffer.toCharArray(startIndex);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  this.buffer.toCharArray(startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  this.buffer.toCharArray(startIndex);	  char[]    buf    =    this.buffer.toCharArray();    	non-compiled	[CE]  ')'  expected	7	None	replace
120	[BUG]  [BUGGY]  char[]  buf  =  this.buffer.toCharArray(strLen);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  this.buffer.toCharArray(strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  this.buffer.toCharArray(strLen);	  char[]    buf    =    this.buffer.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
121	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.toCharArray(1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.toCharArray(1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.toCharArray(1);	  char[]    buf    =(char[])this.buffer.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
122	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.get(startIndex  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])buffer.get(startIndex  -  1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])buffer.get(startIndex  -  1);	  char[]    buf    =(char[])buffer.get(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
123	[BUG]  [BUGGY]  Integer  strLen  =  str.charAt(0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  Integer  strLen  =  str.charAt(0);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	Integer  strLen  =  str.charAt(0);	  Integer    strLen    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
124	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[size  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  new  char[size  -  1];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  new  char[size  -  1];	  char[]    thisBuf    =    new    char[size];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
125	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[buffer.length];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  new  char[buffer.length];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  new  char[buffer.length];	  char[]    thisBuf    =    new    char[size];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
126	[BUG]  [BUGGY]  char[]  buf  =  new  char[buffer.length  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  new  char[buffer.length  +  1];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  new  char[buffer.length  +  1];	  char[]    buf    =    new    char[strLen    +    1];    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
127	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.toArray(new  char[bufferLen]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])buffer.toArray(new  char[bufferLen]);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])buffer.toArray(new  char[bufferLen]);	  char[]    buf    =(char[])buffer.clone();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
128	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[size  +  2];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  new  char[size  +  2];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  new  char[size  +  2];	  char[]    thisBuf    =    new    char[size    +    1];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
129	[BUG]  [BUGGY]  char[]  thisBuf  =  BufferUtil.toCharArray(strLen);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  BufferUtil.toCharArray(strLen);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  BufferUtil.toCharArray(strLen);	  char[]    thisBuf    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
130	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex  +  2);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex  +  2);	  char[]    thisBuf    =    buffer.toCharArray(startIndex    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
131	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.get(strLen  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])buffer.get(strLen  +  1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])buffer.get(strLen  +  1);	  char[]    buf    =(char[])str.get(startIndex    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
132	[BUG]  [BUGGY]  char[]  buf  =  buffer.toCharArray(startIndex);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  buffer.toCharArray(startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  buffer.toCharArray(startIndex);	  char[]    buf    =    buffer.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
133	[BUG]  [BUGGY]  char[]  buf  =(char[])str.getChars(startIndex  +  1,  strLen);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])str.getChars(startIndex  +  1,  strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])str.getChars(startIndex  +  1,  strLen);	  char[]    buf    =(char[])str.getChars(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
134	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex,  startIndex);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex,  startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.get(startIndex,  startIndex);	  char[]    buf    =(char[])this.buffer.get(startIndex,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
135	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex,  endIndex);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex,  endIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.get(startIndex,  endIndex);	  char[]    buf    =(char[])this.buffer.get(startIndex,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
136	[BUG]  [BUGGY]  char[]  buffer  =  getBuffer().getChars(startIndex);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getBuffer().getChars(startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getBuffer().getChars(startIndex);	  char[]    buffer    =    getBuffer().toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
137	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  endIndex);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  endIndex);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex,  endIndex);	  char[]    thisBuf    =    buffer.toCharArray(startIndex,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
138	[BUG]  [BUGGY]  int  size  =  this.strLen;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  size  =  this.strLen;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  size  =  this.strLen;	  int    size    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
139	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.get(strLen,  startIndex);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])buffer.get(strLen,  startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])buffer.get(strLen,  startIndex);	  char[]    buf    =(char[])str.get(buffer,    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
140	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(strLen  -  startIndex);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.get(strLen  -  startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.get(strLen  -  startIndex);	  char[]    buf    =(char[])this.buffer.get(strLen);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
141	[BUG]  [BUGGY]  char[]  buffer  =  getChars(startIndex  +  1,  strLen);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getChars(startIndex  +  1,  strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getChars(startIndex  +  1,  strLen);	  char[]    buffer    =    getChars(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
142	[BUG]  [BUGGY]  char[]  buffer  =  getChars(startIndex  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getChars(startIndex  +  1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getChars(startIndex  +  1);	  char[]    buffer    =    getChars(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
143	[BUG]  [BUGGY]  char[]  buf  =  this.str.toCharArray(startIndex);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  this.str.toCharArray(startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  this.str.toCharArray(startIndex);	  char[]    buf    =    this.str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
144	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.getValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])buffer.getValue();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])buffer.getValue();	  char[]    buf    =(char[])str.getValue();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
145	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  size  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  size  +  1);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex,  size  +  1);	  char[]    thisBuf    =    buffer.toCharArray(startIndex,    size);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
146	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  size  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  size  -  1);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex,  size  -  1);	  char[]    thisBuf    =    buffer.toCharArray(startIndex,    size);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
147	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuffer.get(strIndex);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])thisBuffer.get(strIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])thisBuffer.get(strIndex);	  char[]    buf    =(char[])buffer.get(strIndex);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
148	[BUG]  [BUGGY]  char[]  buf  =  buffer.get(strIndex);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  buffer.get(strIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  buffer.get(strIndex);	  char[]    buf    =(char[])buffer.get(strIndex);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
149	[BUG]  [BUGGY]  char[]  thisBuf  =  new  char[len  *  strLen];  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  new  char[len  *  strLen];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  new  char[len  *  strLen];	  char[]    thisBuf    =    new    char[strLen    *    strLen];    	non-compiled	[CE]  ')'  expected	2	None	replace
150	[BUG]  [BUGGY]  char[]  buf  =  new  char[buffer.length];  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  new  char[buffer.length];  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  new  char[buffer.length];	  char[]    buf    =    new    char[strLen];    	non-compiled	[CE]  ')'  expected	59	None	replace
151	[BUG]  [BUGGY]  char[]  buffer  =  getChars().toCharArray();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getChars().toCharArray();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getChars().toCharArray();	  char[]    buffer    =    getChars();    	non-compiled	[CE]  ')'  expected	34	None	replace
152	[BUG]  [BUGGY]  char[]  buf  =  str.toCharArray(startIndex);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  str.toCharArray(startIndex);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  str.toCharArray(startIndex);	  char[]    thisBuf    =    str.toCharArray(strLen);    	non-compiled	[CE]  ')'  expected	8	None	replace
153	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.get(str,  startIndex);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])buffer.get(str,  startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])buffer.get(str,  startIndex);	  char[]    buf    =(char[])str.get(buffer,    startIndex);    	non-compiled	[CE]  ')'  expected	4	None	replace
154	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex  +  strLen);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.get(startIndex  +  strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.get(startIndex  +  strLen);	  char[]    buf    =(char[])this.buffer.get(startIndex    +    1);    	non-compiled	[CE]  ')'  expected	13	None	replace
155	[BUG]  [BUGGY]  int  size  =  str.length()  -  2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  size  =  str.length()  -  2;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  size  =  str.length()  -  2;	  int    size    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
156	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.get(strLen  -  1);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])buffer.get(strLen  -  1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])buffer.get(strLen  -  1);	  char[]    buf    =(char[])this.buffer.get(startIndex    -    1);    	non-compiled	[CE]  ')'  expected	47	None	replace
157	[BUG]  [BUGGY]  int  len  =  str.length()  -  size;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  len  =  str.length()  -  size;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  len  =  str.length()  -  size;	  int    len    =    str.length()    -    startIndex;    	non-compiled	[CE]  ')'  expected	33	None	replace
158	[BUG]  [BUGGY]  int  len  =  str.length()  -  2;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  len  =  str.length()  -  2;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  len  =  str.length()  -  2;	  int    len    =    str.length()    -    startIndex;    	non-compiled	[CE]  ')'  expected	33	None	replace
159	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(strLen  +  2);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(strLen  +  2);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(strLen  +  2);	  char[]    thisBuf    =    buffer.toCharArray(strLen    +    1);    	non-compiled	[CE]  ')'  expected	9	None	replace
160	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.get(strIndex  +  1);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])buffer.get(strIndex  +  1);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])buffer.get(strIndex  +  1);	  char[]    buf    =(char[])str.get(startIndex    +    1);    	non-compiled	[CE]  ')'  expected	3	None	replace
161	[BUG]  [BUGGY]  int  size  =  strLen;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  size  =  strLen;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  size  =  strLen;	  int    size    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
162	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  size;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  int  strLen  =  str.length()  -  size;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	int  strLen  =  str.length()  -  size;	  int    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
163	[BUG]  [BUGGY]  char[]  buffer  =  getChars(startIndex,  startIndex  +  strLen);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getChars(startIndex,  startIndex  +  strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getChars(startIndex,  startIndex  +  strLen);	  char[]    buffer    =    getChars(startIndex,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
164	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.getValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.getValue();  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.getValue();	  char[]    buf    =(char[])str.getValue();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
165	[BUG]  [BUGGY]  Integer  strLen  =  str.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  Integer  strLen  =  str.length()  -  2;  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	Integer  strLen  =  str.length()  -  2;	  Integer    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
166	[BUG]  [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex  +  1,  strLen);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex  +  1,  strLen);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  str.toCharArray(startIndex  +  1,  strLen);	  char[]    thisBuf    =    str.toCharArray(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
167	[BUG]  [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex  +  strLen);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  str.toCharArray(startIndex  +  strLen);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  str.toCharArray(startIndex  +  strLen);	  char[]    thisBuf    =    str.toCharArray(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
168	[BUG]  [BUGGY]  char[]  buffer  =  getBuffer().toCharArray(buffer,  startIndex);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getBuffer().toCharArray(buffer,  startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getBuffer().toCharArray(buffer,  startIndex);	  char[]    buffer    =    getBuffer().toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
169	[BUG]  [BUGGY]  char[]  buffer  =  getChars(startIndex,  startLen);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buffer  =  getChars(startIndex,  startLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buffer  =  getChars(startIndex,  startLen);	  char[]    buffer    =    getChars(startIndex,    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
170	[BUG]  [BUGGY]  char[]  thisBuf  =  str.toCharArray(buffer,  startIndex);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  str.toCharArray(buffer,  startIndex);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  str.toCharArray(buffer,  startIndex);	  char[]    thisBuf    =    buffer.toCharArray(buffer,    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
171	[BUG]  [BUGGY]  char[]  thisBuf  =  buf.toCharArray(startIndex,  strLen);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buf.toCharArray(startIndex,  strLen);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buf.toCharArray(startIndex,  strLen);	  char[]    thisBuf    =    buffer.toCharArray(startIndex,    size);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
172	[BUG]  [BUGGY]  char[]  buf  =(char[])this.buffer.get(buffer,  startIndex);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])this.buffer.get(buffer,  startIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])this.buffer.get(buffer,  startIndex);	  char[]    buf    =(char[])this.buffer.get(strLen);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
173	[BUG]  [BUGGY]  char[]  buf  =(char[])str.getChars(startIndex,  endIndex);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =(char[])str.getChars(startIndex,  endIndex);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =(char[])str.getChars(startIndex,  endIndex);	  char[]    buf    =(char[])str.getChars(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
174	[BUG]  [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  startIndex  +  strLen);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buffer.toCharArray(startIndex,  startIndex  +  strLen);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buffer.toCharArray(startIndex,  startIndex  +  strLen);	  char[]    thisBuf    =    buffer.toCharArray(startIndex    +    strLen);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
175	[BUG]  [BUGGY]  char[]  thisBuf  =  buf.toCharArray(0,  strLen);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  thisBuf  =  buf.toCharArray(0,  strLen);  [BUGGY]      int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  thisBuf  =  buf.toCharArray(0,  strLen);	  char[]    thisBuf    =    buf.toCharArray(strLen);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
176	[BUG]  [BUGGY]  char[]  buf  =  buffer.get(strLen);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }      [BUGGY]  char[]  buf  =  buffer.get(strLen);  [BUGGY]      char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1775	1775	1	replace	char[]  buf  =  buffer.get(strLen);	  char[]    buf    =(char[])buffer.get(startIndex);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
