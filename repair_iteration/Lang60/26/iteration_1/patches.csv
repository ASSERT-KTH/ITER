bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  len);  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  len);	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  i  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  i  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buf,  i	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  i  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  i  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buf,  i	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  i  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  i  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  i	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
5	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
7	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  i  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  i  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  i	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	20	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(str,  startIndex,  buf,  i  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(str,  startIndex,  buf,  i  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(str,  startIndex,  buf,  i	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	20	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  i  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  i  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  i	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	20	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length);  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length);	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length);  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length);	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
13	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  0,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  0,  thisBuf.length);  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buf,  0,  thisBuf.length);	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
14	[BUG]  [BUGGY]  AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  thisBuf.length);  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  thisBuf.length);	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
15	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
16	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
17	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
18	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
19	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	17	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	17	None	replace
21	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	17	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
24	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  0,  thisBuf,  0,  buf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(thisBuf,  0,  thisBuf,  0,  buf.length);  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  0,  thisBuf,  0,  buf.length);	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
25	[BUG]  [BUGGY]  Integer  strLen  =  str.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  Integer  strLen  =  str.length();  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  strLen  =  str.length();	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
26	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
27	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
28	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
29	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
30	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
32	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
33	[BUG]  [BUGGY]  if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
34	[BUG]  [BUGGY]  if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
35	[BUG]  [BUGGY]  if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
37	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf(thisBuf,  startIndex);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  Integer  strLen  =  str.indexOf(thisBuf,  startIndex);  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  strLen  =  str.indexOf(thisBuf,  startIndex);	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
38	[BUG]  [BUGGY]  return  i  +  2;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  return  i  +  2;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  i  +  2;	  return    i    +    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
39	[BUG]  [BUGGY]  return  len  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  return  len  +  1;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  len  +  1;	  return    i    +    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
40	[BUG]  [BUGGY]  return  startIndex  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  return  startIndex  +  1;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex  +  1;	  return    i    +    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  return  startIndex  +  strLen;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  return  startIndex  +  strLen;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex  +  strLen;	  return    i    +    strLen;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
42	[BUG]  [BUGGY]  return  i  +  strLen  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  return  i  +  strLen  +  1;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  i  +  strLen  +  1;	  return    i    +    strLen;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
43	[BUG]  [BUGGY]  return  startIndex  +  len;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  return  startIndex  +  len;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex  +  len;	  return    i    +    len;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
44	[BUG]  [BUGGY]  return  i  +  len  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  return  i  +  len  +  1;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  i  +  len  +  1;	  return    i    +    len;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
45	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
46	[BUG]  [BUGGY]  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	      if(i    >    startIndex)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
47	[BUG]  [BUGGY]  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	      if(i    >    startIndex)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
48	[BUG]  [BUGGY]  if(startIndex  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(startIndex  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(startIndex  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	      if(i    >    startIndex)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
49	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
50	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
51	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
52	[BUG]  [BUGGY]  return  outer;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  return  outer;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  outer;	  return    len;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
53	[BUG]  [BUGGY]  return  endIndex;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  return  endIndex;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  endIndex;	  return    len;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
54	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	throw  new  IllegalArgumentException( " ");	  return    0;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
55	[BUG]  [BUGGY]  if(i  >  startIndex)  {  return  0;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(i  >  startIndex)  {  return  0;  }  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  startIndex)  {  return  0;  }	  return    0;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
56	[BUG]  [BUGGY]  if(i  ==  startIndex)  {  return  0;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(i  ==  startIndex)  {  return  0;  }  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  ==  startIndex)  {  return  0;  }	  return    0;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  i,  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  i,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  i,	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	22	None	replace
58	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  0,	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	22	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  i,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  i,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buf,  i,	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	22	None	replace
60	[BUG]  [BUGGY]  return  startIndex  -  len;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  return  startIndex  -  len;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex  -  len;	  return    startIndex;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
61	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  i  >>  return  i;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  i  >>  return  i;  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buf,  i  >>  return  i;	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
62	[BUG]  [BUGGY]  return  i  +  startIndex;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  return  i  +  startIndex;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  i  +  startIndex;	  return    i    +    strLen;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
63	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
64	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
65	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
66	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
67	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	20	None	replace
68	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	20	None	replace
69	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	20	None	replace
70	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length);  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length);  }	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
71	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
72	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
73	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  size  +=  strLen;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  size  +=  strLen;	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  endIndex  =  i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  endIndex  =  i;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  endIndex  =  i;	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
78	[BUG]  [BUGGY]  if(size  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(size  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	22	None	replace
79	[BUG]  [BUGGY]  Integer  i  =  startIndex.intValue();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  Integer  i  =  startIndex.intValue();  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  startIndex.intValue();	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
80	[BUG]  [BUGGY]  Integer  i  =  indexOf(str.charAt(i));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  Integer  i  =  indexOf(str.charAt(i));  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  indexOf(str.charAt(i));	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
81	[BUG]  [BUGGY]  Integer  i  =  startIndex  +  strLen;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  Integer  i  =  startIndex  +  strLen;  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  startIndex  +  strLen;	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
82	[BUG]  [BUGGY]  Integer  i  =  indexOf(str,  startIndex);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  Integer  i  =  indexOf(str,  startIndex);  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  indexOf(str,  startIndex);	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
83	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);  }	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
84	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
85	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
86	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
87	[BUG]  [BUGGY]  if(i  >=  startIndex)  {  return  0;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(i  >=  startIndex)  {  return  0;  }  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >=  startIndex)  {  return  0;  }	  return    0;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
88	[BUG]  [BUGGY]  return  size;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  return  size;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  size;	  return    len;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
89	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
90	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  this  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  this  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  this	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
91	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBuf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBuf,  0,	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
92	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBuf  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBuf  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBuf	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
93	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
94	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
95	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
96	[BUG]  [BUGGY]  if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	      if(i    >    startIndex)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
97	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	      if(i    >    startIndex)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
98	[BUG]  [BUGGY]  if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }	      if(i    >    startIndex)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
99	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  new  char[size];  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  new  char[size];  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  new  char[size];  }	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
100	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
101	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
102	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
103	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
104	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
105	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
106	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
107	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
108	[BUG]  [BUGGY]  if(strLen  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(strLen  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
109	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
110	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
111	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
112	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
113	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
114	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(bu  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(bu  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(bu	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
115	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
116	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBu  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBu  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBu	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
117	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
118	[BUG]  [BUGGY]  if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
119	[BUG]  [BUGGY]  if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
120	[BUG]  [BUGGY]  chars[i]  =  buffer[i];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  chars[i]  =  buffer[i];  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	chars[i]  =  buffer[i];	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
121	[BUG]  [BUGGY]  if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
122	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  i  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  i  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  i	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
123	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  i  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  i  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  i	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
124	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
125	[BUG]  [BUGGY]  if(j  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(j  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(j  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	      if(i    >    startIndex)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
126	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
127	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);  }	      if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
128	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  size  +=  strLen;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  size  +=  strLen;	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
129	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	22	None	replace
130	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	22	None	replace
131	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	20	None	replace
132	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	20	None	replace
133	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  bu  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  bu  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  bu	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	20	None	replace
134	[BUG]  [BUGGY]  return  len  +  strLen;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  return  len  +  strLen;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  len  +  strLen;	  return    i    +    strLen;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
135	[BUG]  [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	17	None	replace
136	[BUG]  [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,	      if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	17	None	replace
137	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
138	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
139	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  bu  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  bu  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  bu	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
140	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf  [BUGGY]    return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf	      if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
141	[BUG]  [BUGGY]  if(len  >  0)  {  return  0;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  if(len  >  0)  {  return  0;  }  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  return  0;  }	  return    0;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
142	[BUG]  [BUGGY]  return  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }    [BUGGY]  return  1;  [BUGGY]    }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  1;	  return    0;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
