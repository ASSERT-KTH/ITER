bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	15	None	replace
2	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  chars[i]  =  str;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  chars[i]  =  str;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	chars[i]  =  str;	  chars[i]    =    buffer[i];    	non-compiled	[CE]  <identifier>  expected	120	None	replace
4	[BUG]  [BUGGY]  chars[i]  =  thisBuf[i];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  chars[i]  =  thisBuf[i];  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	chars[i]  =  thisBuf[i];	  chars[i]    =    buffer[i];    	non-compiled	[CE]  <identifier>  expected	120	None	replace
5	[BUG]  [BUGGY]  chars[i]  =(char)str.charAt(j);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  chars[i]  =(char)str.charAt(j);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	chars[i]  =(char)str.charAt(j);	  chars[i]    =    buffer[i];    	non-compiled	[CE]  <identifier>  expected	120	None	replace
6	[BUG]  [BUGGY]  chars[i]  =  buffer[i  +  1];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  chars[i]  =  buffer[i  +  1];  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	chars[i]  =  buffer[i  +  1];	  chars[i]    =    buffer[i];    	non-compiled	[CE]  <identifier>  expected	120	None	replace
7	[BUG]  [BUGGY]  return  startIndex  +  len  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  startIndex  +  len  +  1;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex  +  len  +  1;	  return    startIndex    +    len;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
8	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	95	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  startIndex);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  startIndex);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	20	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  +  strLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  +  strLen);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  +  strLen);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	20	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	20	None	replace
12	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(bu    	non-compiled	[CE]  <identifier>  expected	114	None	replace
13	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(thisBuf,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(thisBuf,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(thisBuf,	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(bu    	non-compiled	[CE]  <identifier>  expected	114	None	replace
14	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(thisBuf  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(thisBuf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(thisBuf	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(bu    	non-compiled	[CE]  <identifier>  expected	114	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buf,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	124	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buf,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	124	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	124	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	124	None	replace
19	[BUG]  [BUGGY]  return  startIndex  +  i;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  startIndex  +  i;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex  +  i;	  return    i    +    startIndex;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  len,  thisBuf,  0,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  len,  thisBuf,  0,  thisBuf.length);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  len,  thisBuf,  0,  thisBuf.length);	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  i	  System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	3	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buffer,  i  +  1,  size  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buffer,  i  +  1,  size  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buffer,  i  +  1,  size	  System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	3	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  size,  i  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  size,  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buf,  size,  i	  System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	3	None	replace
24	[BUG]  [BUGGY]  return  len  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  len  -  1;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  len  -  1;	  return    len    +    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
25	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  size  -  startIndex);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  size  -  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buf,  size  -  startIndex);	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf    	non-compiled	[CE]  <identifier>  expected	68	None	replace
26	[BUG]  [BUGGY]  if(len  <  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }	  if(len    <    =    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	136	None	replace
27	[BUG]  [BUGGY]  if(len  <  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,	  if(len    <    =    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	136	None	replace
28	[BUG]  [BUGGY]  if(len  <  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this	  if(len    <    =    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	136	None	replace
29	[BUG]  [BUGGY]  Integer  i  =  indexOf(thisBuf,  startIndex);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  indexOf(thisBuf,  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  indexOf(thisBuf,  startIndex);	  Integer    i    =    indexOf(str,    startIndex);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
30	[BUG]  [BUGGY]  Integer  i  =  indexOf(str,  j);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  indexOf(str,  j);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  indexOf(str,  j);	  Integer    i    =    indexOf(str,    startIndex);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
31	[BUG]  [BUGGY]  Integer  i  =  indexOf(str,  startIndex  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  indexOf(str,  startIndex  +  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  indexOf(str,  startIndex  +  1);	  Integer    i    =    indexOf(str,    startIndex);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
32	[BUG]  [BUGGY]  Integer  i  =  indexOf(str,  endIndex);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  indexOf(str,  endIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  indexOf(str,  endIndex);	  Integer    i    =    indexOf(str,    startIndex);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
33	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	104	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  0,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buf,  0,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	104	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  thisBuf.length  -  startIndex);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  0,  thisBuf.length  -  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  0,  thisBuf.length  -  startIndex);	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  <identifier>  expected	66	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  0,  buf,  startIndex);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  0,  buf,  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  0,  buf,  startIndex);	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  <identifier>  expected	66	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	126	None	replace
38	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	126	None	replace
39	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	126	None	replace
40	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	105	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  0,  thisBuf,  0,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	91	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  0,  thisBuf,  0,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	91	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex  +  strLen,  0,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex  +  strLen,  0,  thisBuf.length);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex  +  strLen,  0,  thisBuf.length);	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	91	None	replace
44	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  this  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  this	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	92	None	replace
45	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	92	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  thisBuf.length);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  thisBuf.length);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  thisBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  thisBuf.length  -  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  thisBuf.length  -  1);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
48	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	138	None	replace
49	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	138	None	replace
50	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	138	None	replace
51	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBu  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBu	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	138	None	replace
52	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  size);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  size);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  size);	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
53	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  strLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  strLen);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  strLen);	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  0,  len);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  0,  len);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buf,  0,  len);	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
55	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
56	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  bu  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  bu	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
57	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  chars[i]  =  str[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  chars[i]  =  str[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  chars[i]  =  str[i];  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    str[i];    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
58	[BUG]  [BUGGY]  if(i  ==  startIndex)  {  return  -1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i  ==  startIndex)  {  return  -1;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  ==  startIndex)  {  return  -1;  }	  if(i    ==    startIndex)    {    return    0;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
59	[BUG]  [BUGGY]  if(i  ==  startIndex  +  strLen)  {  return  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i  ==  startIndex  +  strLen)  {  return  0;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  ==  startIndex  +  strLen)  {  return  0;  }	  if(i    ==    startIndex)    {    return    0;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
60	[BUG]  [BUGGY]  if(i  ==  len)  {  return  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i  ==  len)  {  return  0;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  ==  len)  {  return  0;  }	  if(i    ==    startIndex)    {    return    0;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
61	[BUG]  [BUGGY]  Integer  i  =  indexOf(thisBuf[i]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  indexOf(thisBuf[i]);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  indexOf(thisBuf[i]);	  Integer    i    =    indexOf(str.charAt(i));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
62	[BUG]  [BUGGY]  Integer  i  =  indexOf(thisBuf,  str.charAt(i));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  indexOf(thisBuf,  str.charAt(i));  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  indexOf(thisBuf,  str.charAt(i));	  Integer    i    =    indexOf(str.charAt(i));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
63	[BUG]  [BUGGY]  Integer  i  =  indexOf(str.charAt(j));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  indexOf(str.charAt(j));  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  indexOf(str.charAt(j));	  Integer    i    =    indexOf(str.charAt(i));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
64	[BUG]  [BUGGY]  char  i  =  indexOf(str.charAt(i));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  char  i  =  indexOf(str.charAt(i));  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	char  i  =  indexOf(str.charAt(i));	  Integer    i    =    indexOf(str.charAt(i));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
65	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	17	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	84	None	replace
67	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	84	None	replace
68	[BUG]  [BUGGY]  if(j  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(j  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(j  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
69	[BUG]  [BUGGY]  if(i  ==  startIndex)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i  ==  startIndex)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  ==  startIndex)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
70	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(str.getText()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(str.getText()));  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	throw  new  IllegalArgumentException( " ".equals(str.getText()));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
71	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length  -  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length  -  1);	  System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
72	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  startIndex);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  0,  thisBuf,  0,  startIndex);	  System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
73	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buffer    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
74	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  thisBuf[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  thisBuf[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  thisBuf[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buffer    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
75	[BUG]  [BUGGY]  return  startIndex  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  startIndex  -  1;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex  -  1;	  return    startIndex    +    1;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
76	[BUG]  [BUGGY]  if(strLen  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  if(len    >    0)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
77	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]  ==  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]  ==  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]  ==  size)  {  continue  outer;  }	  if(len    >    0)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  i  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  i	  System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	8	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  size,  i  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  size,  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  size,  i	  System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	8	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buffer,  size,  i  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buffer,  size,  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buffer,  size,  i	  System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	8	None	replace
81	[BUG]  [BUGGY]  return  endIndex  +  len;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  endIndex  +  len;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  endIndex  +  len;	  return    len    +    strLen;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
82	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	71	None	replace
83	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	71	None	replace
84	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	71	None	replace
85	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,	  if(str.length()    ==    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
86	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,	  if(str.length()    ==    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
87	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	27	None	replace
88	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	27	None	replace
89	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	27	None	replace
90	[BUG]  [BUGGY]  if(j  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]  ==  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(j  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]  ==  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(j  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]  ==  size)  {  continue  outer;  }	  if(j    >    0)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
91	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	109	None	replace
92	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  chars[i]  =  new  char[size];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  chars[i]  =  new  char[size];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  chars[i]  =  new  char[size];  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    new    char[size];    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
93	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  thisBuf[i]  =  new  char[size];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  thisBuf[i]  =  new  char[size];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  thisBuf[i]  =  new  char[size];  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    new    char[size];    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
94	[BUG]  [BUGGY]  chars[i]  =  new  char[size];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  chars[i]  =  new  char[size];  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	chars[i]  =  new  char[size];	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    new    char[size];    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
95	[BUG]  [BUGGY]  if(strLen  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  if(len    >    size)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length  -  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length  -  1);	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length  +  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length  +  1);	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
98	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length  +  1,  strLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length  +  1,  strLen);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length  +  1,  strLen);	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
99	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	5	None	replace
100	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	5	None	replace
101	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	5	None	replace
102	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
103	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  i  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  i	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
104	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
105	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen  -  startIndex  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen  -  startIndex  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen  -  startIndex	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
106	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  size  -  startIndex);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  size  -  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  0,  size  -  startIndex);	  System.arraycopy(buffer,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	58	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  size  +  strLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  size  +  strLen);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  0,  size  +  strLen);	  System.arraycopy(buffer,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	58	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  size);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  size);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  0,  size);	  System.arraycopy(buffer,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	58	None	replace
109	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	73	None	replace
110	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  start  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  start  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  start	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	73	None	replace
111	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	64	None	replace
112	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	64	None	replace
113	[BUG]  [BUGGY]  return  i  +  3;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  i  +  3;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  i  +  3;	  return    i    +    2;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
114	[BUG]  [BUGGY]  return  len  +  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  len  +  2;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  len  +  2;	  return    i    +    2;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
115	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  }	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	129	None	replace
116	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	129	None	replace
117	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	129	None	replace
118	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    bu    	non-compiled	[CE]  <identifier>  expected	133	None	replace
119	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  start  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  start  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  start	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    bu    	non-compiled	[CE]  <identifier>  expected	133	None	replace
120	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    bu    	non-compiled	[CE]  <identifier>  expected	133	None	replace
121	[BUG]  [BUGGY]  return  startIndex  -  strLen;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  startIndex  -  strLen;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex  -  strLen;	  return    startIndex    -    len;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
122	[BUG]  [BUGGY]  return  i  -  len;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  i  -  len;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  i  -  len;	  return    startIndex    -    len;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
123	[BUG]  [BUGGY]  return  startIndex  -  len  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  startIndex  -  len  +  1;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex  -  len  +  1;	  return    startIndex    -    len;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
124	[BUG]  [BUGGY]  return  startIndex  -  size;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  startIndex  -  size;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex  -  size;	  return    startIndex    -    len;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  i,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  i,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  i,	  System.arraycopy(buffer,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	57	None	replace
126	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  size,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  size,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  size,	  System.arraycopy(buffer,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	57	None	replace
127	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  i,  size,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  i,  size,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  i,  size,	  System.arraycopy(buffer,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	57	None	replace
128	[BUG]  [BUGGY]  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }	  if(strLen    >    thisBuf.length)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,	  if(strLen    >    thisBuf.length)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
130	[BUG]  [BUGGY]  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length	  if(strLen    >    thisBuf.length)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
131	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buffer,  0,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buffer,  0,  thisBuf.length);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buffer,  0,  thisBuf.length);	  System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
132	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length  -  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length  -  1);	  System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
133	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  thisBuf,  0,  buf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  thisBuf,  0,  buf.length);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  thisBuf,  0,  buf.length);	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
134	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
135	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
136	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
137	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  0,  this  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  0,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buf,  0,  this	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    this    	non-compiled	[CE]  <identifier>  expected	106	None	replace
138	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  this  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  this	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    this    	non-compiled	[CE]  <identifier>  expected	106	None	replace
139	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  0,  this  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  0,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buf,  0,  this	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    this    	non-compiled	[CE]  <identifier>  expected	106	None	replace
140	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  this  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  this	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    this    	non-compiled	[CE]  <identifier>  expected	106	None	replace
141	[BUG]  [BUGGY]  AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  thisBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  thisBuf.length  -  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  thisBuf.length  -  1);	  AssertionFailedError.show(buffer,    startIndex,    len,    thisBuf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
142	[BUG]  [BUGGY]  AssertionFailedError.show(buffer,  startIndex,  strLen,  thisBuf,  0,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  AssertionFailedError.show(buffer,  startIndex,  strLen,  thisBuf,  0,  thisBuf.length);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	AssertionFailedError.show(buffer,  startIndex,  strLen,  thisBuf,  0,  thisBuf.length);	  AssertionFailedError.show(buffer,    startIndex,    len,    thisBuf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
143	[BUG]  [BUGGY]  AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  thisBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  thisBuf.length  +  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  thisBuf.length  +  1);	  AssertionFailedError.show(buffer,    startIndex,    len,    thisBuf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
144	[BUG]  [BUGGY]  if(len  <  =  0)  {  return  0;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  0)  {  return  0;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  0)  {  return  0;  }	  if(len    >    0)    {    return    0;    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
145	[BUG]  [BUGGY]  if(len  ==  0)  {  return  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  return  0;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  return  0;  }	  if(len    >    0)    {    return    0;    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
146	[BUG]  [BUGGY]  if(len  >  0)  {  return  -1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  return  -1;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  return  -1;  }	  if(len    >    0)    {    return    0;    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
147	[BUG]  [BUGGY]  Integer  i  =  thisBuf.intValue();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  thisBuf.intValue();  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  thisBuf.intValue();	  Integer    i    =    startIndex.intValue();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
148	[BUG]  [BUGGY]  Integer  i  =  startIndex.intValue()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  startIndex.intValue()  +  1;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  startIndex.intValue()  +  1;	  Integer    i    =    startIndex.intValue();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
149	[BUG]  [BUGGY]  Integer  i  =  str.intValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  str.intValue();  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  str.intValue();	  Integer    i    =    startIndex.intValue();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
150	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  size  +=  strLen;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  size  +=  strLen;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
151	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  len);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  len);  size  +=  strLen;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  len);  size  +=  strLen;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
152	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buffer,  0,  len);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buffer,  0,  len);  size  +=  strLen;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buffer,  0,  len);  size  +=  strLen;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
153	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  size  +=  i;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  size  +=  i;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  size  +=  i;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	75	None	replace
154	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  }	  if(size    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	78	None	replace
155	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,	  if(size    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	78	None	replace
156	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	6	None	replace
157	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(thisBuf,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(thisBuf,  0,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	6	None	replace
158	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  +  1];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  +  1];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  +  1];  System.arraycopy(buf,  0,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	6	None	replace
159	[BUG]  [BUGGY]  return  thisBuf;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  thisBuf;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  thisBuf;	  return    outer;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
160	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
161	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  bu  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  bu	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
162	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  bu  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  bu	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
163	[BUG]  [BUGGY]  Integer  strLen  =  thisBuf.indexOf(str,  startIndex);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  strLen  =  thisBuf.indexOf(str,  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  strLen  =  thisBuf.indexOf(str,  startIndex);	  Integer    strLen    =    str.indexOf(thisBuf,    startIndex);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
164	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf(thisBuf,  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  strLen  =  str.indexOf(thisBuf,  i);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  strLen  =  str.indexOf(thisBuf,  i);	  Integer    strLen    =    str.indexOf(thisBuf,    startIndex);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
165	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf(thisBuf,  j);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  strLen  =  str.indexOf(thisBuf,  j);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  strLen  =  str.indexOf(thisBuf,  j);	  Integer    strLen    =    str.indexOf(thisBuf,    startIndex);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
166	[BUG]  [BUGGY]  Integer  strLen  =  thisBuf.indexOf(str);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  strLen  =  thisBuf.indexOf(str);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  strLen  =  thisBuf.indexOf(str);	  Integer    strLen    =    str.indexOf(thisBuf,    startIndex);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
167	[BUG]  [BUGGY]  if(strLen  ==  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  ==  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  ==  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	18	None	replace
168	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this  }	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	18	None	replace
169	[BUG]  [BUGGY]  return  i  +  len  +  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  i  +  len  +  2;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  i  +  len  +  2;	  return    i    +    len    +    1;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
170	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	85	None	replace
171	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  size  -  startIndex);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  size  -  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  0,  thisBuf,  0,  size  -  startIndex);	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBu    	non-compiled	[CE]  <identifier>  expected	116	None	replace
172	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  size);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  size);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  0,  thisBuf,  0,  size);	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBu    	non-compiled	[CE]  <identifier>  expected	116	None	replace
173	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  size  -  strLen);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  size  -  strLen);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  0,  thisBuf,  0,  size  -  strLen);	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBu    	non-compiled	[CE]  <identifier>  expected	116	None	replace
174	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  len,  i  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  len,  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  len,  i	  System.arraycopy(thisBuf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	2	None	replace
175	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  size,  i  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  size,  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buf,  size,  i	  System.arraycopy(thisBuf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	2	None	replace
176	[BUG]  [BUGGY]  return  startIndex  +  strLen  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  startIndex  +  strLen  +  1;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex  +  strLen  +  1;	  return    i    +    strLen    +    1;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
177	[BUG]  [BUGGY]  return  i  +  strLen  +  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  i  +  strLen  +  2;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  i  +  strLen  +  2;	  return    i    +    strLen    +    1;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
178	[BUG]  [BUGGY]  if(chars!=  null)  {  if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(chars!=  null)  {  if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(chars!=  null)  {  if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    thisBuf[i];    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
179	[BUG]  [BUGGY]  if(chars!=  null)  {  if(startIndex  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(chars!=  null)  {  if(startIndex  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(chars!=  null)  {  if(startIndex  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    thisBuf[i];    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
180	[BUG]  [BUGGY]  if(chars!=  null)  {  if(startIndex  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(chars!=  null)  {  if(startIndex  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(chars!=  null)  {  if(startIndex  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    thisBuf[i];    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
181	[BUG]  [BUGGY]  if(chars!=  null)  {  if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(chars!=  null)  {  if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(chars!=  null)  {  if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    thisBuf[i];    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
182	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length  -  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length  -  1);	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
183	[BUG]  [BUGGY]  CharSequence  str  =(CharSequence)str.clone();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  CharSequence  str  =(CharSequence)str.clone();  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	CharSequence  str  =(CharSequence)str.clone();	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    str[i];    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
184	[BUG]  [BUGGY]  if(i!=  startIndex)  {  return  0;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i!=  startIndex)  {  return  0;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i!=  startIndex)  {  return  0;  }	  if(i    >=    startIndex)    {    return    0;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
185	[BUG]  [BUGGY]  if(startIndex  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(startIndex  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(startIndex  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }	  if(startIndex    >    size)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
186	[BUG]  [BUGGY]  Integer  i  =  startIndex  +  len;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  startIndex  +  len;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  startIndex  +  len;	  Integer    i    =    startIndex    +    strLen;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
187	[BUG]  [BUGGY]  Integer  i  =  startIndex  +  strLen  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  startIndex  +  strLen  +  1;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  startIndex  +  strLen  +  1;	  Integer    i    =    startIndex    +    strLen;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
188	[BUG]  [BUGGY]  Integer  i  =  startIndex  +  size;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  startIndex  +  size;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  startIndex  +  size;	  Integer    i    =    startIndex    +    strLen;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
189	[BUG]  [BUGGY]  Integer  i  =  startIndex  +  length;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  startIndex  +  length;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  startIndex  +  length;	  Integer    i    =    startIndex    +    strLen;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
190	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buffer,  0,  len);  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buffer,  0,  len);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
191	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  len);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  len);  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  len);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
192	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  start  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  start  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  start	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	94	None	replace
193	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  i,	  System.arraycopy(thisBuf,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	59	None	replace
194	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buffer,  i,  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buffer,  i,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buffer,  i,	  System.arraycopy(thisBuf,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	59	None	replace
195	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  i,  size,  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  i,  size,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buf,  i,  size,	  System.arraycopy(thisBuf,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	59	None	replace
196	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  this  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  this	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	30	None	replace
197	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  this  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buf,  this	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	30	None	replace
198	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  this;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  this;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  this;	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	30	None	replace
199	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  this  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  this	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	30	None	replace
200	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  size  +=  len;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  size  +=  len;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  size  +=  len;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	128	None	replace
201	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  size  +=  length;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  size  +=  length;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  size  +=  length;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	128	None	replace
202	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  strLen);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  strLen);  size  +=  strLen;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  strLen);  size  +=  strLen;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	128	None	replace
203	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	101	None	replace
204	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  thisBuf[i];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  thisBuf[i];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  thisBuf[i];  System.arraycopy(buf,  0,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	101	None	replace
205	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  return  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  return  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  return	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	101	None	replace
206	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  size  -  i  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  size  -  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  size  -  i	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    i    	non-compiled	[CE]  <identifier>  expected	4	None	replace
207	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  size  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  size  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  size	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    i    	non-compiled	[CE]  <identifier>  expected	4	None	replace
208	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  strLen  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  strLen  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  strLen	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    i    	non-compiled	[CE]  <identifier>  expected	4	None	replace
209	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  len  -  i  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  len  -  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  len  -  i	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    i    	non-compiled	[CE]  <identifier>  expected	4	None	replace
210	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  str,  i  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  str,  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  str,  i	  System.arraycopy(str,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	9	None	replace
211	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	7	None	replace
212	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	7	None	replace
213	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  size);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  0,  thisBuf,  0,  size);	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	102	None	replace
214	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  size  -  startIndex);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  size  -  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  0,  thisBuf,  0,  size  -  startIndex);	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	102	None	replace
215	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  len);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  0,  thisBuf,  0,  len);	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	102	None	replace
216	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  0,	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	115	None	replace
217	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  0,	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	115	None	replace
218	[BUG]  [BUGGY]  System.arraycopy(str,  0,  buf,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(str,  0,  buf,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(str,  0,  buf,	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	115	None	replace
219	[BUG]  [BUGGY]  return  startIndex  +  strLen  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  startIndex  +  strLen  -  1;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex  +  strLen  -  1;	  return    startIndex    +    strLen;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
220	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  size  >  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  size  >  0)  {  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  size  >  0)  {	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	130	None	replace
221	[BUG]  [BUGGY]  if(i  >  startIndex)  {  return  1;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i  >  startIndex)  {  return  1;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  startIndex)  {  return  1;  }	  return    1;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
222	[BUG]  [BUGGY]  if(i  ==  startIndex)  {  return  1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i  ==  startIndex)  {  return  1;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  ==  startIndex)  {  return  1;  }	  return    1;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
223	[BUG]  [BUGGY]  if(j  ==  0)  {  return  1;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(j  ==  0)  {  return  1;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(j  ==  0)  {  return  1;  }	  return    1;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
224	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  0,  buf,  0,  size);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  0,  buf,  0,  size);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  0,  buf,  0,  size);	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    this    	non-compiled	[CE]  <identifier>  expected	90	None	replace
225	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }	  if(chars    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
226	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }	  if(chars    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
227	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }	  if(chars    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
228	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  new  char[size];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  new  char[size];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  new  char[size];  }	  if(chars    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
229	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  startIndex,  buf,  0,  this  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  startIndex,  buf,  0,  this  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  startIndex,  buf,  0,  this  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    this    	non-compiled	[CE]  <identifier>  expected	103	None	replace
230	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }	  if(chars!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
231	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }	  if(chars!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
232	[BUG]  [BUGGY]  chars[i]  =  buf[i];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  chars[i]  =  buf[i];  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	chars[i]  =  buf[i];	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buf[i];    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
233	[BUG]  [BUGGY]  CharSequence  strLen  =(CharSequence)str.clone();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  CharSequence  strLen  =(CharSequence)str.clone();  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	CharSequence  strLen  =(CharSequence)str.clone();	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buf[i];    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
234	[BUG]  [BUGGY]  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	  if(str    ==    null    ||    str.length()    ==    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
235	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,	  if(str    ==    null    ||    str.length()    ==    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
236	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,	  if(str    ==    null    ||    str.length()    ==    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
237	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	28	None	replace
238	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	28	None	replace
239	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	28	None	replace
240	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }	  if(chars!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buf[i];    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
241	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	117	None	replace
242	[BUG]  [BUGGY]  char[]  buf  =  str.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  char[]  buf  =  str.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	char[]  buf  =  str.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
243	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j])  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j])  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j])  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
244	[BUG]  [BUGGY]  char[]  buf  =  thisBuf.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  char[]  buf  =  thisBuf.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	char[]  buf  =  thisBuf.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
245	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  endIndex  =  i;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  endIndex  =  i;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  endIndex  =  i;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    endIndex    =    i;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
246	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  endIndex  =  i  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  endIndex  =  i  +  1;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  endIndex  =  i  +  1;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    endIndex    =    i;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
247	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  endIndex  =  i;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  endIndex  =  i;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  endIndex  =  i;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    endIndex    =    i;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
248	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buffer,  0,  len);  endIndex  =  i;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buffer,  0,  len);  endIndex  =  i;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buffer,  0,  len);  endIndex  =  i;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    endIndex    =    i;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
249	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  size  >  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  size  >  0)  {  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buf,  size  >  0)  {	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	122	None	replace
250	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  size  >  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  size  >  0)  {  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buf,  size  >  0)  {	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	122	None	replace
251	[BUG]  [BUGGY]  Integer  strLen  =  thisBuf.length();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  strLen  =  thisBuf.length();  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  strLen  =  thisBuf.length();	  Integer    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
252	[BUG]  [BUGGY]  Integer  strLen  =  size  -  str.length();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  strLen  =  size  -  str.length();  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  strLen  =  size  -  str.length();	  Integer    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
253	[BUG]  [BUGGY]  Integer  strLen  =  buffer.length();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  strLen  =  buffer.length();  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  strLen  =  buffer.length();	  Integer    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
254	[BUG]  [BUGGY]  int  strLen  =  str.length();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  int  strLen  =  str.length();  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	int  strLen  =  str.length();	  Integer    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
255	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j])  {  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j])  {  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j])  {  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  bucket[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
256	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j])  {  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j])  {  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j])  {  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  bucket[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
257	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i  }  return  i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i  }  return  i;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  i  }  return  i;	  System.arraycopy(buf,    startIndex,    buf,    i    >>    return    i;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
258	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i  >>  i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i  >>  i;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  i  >>  i;	  System.arraycopy(buf,    startIndex,    buf,    i    >>    return    i;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
259	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  i);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  i);	  System.arraycopy(buf,    startIndex,    buf,    i    >>    return    i;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
260	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  i;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  i;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  i;	  System.arraycopy(buf,    startIndex,    buf,    i    >>    return    i;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
261	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  -  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  -  1);	  System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
262	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  -  startIndex);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  -  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  -  startIndex);	  System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
263	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buffer,  0,  strLen);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buffer,  0,  strLen);  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buffer,  0,  strLen);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    strLen);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
264	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  strLen);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  strLen);  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  strLen);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    strLen);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
265	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length    	non-compiled	[CE]  <identifier>  expected	72	None	replace
266	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  thisBuf.length	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length    	non-compiled	[CE]  <identifier>  expected	72	None	replace
267	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  thisBuf.length  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  thisBuf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  thisBuf.length	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length    	non-compiled	[CE]  <identifier>  expected	72	None	replace
268	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  thisBuf.length  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  thisBuf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  0,  thisBuf.length	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length    	non-compiled	[CE]  <identifier>  expected	72	None	replace
269	[BUG]  [BUGGY]  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }	  if(len    >    size)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
270	[BUG]  [BUGGY]  if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer	  if(len    >    size)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
271	[BUG]  [BUGGY]  if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]  ==  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]  ==  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]  ==  thisBuf[i  +  j])  {  continue  outer;  }	  if(len    >    size)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
272	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	86	None	replace
273	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  startIndex  +  strLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  startIndex  +  strLen);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  0,  thisBuf,  startIndex  +  strLen);	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	89	None	replace
274	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  0,  buf,  startIndex  +  strLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  0,  buf,  startIndex  +  strLen);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  0,  buf,  startIndex  +  strLen);	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	89	None	replace
275	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  0,  buf,  size  -  startIndex  +  strLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  0,  buf,  size  -  startIndex  +  strLen);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  0,  buf,  size  -  startIndex  +  strLen);	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	89	None	replace
276	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
277	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
278	[BUG]  [BUGGY]  return  endIndex  -  startIndex;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  endIndex  -  startIndex;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  endIndex  -  startIndex;	  return    endIndex;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
279	[BUG]  [BUGGY]  return  endIndex  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  endIndex  +  1;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  endIndex  +  1;	  return    endIndex;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
280	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    	non-compiled	[CE]  <identifier>  expected	32	None	replace
281	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    	non-compiled	[CE]  <identifier>  expected	32	None	replace
282	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  start  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  start  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  start	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    	non-compiled	[CE]  <identifier>  expected	32	None	replace
283	[BUG]  [BUGGY]  if(i  <  =  startIndex)  {  return  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i  <  =  startIndex)  {  return  0;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  <  =  startIndex)  {  return  0;  }	  if(i    >    startIndex)    {    return    0;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
284	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buffer,  startIndex,  buf,  i  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buffer,  startIndex,  buf,  i  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buffer,  startIndex,  buf,  i  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	67	None	replace
285	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  0,  thisBuf,  0,  buf.length  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  0,  thisBuf,  0,  buf.length  -  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  0,  thisBuf,  0,  buf.length  -  1);	  System.arraycopy(thisBuf,    0,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
286	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
287	[BUG]  [BUGGY]  if(size  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	101	None	replace
288	[BUG]  [BUGGY]  if(size  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	101	None	replace
289	[BUG]  [BUGGY]  Integer  i  =  indexOf(buffer,  startIndex);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  indexOf(buffer,  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  indexOf(buffer,  startIndex);	  Integer    i    =    indexOf(str,    startIndex);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
290	[BUG]  [BUGGY]  Integer  i  =  indexOf(str,  startIndex  +  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  indexOf(str,  startIndex  +  len);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  indexOf(str,  startIndex  +  len);	  Integer    i    =    indexOf(str,    startIndex);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
291	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  startIndex);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  0,  thisBuf,  0,  startIndex);	  System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
292	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	129	None	replace
293	[BUG]  [BUGGY]  return  result;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  result;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  result;	  return    outer;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
294	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
295	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
296	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
297	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex  +  1;  i  <  len;  i++)  {  chars[i]  =  new  char[size];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex  +  1;  i  <  len;  i++)  {  chars[i]  =  new  char[size];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex  +  1;  i  <  len;  i++)  {  chars[i]  =  new  char[size];  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    new    char[size];    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
298	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  bu  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  bu	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    bu    	non-compiled	[CE]  <identifier>  expected	133	None	replace
299	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    bu    	non-compiled	[CE]  <identifier>  expected	133	None	replace
300	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  start  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  start  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  start	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    bu    	non-compiled	[CE]  <identifier>  expected	133	None	replace
301	[BUG]  [BUGGY]  return  i  +  startIndex  +  strLen;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  i  +  startIndex  +  strLen;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  i  +  startIndex  +  strLen;	  return    i    +    startIndex;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
302	[BUG]  [BUGGY]  AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  size);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  size);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  size);	  AssertionFailedError.show(buffer,    startIndex,    len,    thisBuf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
303	[BUG]  [BUGGY]  AssertionFailedError.show(buffer,  startIndex,  size,  thisBuf,  0,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  AssertionFailedError.show(buffer,  startIndex,  size,  thisBuf,  0,  thisBuf.length);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	AssertionFailedError.show(buffer,  startIndex,  size,  thisBuf,  0,  thisBuf.length);	  AssertionFailedError.show(buffer,    startIndex,    len,    thisBuf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
304	[BUG]  [BUGGY]  AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  size  -  thisBuf.length);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  size  -  thisBuf.length);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	AssertionFailedError.show(buffer,  startIndex,  len,  thisBuf,  0,  size  -  thisBuf.length);	  AssertionFailedError.show(buffer,    startIndex,    len,    thisBuf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
305	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  this  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  this	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	102	None	replace
306	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBu  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBu	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	102	None	replace
307	[BUG]  [BUGGY]  if(i  >  startIndex)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i  >  startIndex)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  startIndex)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
308	[BUG]  [BUGGY]  if(startIndex  >=  size)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(startIndex  >=  size)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(startIndex  >=  size)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
309	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
310	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  size  -  i  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  size  -  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buf,  size  -  i	  System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	3	None	replace
311	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	122	None	replace
312	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	122	None	replace
313	[BUG]  [BUGGY]  return  i  +  startIndex  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  i  +  startIndex  +  1;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  i  +  startIndex  +  1;	  return    i    +    len    +    1;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
314	[BUG]  [BUGGY]  if(size  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	69	None	replace
315	[BUG]  [BUGGY]  int  len  =  size  -  strLen;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  int  len  =  size  -  strLen;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	int  len  =  size  -  strLen;	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    str[i];    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
316	[BUG]  [BUGGY]  int  len  =  str.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  int  len  =  str.length();  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	int  len  =  str.length();	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    str[i];    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
317	[BUG]  [BUGGY]  int  len  =  size  -  startIndex;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  int  len  =  size  -  startIndex;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	int  len  =  size  -  startIndex;	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    str[i];    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
318	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	95	None	replace
319	[BUG]  [BUGGY]  return  startIndex  +  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  startIndex  +  2;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex  +  2;	  return    i    +    2;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
320	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
321	[BUG]  [BUGGY]  if(len  >=  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >=  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >=  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	29	None	replace
322	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	73	None	replace
323	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	73	None	replace
324	[BUG]  [BUGGY]  if(i  >=  startIndex)  {  return  -1;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i  >=  startIndex)  {  return  -1;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >=  startIndex)  {  return  -1;  }	  if(i    >=    startIndex)    {    return    0;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
325	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(bu  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(bu	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(bu    	non-compiled	[CE]  <identifier>  expected	114	None	replace
326	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  1];  System.arraycopy(bu  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  1];  System.arraycopy(bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  1];  System.arraycopy(bu	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(bu    	non-compiled	[CE]  <identifier>  expected	114	None	replace
327	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  2];  System.arraycopy(bu  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  2];  System.arraycopy(bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  2];  System.arraycopy(bu	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(bu    	non-compiled	[CE]  <identifier>  expected	114	None	replace
328	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(thisBuf,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(thisBuf,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(thisBuf,	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(bu    	non-compiled	[CE]  <identifier>  expected	114	None	replace
329	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    	non-compiled	[CE]  <identifier>  expected	32	None	replace
330	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    	non-compiled	[CE]  <identifier>  expected	32	None	replace
331	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    	non-compiled	[CE]  <identifier>  expected	32	None	replace
332	[BUG]  [BUGGY]  return  startIndex  +  size;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  startIndex  +  size;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex  +  size;	  return    startIndex    +    len;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
333	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buffer    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
334	[BUG]  [BUGGY]  if(buffer!=  null)  {  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(buffer!=  null)  {  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(buffer!=  null)  {  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  bucket[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
335	[BUG]  [BUGGY]  if(buffer!=  null)  {  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(buffer!=  null)  {  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(buffer!=  null)  {  bucket[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }	  bucket[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
336	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  size  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  size  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  size	  System.arraycopy(thisBuf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	2	None	replace
337	[BUG]  [BUGGY]  chars[i]  =  startIndex;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  chars[i]  =  startIndex;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	chars[i]  =  startIndex;	  chars[i]    =    buffer[i];    	non-compiled	[CE]  <identifier>  expected	120	None	replace
338	[BUG]  [BUGGY]  if(i  <  startIndex)  {  return  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i  <  startIndex)  {  return  0;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  <  startIndex)  {  return  0;  }	  if(i    >    startIndex)    {    return    0;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
339	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	115	None	replace
340	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	115	None	replace
341	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  }	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	115	None	replace
342	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(bu  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(bu	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	115	None	replace
343	[BUG]  [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  if(j    >    0)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
344	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }	  if(j    >    0)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
345	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer	  if(j    >    0)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
346	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(bu  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(bu	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	65	None	replace
347	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
348	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	64	None	replace
349	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	94	None	replace
350	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  this	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	94	None	replace
351	[BUG]  [BUGGY]  Integer  strLen  =  size.length();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  strLen  =  size.length();  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  strLen  =  size.length();	  Integer    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
352	[BUG]  [BUGGY]  Integer  strLen  =  str.length()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  strLen  =  str.length()  +  1;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  strLen  =  str.length()  +  1;	  Integer    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
353	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  len  -  i);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  len  -  i);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  len  -  i);	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    i    	non-compiled	[CE]  <identifier>  expected	4	None	replace
354	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  this  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  this	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	30	None	replace
355	[BUG]  [BUGGY]  char[]  buf  =  buffer.toCharArray();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  char[]  buf  =  buffer.toCharArray();  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	char[]  buf  =  buffer.toCharArray();	  char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
356	[BUG]  [BUGGY]  if(buffer!=  null)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(buffer!=  null)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(buffer!=  null)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
357	[BUG]  [BUGGY]  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }	  char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
358	[BUG]  [BUGGY]  if(buffer!=  null)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(buffer!=  null)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(buffer!=  null)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }	  char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
359	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    bu    	non-compiled	[CE]  <identifier>  expected	139	None	replace
360	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	7	None	replace
361	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	7	None	replace
362	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	124	None	replace
363	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	124	None	replace
364	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	124	None	replace
365	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	104	None	replace
366	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	104	None	replace
367	[BUG]  [BUGGY]  System.arraycopy(buf,  i,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  i,  thisBuf,  0,  len);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  i,  thisBuf,  0,  len);	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
368	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  size  -  len);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  size  -  len);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  size  -  len);	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
369	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len  -  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len  -  i);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len  -  i);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
370	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len  -  i  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len  -  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len  -  i	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
371	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	85	None	replace
372	[BUG]  [BUGGY]  return  len  -  startIndex;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  len  -  startIndex;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  len  -  startIndex;	  return    startIndex    -    len;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
373	[BUG]  [BUGGY]  System.arraycopy(buf,  i,  thisBuf,  0,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  i,  thisBuf,  0,  thisBuf.length);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  i,  thisBuf,  0,  thisBuf.length);	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
374	[BUG]  [BUGGY]  if(len  >=  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >=  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >=  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	28	None	replace
375	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	28	None	replace
376	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buffer,  i  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buffer,  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buffer,  i	  System.arraycopy(str,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	9	None	replace
377	[BUG]  [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	27	None	replace
378	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  endIndex);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  0,  endIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  0,  endIndex);	  System.arraycopy(thisBuf,    startIndex,    buf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
379	[BUG]  [BUGGY]  if(startIndex  <  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(startIndex  <  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(startIndex  <  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  if(startIndex    >    size)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
380	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  -  startIndex);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  -  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  -  startIndex);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
381	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  len);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  0,  len);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
382	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  endIndex);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  endIndex);  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  endIndex);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    strLen);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
383	[BUG]  [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  0,  strLen);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  0,  strLen);  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  i,  thisBuf,  0,  strLen);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    strLen);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
384	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
385	[BUG]  [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  0,  len);  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  i,  thisBuf,  0,  len);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
386	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  endIndex);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  0,  thisBuf,  0,  endIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  0,  thisBuf,  0,  endIndex);	  System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
387	[BUG]  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(buffer!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(buffer!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }	  if(chars    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
388	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }	  if(chars    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
389	[BUG]  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(buffer!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(buffer!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }	  if(chars    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
390	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  size  -  i  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  size  -  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  size  -  i	  System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	8	None	replace
391	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buffer,  i  +  1,  size  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buffer,  i  +  1,  size  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buffer,  i  +  1,  size	  System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	8	None	replace
392	[BUG]  [BUGGY]  if(len  >  size)  {  return  0;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  return  0;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  return  0;  }	  if(len    >    0)    {    return    0;    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
393	[BUG]  [BUGGY]  if(i  >  0)  {  return  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i  >  0)  {  return  0;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  0)  {  return  0;  }	  if(len    >    0)    {    return    0;    }    	non-compiled	[CE]  <identifier>  expected	141	None	replace
394	[BUG]  [BUGGY]  Integer  chars  =  str.charAt(startIndex);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  chars  =  str.charAt(startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  chars  =  str.charAt(startIndex);	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    thisBuf[i];    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
395	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  1];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  1];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  1];  System.arraycopy(buf,  0,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    this    	non-compiled	[CE]  <identifier>  expected	90	None	replace
396	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
397	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
398	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	138	None	replace
399	[BUG]  [BUGGY]  Integer  chars  =  str.charAt(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  chars  =  str.charAt(i);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  chars  =  str.charAt(i);	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buf[i];    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
400	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	5	None	replace
401	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  this  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  0,  this	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    this    	non-compiled	[CE]  <identifier>  expected	106	None	replace
402	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  thisBuf.length);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  0,  thisBuf.length);	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
403	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	18	None	replace
404	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  size  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  size  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  0,  size	  System.arraycopy(buffer,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	58	None	replace
405	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  0,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  0,  size);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buf,  0,  size);	  System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
406	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	20	None	replace
407	[BUG]  [BUGGY]  return(i  ==  startIndex?  1  :  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return(i  ==  startIndex?  1  :  0);  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return(i  ==  startIndex?  1  :  0);	  return    1;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
408	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	84	None	replace
409	[BUG]  [BUGGY]  if(len  >=  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >=  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >=  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }	  if(chars!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
410	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  this  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  this	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBu    	non-compiled	[CE]  <identifier>  expected	116	None	replace
411	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBu  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBu	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBu    	non-compiled	[CE]  <identifier>  expected	116	None	replace
412	[BUG]  [BUGGY]  Integer  i  =  indexOf(thisBuf.charAt(i));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  indexOf(thisBuf.charAt(i));  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  indexOf(thisBuf.charAt(i));	  Integer    i    =    indexOf(str.charAt(i));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
413	[BUG]  [BUGGY]  Integer  i  =  indexOf(str.charAt(i)+  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  indexOf(str.charAt(i)+  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  indexOf(str.charAt(i)+  1);	  Integer    i    =    indexOf(str.charAt(i));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
414	[BUG]  [BUGGY]  Integer  i  =  startIndex  +  str.intValue();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  startIndex  +  str.intValue();  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  startIndex  +  str.intValue();	  Integer    i    =    startIndex.intValue();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
415	[BUG]  [BUGGY]  Integer  i  =  startIndex  +  strLen.intValue();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  startIndex  +  strLen.intValue();  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  startIndex  +  strLen.intValue();	  Integer    i    =    startIndex.intValue();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
416	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  i  +  len);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  i  +  len);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  i  +  len);	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	123	None	replace
417	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }	  if(chars!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buf[i];    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
418	[BUG]  [BUGGY]  if(len  >=  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >=  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >=  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }	  if(chars!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buf[i];    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
419	[BUG]  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(buffer!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(buffer!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }	  if(chars!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buf[i];    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
420	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBu  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBu	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	91	None	replace
421	[BUG]  [BUGGY]  if(len  <  =  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  if(len    >    size)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
422	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf    	non-compiled	[CE]  <identifier>  expected	140	None	replace
423	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  }	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	117	None	replace
424	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	117	None	replace
425	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  thisBuf  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  thisBuf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  buf,  0,  thisBuf	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	105	None	replace
426	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	105	None	replace
427	[BUG]  [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	105	None	replace
428	[BUG]  [BUGGY]  if(len  >  size)  {  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	105	None	replace
429	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1;	  System.arraycopy(buf,    startIndex,    buf,    i    >>    return    i;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
430	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buffer,  i  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buffer,  i  +  1;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buffer,  i  +  1;	  System.arraycopy(buf,    startIndex,    buf,    i    >>    return    i;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
431	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  i  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buf,  i  +  1;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buf,  i  +  1;	  System.arraycopy(buf,    startIndex,    buf,    i    >>    return    i;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
432	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  <identifier>  expected	66	None	replace
433	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  <identifier>  expected	66	None	replace
434	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf(thisBuf,  startIndex  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  strLen  =  str.indexOf(thisBuf,  startIndex  +  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  strLen  =  str.indexOf(thisBuf,  startIndex  +  1);	  Integer    strLen    =    str.indexOf(thisBuf,    startIndex);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
435	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf(thisBuf,  0,  startIndex);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  strLen  =  str.indexOf(thisBuf,  0,  startIndex);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  strLen  =  str.indexOf(thisBuf,  0,  startIndex);	  Integer    strLen    =    str.indexOf(thisBuf,    startIndex);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
436	[BUG]  [BUGGY]  if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j]  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j]  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j]	  if(len    >    size)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
437	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  buffer,  0,  buf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  buffer,  0,  buf.length);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  buffer,  0,  buf.length);	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
438	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i,  size  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i,  size  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  i,  size	  System.arraycopy(thisBuf,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	59	None	replace
439	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  len,  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  len,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  len,	  System.arraycopy(thisBuf,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	59	None	replace
440	[BUG]  [BUGGY]  if(len  >=  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >=  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >=  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  if(len    >    0)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
441	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	130	None	replace
442	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  bu  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  bu	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	130	None	replace
443	[BUG]  [BUGGY]  if(len  >  size)  {  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,	  if(str.length()    ==    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
444	[BUG]  [BUGGY]  if(len  >  size)  {  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf	  if(str.length()    ==    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
445	[BUG]  [BUGGY]  if(len  >  size)  {  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,	  if(str.length()    ==    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
446	[BUG]  [BUGGY]  if(len  >  size)  {  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBu  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBu  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  if(str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBu	  if(str.length()    ==    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
447	[BUG]  [BUGGY]  if(len  >  size)  {  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(bu  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(bu	  if(str    ==    null    ||    str.length()    ==    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
448	[BUG]  [BUGGY]  if(len  >  size)  {  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,	  if(str    ==    null    ||    str.length()    ==    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
449	[BUG]  [BUGGY]  if(len  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }	  if(strLen    >    thisBuf.length)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
450	[BUG]  [BUGGY]  if(len  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length	  if(strLen    >    thisBuf.length)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
451	[BUG]  [BUGGY]  if(len  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,	  if(strLen    >    thisBuf.length)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
452	[BUG]  [BUGGY]  if(len  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  thisBuf.length)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,	  if(strLen    >    thisBuf.length)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
453	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	21	None	replace
454	[BUG]  [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	91	None	replace
455	[BUG]  [BUGGY]  System.arraycopy(buf,  i,  thisBuf,  startIndex,  len,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  i,  thisBuf,  startIndex,  len,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  i,  thisBuf,  startIndex,  len,	  System.arraycopy(thisBuf,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	59	None	replace
456	[BUG]  [BUGGY]  System.arraycopy(buf,  i,  thisBuf,  startIndex,  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  i,  thisBuf,  startIndex,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  i,  thisBuf,  startIndex,	  System.arraycopy(thisBuf,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	59	None	replace
457	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
458	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	126	None	replace
459	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  1];  System.arraycopy(buffer,  0,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  1];  System.arraycopy(buffer,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  1];  System.arraycopy(buffer,  0,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  <identifier>  expected	66	None	replace
460	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  <identifier>  expected	66	None	replace
461	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    	non-compiled	[CE]  <identifier>  expected	32	None	replace
462	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    	non-compiled	[CE]  <identifier>  expected	32	None	replace
463	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  this  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	21	None	replace
464	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  strLen  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  strLen  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  strLen	  System.arraycopy(thisBuf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	2	None	replace
465	[BUG]  [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	29	None	replace
466	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.get(i);  System.arraycopy(buffer,  startIndex,  buf  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.get(i);  System.arraycopy(buffer,  startIndex,  buf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.get(i);  System.arraycopy(buffer,  startIndex,  buf	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf    	non-compiled	[CE]  <identifier>  expected	68	None	replace
467	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  +  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  +  1);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	20	None	replace
468	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  chars[i]  =  new  char[size];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  chars[i]  =  new  char[size];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  chars[i]  =  new  char[size];  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    new    char[size];    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
469	[BUG]  [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	93	None	replace
470	[BUG]  [BUGGY]  Integer  i  =  indexOf(str,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  indexOf(str,  len);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  indexOf(str,  len);	  Integer    i    =    indexOf(str,    startIndex);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
471	[BUG]  [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    str[i];    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
472	[BUG]  [BUGGY]  chars[i]  =  str[i];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  chars[i]  =  str[i];  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	chars[i]  =  str[i];	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    str[i];    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
473	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  bu  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  bu	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	84	None	replace
474	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	130	None	replace
475	[BUG]  [BUGGY]  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	130	None	replace
476	[BUG]  [BUGGY]  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  bu  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  bu	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	130	None	replace
477	[BUG]  [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  i,  thisBuf,  0,	  System.arraycopy(buffer,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	58	None	replace
478	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	73	None	replace
479	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	73	None	replace
480	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j])  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j])  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j])  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
481	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  i  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  i	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	122	None	replace
482	[BUG]  [BUGGY]  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	122	None	replace
483	[BUG]  [BUGGY]  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	122	None	replace
484	[BUG]  [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	64	None	replace
485	[BUG]  [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	64	None	replace
486	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    	non-compiled	[CE]  <identifier>  expected	104	None	replace
487	[BUG]  [BUGGY]  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(bu  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(bu	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	115	None	replace
488	[BUG]  [BUGGY]  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	115	None	replace
489	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	30	None	replace
490	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	30	None	replace
491	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  this	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    this    	non-compiled	[CE]  <identifier>  expected	30	None	replace
492	[BUG]  [BUGGY]  System.arraycopy(buf,  i,  thisBuf,  0,  i  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  i,  thisBuf,  0,  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  i,  thisBuf,  0,  i	  System.arraycopy(buf,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	3	None	replace
493	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	138	None	replace
494	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  bu  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  bu	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
495	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
496	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  size  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  size  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  size	  System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	8	None	replace
497	[BUG]  [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  0,  i  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  0,  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  i,  thisBuf,  0,  i	  System.arraycopy(buffer,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	8	None	replace
498	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  -  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  -  2);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  -  2);	  System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
499	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	27	None	replace
500	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
501	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	124	None	replace
502	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	124	None	replace
503	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	124	None	replace
504	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	124	None	replace
505	[BUG]  [BUGGY]  if(strLen  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  }	  if(len    <    =    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	136	None	replace
506	[BUG]  [BUGGY]  if(strLen  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,	  if(len    <    =    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	136	None	replace
507	[BUG]  [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  size  -  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  size  -  i);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  size  -  i);	  System.arraycopy(buf,    startIndex,    buf,    i    >>    return    i;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
508	[BUG]  [BUGGY]  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }	  if(strLen    >    thisBuf.length)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
509	[BUG]  [BUGGY]  int  strLen  =  str.length;  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  int  strLen  =  str.length;  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	int  strLen  =  str.length;  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }	  if(strLen    >    thisBuf.length)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
510	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	6	None	replace
511	[BUG]  [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(size  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
512	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf	  if(i    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex];    System.arraycopy(buffer,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	137	None	replace
513	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buffer  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	102	None	replace
514	[BUG]  [BUGGY]  chars[i]  =  str.charAt(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  chars[i]  =  str.charAt(i);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	chars[i]  =  str.charAt(i);	  chars[i]    =    buffer[i];    	non-compiled	[CE]  <identifier>  expected	120	None	replace
515	[BUG]  [BUGGY]  chars[i]  =(char)str.charAt(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  chars[i]  =(char)str.charAt(i);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	chars[i]  =(char)str.charAt(i);	  chars[i]    =    buffer[i];    	non-compiled	[CE]  <identifier>  expected	120	None	replace
516	[BUG]  [BUGGY]  if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    str[i];    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
517	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str[i];  }	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    str[i];    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
518	[BUG]  [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    str[i];    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
519	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	28	None	replace
520	[BUG]  [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	28	None	replace
521	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(str.charAt(j)));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(str.charAt(j)));  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	throw  new  IllegalArgumentException( " ".equals(str.charAt(j)));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
522	[BUG]  [BUGGY]  if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]  ==  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]  ==  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]  ==  size)  {  continue  outer;  }	  if(startIndex    >    size)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
523	[BUG]  [BUGGY]  if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }	  if(chars!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
524	[BUG]  [BUGGY]  if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  size;  i++)  {  chars[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  size;  i++)  {  chars[i]  =  buffer[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(chars!=  null)  {  for(int  i  =  startIndex;  i  <  size;  i++)  {  chars[i]  =  buffer[i];  }	  if(chars!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
525	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  }	  if(size    >    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buffer,    startIndex,    buf,    	non-compiled	[CE]  <identifier>  expected	129	None	replace
526	[BUG]  [BUGGY]  if(len  >  0)  {  char[]  buf  =  str.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  char[]  buf  =  str.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  char[]  buf  =  str.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  if(len    >    0)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
527	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  bu	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    this    	non-compiled	[CE]  <identifier>  expected	106	None	replace
528	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);  }	  if(str!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
529	[BUG]  [BUGGY]  return  len  +  strLen  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  return  len  +  strLen  +  1;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  len  +  strLen  +  1;	  return    i    +    strLen    +    1;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
530	[BUG]  [BUGGY]  bucket[]  buf  =  str.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  bucket[]  buf  =  str.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	bucket[]  buf  =  str.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }	  bucket[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
531	[BUG]  [BUGGY]  Integer  i  =  startIndex  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  i  =  startIndex  +  1;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  i  =  startIndex  +  1;	  Integer    i    =    startIndex    +    strLen;    	non-compiled	[CE]  <identifier>  expected	81	None	replace
532	[BUG]  [BUGGY]  AssertionFailedError.show(buffer,  i,  len,  thisBuf,  0,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  AssertionFailedError.show(buffer,  i,  len,  thisBuf,  0,  thisBuf.length);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	AssertionFailedError.show(buffer,  i,  len,  thisBuf,  0,  thisBuf.length);	  AssertionFailedError.show(buffer,    startIndex,    len,    thisBuf,    0,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
533	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  1];  System.arraycopy(bu  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  1];  System.arraycopy(bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  1];  System.arraycopy(bu	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(bu    	non-compiled	[CE]  <identifier>  expected	114	None	replace
534	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  2];  System.arraycopy(bu  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  2];  System.arraycopy(bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  2];  System.arraycopy(bu	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(bu    	non-compiled	[CE]  <identifier>  expected	114	None	replace
535	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  *  startIndex  +  strLen];  System.arraycopy(bu  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  *  startIndex  +  strLen];  System.arraycopy(bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  *  startIndex  +  strLen];  System.arraycopy(bu	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    -    startIndex    +    strLen];    System.arraycopy(bu    	non-compiled	[CE]  <identifier>  expected	114	None	replace
536	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  -  1);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  -  1);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
537	[BUG]  [BUGGY]  System.arraycopy(buf,  i,  startIndex,  thisBuf,  i  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  i,  startIndex,  thisBuf,  i  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  i,  startIndex,  thisBuf,  i	  System.arraycopy(str,    startIndex,    buf,    i    	non-compiled	[CE]  <identifier>  expected	9	None	replace
538	[BUG]  [BUGGY]  if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  str;  }	  if(chars    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
539	[BUG]  [BUGGY]  if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  size;  i++)  {  chars[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  size;  i++)  {  chars[i]  =  buffer[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  size;  i++)  {  chars[i]  =  buffer[i];  }	  if(chars    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buffer[i];    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
540	[BUG]  [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  strLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  0,  thisBuf,  0,  strLen);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  0,  thisBuf,  0,  strLen);	  System.arraycopy(thisBuf,    0,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
541	[BUG]  [BUGGY]  if(len  <  =  size)  {  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(bu  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(bu	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	7	None	replace
542	[BUG]  [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  bu  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  bu  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  bu	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	7	None	replace
543	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length	  if(str    ==    null    ||    str.length()    ==    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
544	[BUG]  [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null  ||  str.length()  ==  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	  if(str    ==    null    ||    str.length()    ==    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
545	[BUG]  [BUGGY]  if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buf[i];  }	  if(chars!=    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    buf[i];    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
546	[BUG]  [BUGGY]  int  i  =  indexOf(str.charAt(i));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  int  i  =  indexOf(str.charAt(i));  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	int  i  =  indexOf(str.charAt(i));	  Integer    i    =    indexOf(str.charAt(i));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
547	[BUG]  [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	85	None	replace
548	[BUG]  [BUGGY]  if(i  >  size)  {  return  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(i  >  size)  {  return  0;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(i  >  size)  {  return  0;  }	  if(i    >    startIndex)    {    return    0;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
549	[BUG]  [BUGGY]  if(j  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(j  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(j  >  0)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }	  if(j    >    0)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
550	[BUG]  [BUGGY]  System.arraycopy(buf,  i,  thisBuf,  0,  buf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buf,  i,  thisBuf,  0,  buf.length);  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buf,  i,  thisBuf,  0,  buf.length);	  System.arraycopy(buf,    startIndex,    thisBuf,    0,    buf.length);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
551	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str.length()  ==  0)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str.length()  ==  0)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	  if(str.length()    ==    0)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
552	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length    	non-compiled	[CE]  <identifier>  expected	86	None	replace
553	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex  +  len;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
554	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  thisBuf[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  thisBuf[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  thisBuf[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
555	[BUG]  [BUGGY]  if(len  >  0)  {  return  1;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  return  1;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  return  1;  }	  return    1;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
556	[BUG]  [BUGGY]  if(len  >  size)  {  return  1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  return  1;  }  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  return  1;  }	  return    1;    	non-compiled	[CE]  <identifier>  expected	142	None	replace
557	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf	  if(strLen    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i    +    i];    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
558	[BUG]  [BUGGY]  if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(chars  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  thisBuf[i];  }	  if(i    >    startIndex)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    chars[i]    =    thisBuf[i];    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
559	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  1  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  1  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size  -  1	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    i    	non-compiled	[CE]  <identifier>  expected	10	None	replace
560	[BUG]  [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(thisBuf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(thisBuf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(thisBuf,  0,  thisBuf,  0,  buf.length);  }	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    buf.length);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
561	[BUG]  [BUGGY]  System.arraycopy(buffer,  i,  buf,  startIndex,  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  i,  buf,  startIndex,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  i,  buf,  startIndex,	  System.arraycopy(buffer,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	57	None	replace
562	[BUG]  [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  startIndex,  len,  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  startIndex,  len,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(buffer,  i,  thisBuf,  startIndex,  len,	  System.arraycopy(buffer,    startIndex,    buf,    i,    	non-compiled	[CE]  <identifier>  expected	57	None	replace
563	[BUG]  [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  0,  size);  size  +=  strLen;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  System.arraycopy(thisBuf,  startIndex,  buf,  0,  size);  size  +=  strLen;  [BUGGY]      }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	System.arraycopy(thisBuf,  startIndex,  buf,  0,  size);  size  +=  strLen;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    strLen);    size    +=    strLen;    	non-compiled	[CE]  <identifier>  expected	128	None	replace
564	[BUG]  [BUGGY]  if(len  <  =  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer;  }	  if(len    >    size)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
565	[BUG]  [BUGGY]  if(len  <  =  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  thisBuf[i  +  j])  {  continue  outer	  if(len    >    size)    {    char[]    buf    =    buffer.toCharArray();    for(int    i    =    startIndex;    i    <    len;    i++)    {    if(buf[i    +    j]!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
566	[BUG]  [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	101	None	replace
567	[BUG]  [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,	  if(len    >    size)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    buffer[i];    System.arraycopy(buf,    0,    	non-compiled	[CE]  <identifier>  expected	101	None	replace
568	[BUG]  [BUGGY]  Integer  strLen  =  thisBuf.length;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  Integer  strLen  =  thisBuf.length;  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	Integer  strLen  =  thisBuf.length;	  Integer    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
569	[BUG]  [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  <  =  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	5	None	replace
570	[BUG]  [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  }  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(str!=  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  }	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    0,    thisBuf,    0,    	non-compiled	[CE]  <identifier>  expected	5	None	replace
571	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }      [BUGGY]  if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this  [BUGGY]      return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	if(len  >  0)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  this	  if(str    ==    null)    {    for(int    i    =    startIndex;    i    <    len;    i++)    {    char[]    buf    =    new    char[buffer.length()    ];    System.arraycopy(buf,    startIndex,    buf,    0,    thisBuf    	non-compiled	[CE]  <identifier>  expected	105	None	replace
