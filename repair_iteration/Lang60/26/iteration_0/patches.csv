bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  i  +  1;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]  return  i  +  1;  [BUGGY]  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  i  +  1;	return  i;  	non-compiled	[CE]  <identifier>  expected	51	None	replace
2	[BUG]  [BUGGY]  return  0;  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]  return  0;  [BUGGY]  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  0;	return  i;  	non-compiled	[CE]  <identifier>  expected	51	None	replace
3	[BUG]  [BUGGY]  return  len;  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]  return  len;  [BUGGY]  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  len;	return  i;  	non-compiled	[CE]  <identifier>  expected	51	None	replace
4	[BUG]  [BUGGY]  return  i  +  strLen;  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]  return  i  +  strLen;  [BUGGY]  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  i  +  strLen;	return  i;  	non-compiled	[CE]  <identifier>  expected	51	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    [BUGGY]  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	  	return  i;  	non-compiled	[CE]  <identifier>  expected	51	None	replace
6	[BUG]  [BUGGY]    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }		non-compiled	[CE]  <identifier>  expected	52	None	add
7	[BUG]  [BUGGY]    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }		non-compiled	[CE]  <identifier>  expected	52	None	add
8	[BUG]  [BUGGY]    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);  }  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  thisBuf,  0,  buf.length);  }		non-compiled	[CE]  <identifier>  expected	52	None	add
9	[BUG]  [BUGGY]    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length);  }  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  0,  thisBuf.length);  }		non-compiled	[CE]  <identifier>  expected	52	None	add
10	[BUG]  [BUGGY]    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  i  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  i  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(str  ==  null)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buf,  startIndex,  buf,  i		non-compiled	[CE]  <identifier>  expected	52	None	add
11	[BUG]  [BUGGY]  return  startIndex;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]  return  startIndex;  [BUGGY]  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  startIndex;	return  i;  	non-compiled	[CE]  <identifier>  expected	51	None	replace
12	[BUG]  [BUGGY]  return  i  +  len;  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]  return  i  +  len;  [BUGGY]  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	return  i  +  len;	return  i;  	non-compiled	[CE]  <identifier>  expected	51	None	replace
13	[BUG]  [BUGGY]    if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }		non-compiled	[CE]  <identifier>  expected	52	None	add
14	[BUG]  [BUGGY]    if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }		non-compiled	[CE]  <identifier>  expected	52	None	add
15	[BUG]  [BUGGY]    if(i  >  startIndex)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(i  >  startIndex)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(i  >  startIndex)  {  char[]  buf  =  buffer.toCharArray();  for(int  i  =  startIndex;  i  <  len;  i++)  {  if(buf[i  +  j]!=  size)  {  continue  outer;  }		non-compiled	[CE]  <identifier>  expected	52	None	add
16	[BUG]  [BUGGY]    if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i  +  i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  buf.length);  }		non-compiled	[CE]  <identifier>  expected	52	None	add
17	[BUG]  [BUGGY]    if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(len  >  size)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  buffer[i];  System.arraycopy(buffer,  startIndex,  thisBuf,  0,		non-compiled	[CE]  <identifier>  expected	52	None	add
18	[BUG]  [BUGGY]    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  chars[i]  =  buffer[i];  }		non-compiled	[CE]  <identifier>  expected	52	None	add
19	[BUG]  [BUGGY]    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex];  System.arraycopy(buffer,  0,  thisBuf,  0,  buf.length);  }		non-compiled	[CE]  <identifier>  expected	52	None	add
20	[BUG]  [BUGGY]    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i		non-compiled	[CE]  <identifier>  expected	52	None	add
21	[BUG]  [BUGGY]    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  -  startIndex  +  strLen];  System.arraycopy(buf,  0,  thisBuf,  0,  buf.length);  }		non-compiled	[CE]  <identifier>  expected	52	None	add
22	[BUG]  [BUGGY]    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i,  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  [BUGGY]    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i,  [BUGGY]  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1784	1784	1	replace	    if(i  >  startIndex)  {  for(int  i  =  startIndex;  i  <  len;  i++)  {  char[]  buf  =  new  char[buffer.length()  ];  System.arraycopy(buffer,  startIndex,  buf,  i,		non-compiled	[CE]  <identifier>  expected	52	None	add
