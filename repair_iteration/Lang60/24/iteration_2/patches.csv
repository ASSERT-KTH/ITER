bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  strLen  =  thisBuf[j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[j];	  int    strLen    =    thisBuf[i];    	non-compiled	[CE]  <identifier>  expected	36	None	replace
2	[BUG]  [BUGGY]  char  strLen  =  thisBuf[i];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char  strLen  =  thisBuf[i];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char  strLen  =  thisBuf[i];	  int    strLen    =    thisBuf[i];    	non-compiled	[CE]  <identifier>  expected	36	None	replace
3	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  1];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  1];	  int    strLen    =    thisBuf[i];    	non-compiled	[CE]  <identifier>  expected	36	None	replace
4	[BUG]  [BUGGY]  if  (j  ==  thisBuf[i  +  j]  ||  startIndex  >=  strLen)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if  (j  ==  thisBuf[i  +  j]  ||  startIndex  >=  strLen)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (j  ==  thisBuf[i  +  j]  ||  startIndex  >=  strLen)  {	  if    (j    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  if  (j  ==  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if  (j  ==  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (j  ==  thisBuf[i  +  j]  ||  startIndex  >=  size)  {	  if    (j    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(buffer[i  +  strLen]);	  ((    char)str.charAt(j)).append(buffer[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
7	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(buffer[i  +  1]);	  ((    char)str.charAt(j)).append(buffer[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
8	[BUG]  [BUGGY]  ((  String)thisBuf[j]).reset();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)thisBuf[j]).reset();  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)thisBuf[j]).reset();	  ((    char)thisBuf[j]).reset();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
9	[BUG]  [BUGGY]  ((  char)thisBuf[j]).getText();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)thisBuf[j]).getText();  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)thisBuf[j]).getText();	  ((    char)thisBuf[j]).reset();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
10	[BUG]  [BUGGY]  ((  char)thisBuf[j]).getChars(startIndex,  endIndex);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)thisBuf[j]).getChars(startIndex,  endIndex);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)thisBuf[j]).getChars(startIndex,  endIndex);	  ((    char)thisBuf[j]).reset();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
11	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf[j  +  1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf[j  +  1];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf[j  +  1];	  chars[]    buf    =(char)thisBuf[i    +    1];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
12	[BUG]  [BUGGY]  ((  String)str.charAt(j)).append(thisBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).append(thisBuf[i  +  1]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).append(thisBuf[i  +  1]);	  ((    char)str.charAt(j)).append(thisBuf[i    +    1]);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
13	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length  -  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf.length  -  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf.length  -  1;	  int    strLen    =    thisBuf.length;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
14	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf.length  +  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf.length  +  1;	  int    strLen    =    thisBuf.length;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
15	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length  -  j;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf.length  -  j;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf.length  -  j;	  int    strLen    =    thisBuf.length;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
16	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length  +  j;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf.length  +  j;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf.length  +  j;	  int    strLen    =    thisBuf.length;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
17	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i].length()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i].length()  +  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i].length()  +  1;	  int    strLen    =    thisBuf[i].length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
18	[BUG]  [BUGGY]  int  strLen  =  thisBuf[j].length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[j].length();  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[j].length();	  int    strLen    =    thisBuf[i].length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
19	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i].length()  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i].length()  -  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i].length()  -  1;	  int    strLen    =    thisBuf[i].length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
20	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf.length()  +  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf.length()  +  1;	  int    strLen    =    str.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
21	[BUG]  [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  i  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  i  +  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).addToString(buffer,  i  +  1);	  ((    char)str.charAt(j)).addToString(buffer,    i    +    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
22	[BUG]  [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  i  +  1,  strLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  i  +  1,  strLen);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).addToString(buffer,  i  +  1,  strLen);	  ((    char)str.charAt(j)).addToString(buffer,    i    +    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
23	[BUG]  [BUGGY]  ((  String)str.charAt(j)).addToString(buffer,  i  +  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).addToString(buffer,  i  +  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).addToString(buffer,  i  +  len);	  ((    char)str.charAt(j)).addToString(buffer,    i    +    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
24	[BUG]  [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  startIndex,  len  +  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  startIndex,  len  +  i);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).addToString(buffer,  startIndex,  len  +  i);	  ((    char)str.charAt(j)).addToString(buffer,    i    +    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
25	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  j;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  str.length()  -  j;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  str.length()  -  j;	  int    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
26	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  i;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  str.length()  -  i;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  str.length()  -  i;	  int    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
27	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length()  -  startIndex;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf.length()  -  startIndex;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf.length()  -  startIndex;	  int    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
28	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length()  -  j;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf.length()  -  j;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf.length()  -  j;	  int    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
29	[BUG]  [BUGGY]  String  strLen  =  thisBuf[i  +  j];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  String  strLen  =  thisBuf[i  +  j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	String  strLen  =  thisBuf[i  +  j];	  char    strLen    =    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
30	[BUG]  [BUGGY]  char  strLen  =  thisBuf[j  +  i];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char  strLen  =  thisBuf[j  +  i];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char  strLen  =  thisBuf[j  +  i];	  char    strLen    =    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
31	[BUG]  [BUGGY]  ((  String)str.charAt(j)).setCurrentLength(i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).setCurrentLength(i);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).setCurrentLength(i);	  ((    String)str.charAt(j)).reset();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
32	[BUG]  [BUGGY]  ((  String)str.charAt(j)).addToString(thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).addToString(thisBuf[i  +  j]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).addToString(thisBuf[i  +  j]);	  ((    String)str.charAt(j)).reset();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
33	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j]  -  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j]  -  2;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j]  -  2;	  int    strLen    =    thisBuf[i    +    j]    -    1;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
34	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j]  -  size;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j]  -  size;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j]  -  size;	  int    strLen    =    thisBuf[i    +    j]    -    1;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
35	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j],  size  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j],  size  -  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j],  size  -  1;	  int    strLen    =    thisBuf[i    +    j]    -    1;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
36	[BUG]  [BUGGY]  ((  String)str.charAt(j)).append(thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).append(thisBuf[i  +  j]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).append(thisBuf[i  +  j]);	  ((    char)str.charAt(i)).append(thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
37	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append(buffer[i  +  j]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(i)).append(buffer[i  +  j]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(i)).append(buffer[i  +  j]);	  ((    char)str.charAt(i)).append(thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
38	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  <  len)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  <  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  <  len)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    <    size)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
39	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  size;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  size;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j]  &  size;	  int    strLen    =    thisBuf[i    +    j]    &    0xFFFF;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
40	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  0xFFF;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  0xFFF;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j]  &  0xFFF;	  int    strLen    =    thisBuf[i    +    j]    &    0xFFFF;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
41	[BUG]  [BUGGY]  int  strLen  =  thisBuf[j  +  i]  &  0xFFFF;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[j  +  i]  &  0xFFFF;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[j  +  i]  &  0xFFFF;	  int    strLen    =    thisBuf[i    +    j]    &    0xFFFF;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
42	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  startIndex  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  startIndex  +  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(thisBuf,  startIndex  +  1);	  ((    char)str.charAt(j)).computeValue(thisBuf,    startIndex);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
43	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  i);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(thisBuf,  i);	  ((    char)str.charAt(j)).computeValue(thisBuf,    startIndex);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
44	[BUG]  [BUGGY]  ((  String)str.charAt(j)).computeValue(thisBuf,  startIndex);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).computeValue(thisBuf,  startIndex);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).computeValue(thisBuf,  startIndex);	  ((    char)str.charAt(j)).computeValue(thisBuf,    startIndex);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
45	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  startIndex,  len);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  startIndex,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(thisBuf,  startIndex,  len);	  ((    char)str.charAt(j)).computeValue(thisBuf,    startIndex);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
46	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf.get(i  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf.get(i  +  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf.get(i  +  1);	  chars[]    buf    =(char)thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
47	[BUG]  [BUGGY]  char[]  buf  =(char)thisBuf.get(j);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char)thisBuf.get(j);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char)thisBuf.get(j);	  chars[]    buf    =(char)thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
48	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf.get(j  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf.get(j  +  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf.get(j  +  1);	  chars[]    buf    =(char)thisBuf.get(j);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
49	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf.get(j  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf.get(j  -  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf.get(j  -  1);	  chars[]    buf    =(char)thisBuf.get(j);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
50	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(i  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf.get(i  +  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf.get(i  +  1);	  char[]    buf    =(char[])thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
51	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(i  +  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf.get(i  +  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf.get(i  +  len);	  char[]    buf    =(char[])thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
52	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >=  len)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >=  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >=  len)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    >=    size)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
53	[BUG]  [BUGGY]  if(str.charAt(j)  >=  thisBuf[i  +  j]  ||  i  >  size)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)  >=  thisBuf[i  +  j]  ||  i  >  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)  >=  thisBuf[i  +  j]  ||  i  >  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    >=    size)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
54	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(j  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf.get(j  +  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf.get(j  +  1);	  char[]    buf    =(char[])thisBuf.get(j);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
55	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(j  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf.get(j  -  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf.get(j  -  1);	  char[]    buf    =(char[])thisBuf.get(j);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
56	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j]  |  0xff;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j]  |  0xff;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j]  |  0xff;	  int    strLen    =    thisBuf[i    +    j]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
57	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j]  &  1;	  int    strLen    =    thisBuf[i    +    j]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
58	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[j  +  j];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[j  +  j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[j  +  j];	  char[]    buf    =(char[])thisBuf[j    +    i];    	non-compiled	[CE]  <identifier>  expected	24	None	replace
59	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  ==  len)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  ==  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  ==  len)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    ==    size)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
60	[BUG]  [BUGGY]  char[]  buf  =  thisBuf[i  +  j],  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  thisBuf[i  +  j],  buffer[i  +  j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  thisBuf[i  +  j],  buffer[i  +  j];	  char[]    buf    =    buffer[i    +    j],    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	43	None	replace
61	[BUG]  [BUGGY]  char[]  buf  =  buffer[i  +  j],  thisBuf[i  +  strLen];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  buffer[i  +  j],  thisBuf[i  +  strLen];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  buffer[i  +  j],  thisBuf[i  +  strLen];	  char[]    buf    =    buffer[i    +    j],    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	43	None	replace
62	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  >=  size)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  >=  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  >=  size)  {	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    i    >    size)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
63	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  <  size)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  <  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  <  size)  {	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    i    >    size)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
64	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  len  >  size)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  len  >  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  len  >  size)  {	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    i    >    size)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
65	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  <  =  size)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  <  =  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  <  =  size)  {	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    i    >    size)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
66	[BUG]  [BUGGY]  ((  String)str.charAt(j)).replaceAll(thisBuf,  0,  startIndex);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).replaceAll(thisBuf,  0,  startIndex);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).replaceAll(thisBuf,  0,  startIndex);	  ((    char)str.charAt(j)).replaceAll(thisBuf,    0,    startIndex);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
67	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf[i  *  strLen];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf[i  *  strLen];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf[i  *  strLen];	  chars[]    buf    =(char)thisBuf[i    *    j];    	non-compiled	[CE]  <identifier>  expected	73	None	replace
68	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf[i  *  len];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf[i  *  len];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf[i  *  len];	  chars[]    buf    =(char)thisBuf[i    *    j];    	non-compiled	[CE]  <identifier>  expected	73	None	replace
69	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf[j  *  len];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf[j  *  len];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf[j  *  len];	  chars[]    buf    =(char)thisBuf[i    *    j];    	non-compiled	[CE]  <identifier>  expected	73	None	replace
70	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >  size)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >  size)  {	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >=    size)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
71	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  len)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  len)  {	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >=    size)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
72	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  len)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  len)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    startIndex    >    len)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
73	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  ==  len)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  ==  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  ==  len)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    startIndex    >    len)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
74	[BUG]  [BUGGY]  ((  String)str.charAt(j)).append(thisBuf[i  +  len]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).append(thisBuf[i  +  len]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).append(thisBuf[i  +  len]);	  ((    char)str.charAt(j)).append(thisBuf[i    +    len]);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
75	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf[j  +  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf[j  +  j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf[j  +  j];	  chars[]    buf    =(char)thisBuf[j    +    i];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
76	[BUG]  [BUGGY]  ((  String)str.charAt(j)).replaceAll(thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).replaceAll(thisBuf,  0,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).replaceAll(thisBuf,  0,  len);	  ((    String)str.charAt(j)).replaceAll(thisBuf,    0,    i);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
77	[BUG]  [BUGGY]  ((  String)str.charAt(j)).replaceAll(thisBuf,  0,  strLen  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).replaceAll(thisBuf,  0,  strLen  -  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).replaceAll(thisBuf,  0,  strLen  -  1);	  ((    String)str.charAt(j)).replaceAll(thisBuf,    0,    i);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
78	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replaceAll(thisBuf,  0,  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).replaceAll(thisBuf,  0,  i);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).replaceAll(thisBuf,  0,  i);	  ((    String)str.charAt(j)).replaceAll(thisBuf,    0,    i);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
79	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[buffer[j  +  i];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[buffer[j  +  i];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[buffer[j  +  i];	  char[]    buf    =(char[])thisBuf[buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
80	[BUG]  [BUGGY]  char[]  buf  =(char[])str[buffer[i  +  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])str[buffer[i  +  j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])str[buffer[i  +  j];	  char[]    buf    =(char[])thisBuf[buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
81	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  j]).append('0');  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  j]).append('0');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(buffer[i  +  j]).append('0');	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('0');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
82	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  len]).append('0');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  len]).append('0');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  len]).append('0');	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('0');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
83	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  strLen]).append('0');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  strLen]).append('0');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  strLen]).append('0');	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('0');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
84	[BUG]  [BUGGY]  char[]  buf  =  thisBuf.get(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  thisBuf.get(i);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  thisBuf.get(i);	  char[]    buf    =    buffer.get(i);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
85	[BUG]  [BUGGY]  char[]  buf  =  thisBuf.get(j);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  thisBuf.get(j);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  thisBuf.get(j);	  char[]    buf    =    buffer.get(i);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
86	[BUG]  [BUGGY]  char[]  buf  =  str.get(i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  str.get(i);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  str.get(i);	  char[]    buf    =    buffer.get(i);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
87	[BUG]  [BUGGY]  String  strLen  =  str.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  String  strLen  =  str.length();  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	String  strLen  =  str.length();	  char    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
88	[BUG]  [BUGGY]  char  strLen  =  thisBuf.length();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char  strLen  =  thisBuf.length();  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char  strLen  =  thisBuf.length();	  char    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
89	[BUG]  [BUGGY]  char  strLen  =  thisBuf[j];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char  strLen  =  thisBuf[j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char  strLen  =  thisBuf[j];	  char    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
90	[BUG]  [BUGGY]  ((  String)str.charAt(j)).replaceAll(thisBuf,  0,  size);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).replaceAll(thisBuf,  0,  size);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).replaceAll(thisBuf,  0,  size);	  ((    char)str.charAt(j)).replaceAll(thisBuf,    0,    size);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
91	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[i  *  strLen];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[i  *  strLen];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[i  *  strLen];	  char[]    buf    =(char[])thisBuf[i    *    j];    	non-compiled	[CE]  <identifier>  expected	75	None	replace
92	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[i  *  len];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[i  *  len];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[i  *  len];	  char[]    buf    =(char[])thisBuf[i    *    j];    	non-compiled	[CE]  <identifier>  expected	75	None	replace
93	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[j  *  len];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[j  *  len];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[j  *  len];	  char[]    buf    =(char[])thisBuf[i    *    j];    	non-compiled	[CE]  <identifier>  expected	75	None	replace
94	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replaceAll(buffer,  0,  strLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).replaceAll(buffer,  0,  strLen);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).replaceAll(buffer,  0,  strLen);	  ((    char)str.charAt(j)).replaceAll(buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
95	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replaceAll(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).replaceAll(buffer,  0,  size);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).replaceAll(buffer,  0,  size);	  ((    char)str.charAt(j)).replaceAll(buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
96	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replaceAll(buffer,  0,  strLen  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).replaceAll(buffer,  0,  strLen  +  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).replaceAll(buffer,  0,  strLen  +  1);	  ((    char)str.charAt(j)).replaceAll(buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
97	[BUG]  [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  endIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  endIndex  >=  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  endIndex  >=  len)  {	  if    (str.charAt(j)    ==    thisBuf[i    +    j]    ||    endIndex    >=    size)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
98	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.get(j  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])buffer.get(j  +  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])buffer.get(j  +  1);	  char[]    buf    =(char[])buffer.get(j);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
99	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.get(j  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])buffer.get(j  -  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])buffer.get(j  -  1);	  char[]    buf    =(char[])buffer.get(j);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
100	[BUG]  [BUGGY]  chars[]  buf  =(char)buffer.get(j);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)buffer.get(j);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)buffer.get(j);	  chars[]    buf    =(char)buffer.get(i);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
101	[BUG]  [BUGGY]  char[]  buf  =(char)thisBuf.get(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char)thisBuf.get(i);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char)thisBuf.get(i);	  chars[]    buf    =(char)buffer.get(i);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
102	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  j]).append('-');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  j]).append('-');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(buffer[i  +  j]).append('-');	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('-');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
103	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  len]).append('-');  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  len]).append('-');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  len]).append('-');	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('-');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
104	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  strLen]).append('-');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  strLen]).append('-');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  strLen]).append('-');	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('-');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
105	[BUG]  [BUGGY]  char[]  buf  =  thisBuf[i  +  strLen];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  thisBuf[i  +  strLen];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  thisBuf[i  +  strLen];	  char[]    buf    =    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
106	[BUG]  [BUGGY]  char[]  buf  =  thisBuf[i  +  j  +  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  thisBuf[i  +  j  +  1];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  thisBuf[i  +  j  +  1];	  char[]    buf    =    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
107	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len]).append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len]).append('n');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(buffer[i  +  len]).append('n');	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
108	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]).append('n');  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]).append('n');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(buffer[i  +  1]).append('n');	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	22	None	replace
109	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf[buffer[i  +  j]  &  0xff;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf[buffer[i  +  j]  &  0xff;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf[buffer[i  +  j]  &  0xff;	  chars[]    buf    =(char)thisBuf[buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
110	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf[buffer[j  +  i];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf[buffer[j  +  i];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf[buffer[j  +  i];	  chars[]    buf    =(char)thisBuf[buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
111	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  <  =  len)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  <  =  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  <  =  len)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    >    len)    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
112	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j],  size);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j],  size);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j],  size);	  int    strLen    =    thisBuf[i    +    j],    len);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
113	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j],  size,  len);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j],  size,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j],  size,  len);	  int    strLen    =    thisBuf[i    +    j],    len);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
114	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j],  width,  len);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j],  width,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j],  width,  len);	  int    strLen    =    thisBuf[i    +    j],    len);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
115	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[j  +  1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[j  +  1];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[j  +  1];	  char[]    buf    =(char[])thisBuf[i    +    1];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
116	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[i  +  2];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[i  +  2];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[i  +  2];	  char[]    buf    =(char[])thisBuf[i    +    1];    	non-compiled	[CE]  <identifier>  expected	25	None	replace
117	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  ==  size)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  ==  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  ==  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    len    >    size)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
118	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  <  =  size)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  <  =  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  <  =  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    len    >    size)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
119	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  >=  size)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  >=  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  >=  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    len    >    size)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
120	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  <  size)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  <  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  len  <  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    len    >    size)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
121	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  0xF;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  0xF;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j]  &  0xF;	  int    strLen    =    thisBuf[i    +    j]    &    0xFF;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
122	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  0x7F;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  0x7F;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j]  &  0x7F;	  int    strLen    =    thisBuf[i    +    j]    &    0xFF;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
123	[BUG]  [BUGGY]  ((  char)thisBuf[j]).replaceAll(buffer,  0,  strLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)thisBuf[j]).replaceAll(buffer,  0,  strLen);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)thisBuf[j]).replaceAll(buffer,  0,  strLen);	  ((    char)thisBuf[j]).replaceAll(str,    0,    strLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
124	[BUG]  [BUGGY]  ((  char)thisBuf[j]).replaceAll(buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)thisBuf[j]).replaceAll(buffer,  0,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)thisBuf[j]).replaceAll(buffer,  0,  len);	  ((    char)thisBuf[j]).replaceAll(str,    0,    strLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
125	[BUG]  [BUGGY]  ((  String)thisBuf[j]).replaceAll(str,  0,  strLen);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)thisBuf[j]).replaceAll(str,  0,  strLen);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)thisBuf[j]).replaceAll(str,  0,  strLen);	  ((    char)thisBuf[j]).replaceAll(str,    0,    strLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
126	[BUG]  [BUGGY]  ((  char)thisBuf[j]).replaceAll(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)thisBuf[j]).replaceAll(buffer,  0,  size);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)thisBuf[j]).replaceAll(buffer,  0,  size);	  ((    char)thisBuf[j]).replaceAll(str,    0,    strLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
127	[BUG]  [BUGGY]  ((  String)str.charAt(j)).computeValue(buffer,  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).computeValue(buffer,  i);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).computeValue(buffer,  i);	  ((    char)str.charAt(j)).computeValue(buffer,    i);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
128	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  i  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  i  +  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(buffer,  i  +  1);	  ((    char)str.charAt(j)).computeValue(buffer,    i);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
129	[BUG]  [BUGGY]  ((  char)thisBuf[j]).computeValue(buffer,  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)thisBuf[j]).computeValue(buffer,  i);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)thisBuf[j]).computeValue(buffer,  i);	  ((    char)str.charAt(j)).computeValue(buffer,    i);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
130	[BUG]  [BUGGY]  ((  char)str.charAt(j)).insert(thisBuf,  startIndex,  len);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).insert(thisBuf,  startIndex,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).insert(thisBuf,  startIndex,  len);	  ((    char)str.charAt(j)).insert(startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
131	[BUG]  [BUGGY]  ((  char)str.charAt(j)).insert(startIndex,  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).insert(startIndex,  size);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).insert(startIndex,  size);	  ((    char)str.charAt(j)).insert(startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
132	[BUG]  [BUGGY]  ((  String)str.charAt(j)).insert(startIndex,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).insert(startIndex,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).insert(startIndex,  len);	  ((    char)str.charAt(j)).insert(startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
133	[BUG]  [BUGGY]  ((  char)str.charAt(j)).insert(startIndex,  len  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).insert(startIndex,  len  +  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).insert(startIndex,  len  +  1);	  ((    char)str.charAt(j)).insert(startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
134	[BUG]  [BUGGY]  if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  ==  size)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  ==  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  ==  size)  {	  if    (str.charAt(j)!=    thisBuf[i    +    j]    ||    endIndex    >    size)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
135	[BUG]  [BUGGY]  if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  <  size)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  <  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  <  size)  {	  if    (str.charAt(j)!=    thisBuf[i    +    j]    ||    endIndex    >    size)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
136	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length()  +  j;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf.length()  +  j;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf.length()  +  j;	  int    strLen    =    thisBuf.length();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
137	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf.length()  -  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf.length()  -  1;	  int    strLen    =    thisBuf.length();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
138	[BUG]  [BUGGY]  char[]  buf  =(char)thisBuf.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char)thisBuf.clone();  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char)thisBuf.clone();	  chars[]    buf    =(char)thisBuf.clone();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
139	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  j]).append('/');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  j]).append('/');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(buffer[i  +  j]).append('/');	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('/');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
140	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  len]).append('/');  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  len]).append('/');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  len]).append('/');	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('/');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
141	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  strLen]).append('/');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  strLen]).append('/');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  strLen]).append('/');	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('/');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
142	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replaceAll(thisBuf,  0,  strLen  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).replaceAll(thisBuf,  0,  strLen  +  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).replaceAll(thisBuf,  0,  strLen  +  1);	  ((    char)str.charAt(j)).replaceAll(thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
143	[BUG]  [BUGGY]  ((  String)str.charAt(j)).append(thisBuf[i  +  strLen]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).append(thisBuf[i  +  strLen]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).append(thisBuf[i  +  strLen]);	  ((    char)str.charAt(j)).append(thisBuf[i    +    strLen]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
144	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  0,  strLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  0,  strLen);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(thisBuf,  0,  strLen);	  ((    char)str.charAt(j)).computeValue(thisBuf,    0,    size);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
145	[BUG]  [BUGGY]  ((  String)str.charAt(j)).computeValue(thisBuf,  0,  size);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).computeValue(thisBuf,  0,  size);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).computeValue(thisBuf,  0,  size);	  ((    char)str.charAt(j)).computeValue(thisBuf,    0,    size);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
146	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  0,  size  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  0,  size  -  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(thisBuf,  0,  size  -  1);	  ((    char)str.charAt(j)).computeValue(thisBuf,    0,    size);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
147	[BUG]  [BUGGY]  if(str.charAt(j)>  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)>  thisBuf[i  +  j])  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)>  thisBuf[i  +  j])  {	  if(str.charAt(j)    >=    thisBuf[i    +    j])    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
148	[BUG]  [BUGGY]  ((  String)str.charAt(j)).computeValue(thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).computeValue(thisBuf,  0,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).computeValue(thisBuf,  0,  len);	  ((    char)str.charAt(j)).computeValue(thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
149	[BUG]  [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  size)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  size)  {	  if    (str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >    len)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
150	[BUG]  [BUGGY]  ((  char)str.charAt(j)).addToString(buffer[i  +  j]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).addToString(buffer[i  +  j]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).addToString(buffer[i  +  j]);	  ((    char)str.charAt(j)).addToString(thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
151	[BUG]  [BUGGY]  ((  char)str.charAt(j)).addToString(thisBuf[i  +  strLen]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).addToString(thisBuf[i  +  strLen]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).addToString(thisBuf[i  +  strLen]);	  ((    char)str.charAt(j)).addToString(thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
152	[BUG]  [BUGGY]  ((  char)str.charAt(j)).addToString(thisBuf[i  +  len]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).addToString(thisBuf[i  +  len]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).addToString(thisBuf[i  +  len]);	  ((    char)str.charAt(j)).addToString(thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
153	[BUG]  [BUGGY]  if  (str.charAt(j)  >=  thisBuf[i  +  j]  ||  endIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if  (str.charAt(j)  >=  thisBuf[i  +  j]  ||  endIndex  >=  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (str.charAt(j)  >=  thisBuf[i  +  j]  ||  endIndex  >=  len)  {	  if    (str.charAt(j)!=    thisBuf[i    +    j]    ||    endIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
154	[BUG]  [BUGGY]  int  strLen  =  str.length()  +  j  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  str.length()  +  j  +  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  str.length()  +  j  +  1;	  int    strLen    =    str.length()    +    j;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
155	[BUG]  [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  startIndex,  i  +  len);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  startIndex,  i  +  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).addToString(buffer,  startIndex,  i  +  len);	  ((    char)str.charAt(j)).addToString(buffer,    i    +    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
156	[BUG]  [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  startIndex  +  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  startIndex  +  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).addToString(buffer,  startIndex  +  len);	  ((    char)str.charAt(j)).addToString(buffer,    i    +    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
157	[BUG]  [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  0,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).addToString(buffer,  0,  len);	  ((    char)str.charAt(j)).addToString(buffer,    i    +    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
158	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append(thisBuf[i  +  j]).append('-');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(i)).append(thisBuf[i  +  j]).append('-');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(i)).append(thisBuf[i  +  j]).append('-');	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('-');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
159	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('-')+  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('-')+  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('-')+  1;	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('-');    	non-compiled	[CE]  <identifier>  expected	56	None	replace
160	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(buffer[i  +  len]);	  ((    char)str.charAt(j)).append(buffer[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
161	[BUG]  [BUGGY]  char[]  buf  =  buffer[i  +  j],  size[i  +  j];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  buffer[i  +  j],  size[i  +  j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  buffer[i  +  j],  size[i  +  j];	  char[]    buf    =    buffer[i    +    j],    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	43	None	replace
162	[BUG]  [BUGGY]  char[]  buf  =  buffer[i  +  j],  len[i  +  j];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  buffer[i  +  j],  len[i  +  j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  buffer[i  +  j],  len[i  +  j];	  char[]    buf    =    buffer[i    +    j],    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	43	None	replace
163	[BUG]  [BUGGY]  ((  String)str.charAt(i)).append(thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(i)).append(thisBuf[i  +  j]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(i)).append(thisBuf[i  +  j]);	  ((    char)str.charAt(i)).append(thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
164	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf[buffer[j  +  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf[buffer[j  +  j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf[buffer[j  +  j];	  chars[]    buf    =(char)thisBuf[j    +    i];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
165	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  0,  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  0,  i);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(thisBuf,  0,  i);	  ((    char)str.charAt(j)).computeValue(thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
166	[BUG]  [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  endIndex  >  size)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  endIndex  >  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  endIndex  >  size)  {	  if    (str.charAt(j)    ==    thisBuf[i    +    j]    ||    endIndex    >=    size)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
167	[BUG]  [BUGGY]  chars[]  buf  =(char)buffer.clone();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)buffer.clone();  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)buffer.clone();	  chars[]    buf    =(char)thisBuf.clone();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
168	[BUG]  [BUGGY]  ((  String)str.charAt(j)).reset(i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).reset(i);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).reset(i);	  ((    String)str.charAt(j)).reset();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
169	[BUG]  [BUGGY]  ((  char)str.charAt(j)).insert(thisBuf,  startIndex);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).insert(thisBuf,  startIndex);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).insert(thisBuf,  startIndex);	  ((    char)str.charAt(j)).insert(startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
170	[BUG]  [BUGGY]  ((  char)str.charAt(j)).insert(buffer,  startIndex,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).insert(buffer,  startIndex,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).insert(buffer,  startIndex,  len);	  ((    char)str.charAt(j)).insert(startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
171	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf.length  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf.length  +  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf.length  +  1;	  chars[]    buf    =(char)thisBuf.length;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
172	[BUG]  [BUGGY]  ((  char)thisBuf[j]).append(buffer,  startIndex  +  strLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)thisBuf[j]).append(buffer,  startIndex  +  strLen);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)thisBuf[j]).append(buffer,  startIndex  +  strLen);	  ((    char)thisBuf[j]).reset();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
173	[BUG]  [BUGGY]  ((  char)thisBuf[j]).append(buffer[i  +  j]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)thisBuf[j]).append(buffer[i  +  j]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)thisBuf[j]).append(buffer[i  +  j]);	  ((    char)thisBuf[j]).reset();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
174	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append(thisBuf[i  +  j]).append('/');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(i)).append(thisBuf[i  +  j]).append('/');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(i)).append(thisBuf[i  +  j]).append('/');	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('/');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
175	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('/',  len);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('/',  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('/',  len);	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('/');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
176	[BUG]  [BUGGY]  ((  char)str.charAt(i)).addToString(thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(i)).addToString(thisBuf[i  +  j]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(i)).addToString(thisBuf[i  +  j]);	  ((    char)str.charAt(j)).addToString(thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
177	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  0,  startIndex);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  0,  startIndex);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(thisBuf,  0,  startIndex);	  ((    char)str.charAt(j)).computeValue(thisBuf,    startIndex);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
178	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  startIndex);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  startIndex);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(buffer,  startIndex);	  ((    char)str.charAt(j)).computeValue(thisBuf,    startIndex);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
179	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  0,  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  0,  i);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(buffer,  0,  i);	  ((    char)str.charAt(j)).computeValue(buffer,    i);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
180	[BUG]  [BUGGY]  char  strLen  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char  strLen  =  buffer[i  +  j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char  strLen  =  buffer[i  +  j];	  char    strLen    =    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
181	[BUG]  [BUGGY]  char  strLen  =  thisBuf[i  +  j]  *  size;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char  strLen  =  thisBuf[i  +  j]  *  size;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char  strLen  =  thisBuf[i  +  j]  *  size;	  char    strLen    =    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
182	[BUG]  [BUGGY]  ((  char)thisBuf[j]).replaceAll(buffer,  0,  startIndex);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)thisBuf[j]).replaceAll(buffer,  0,  startIndex);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)thisBuf[j]).replaceAll(buffer,  0,  startIndex);	  ((    char)thisBuf[j]).replaceAll(str,    0,    strLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
183	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i].length()  +  j;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i].length()  +  j;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i].length()  +  j;	  int    strLen    =    thisBuf[i].length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
184	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j].length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j].length();  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j].length();	  int    strLen    =    thisBuf[i].length();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
185	[BUG]  [BUGGY]  Integer  strLen  =  str.length();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  Integer  strLen  =  str.length();  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	Integer  strLen  =  str.length();	  int    strLen    =    str.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
186	[BUG]  [BUGGY]  int  strLen  =  str.length()  /  j;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  str.length()  /  j;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  str.length()  /  j;	  int    strLen    =    str.length()    +    j;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
187	[BUG]  [BUGGY]  char[]  buf  =  buffer[j  +  i];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  buffer[j  +  i];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  buffer[j  +  i];	  char[]    buf    =    buffer[i    +    strLen];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
188	[BUG]  [BUGGY]  char[]  buf  =  buffer[buffer.length  +  j];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  buffer[buffer.length  +  j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  buffer[buffer.length  +  j];	  char[]    buf    =    buffer[i    +    strLen];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
189	[BUG]  [BUGGY]  ((  String)str.charAt(j)).replaceAll(thisBuf,  0,  i  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).replaceAll(thisBuf,  0,  i  +  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).replaceAll(thisBuf,  0,  i  +  1);	  ((    String)str.charAt(j)).replaceAll(thisBuf,    0,    i);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
190	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  ==  size)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  ==  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  ==  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    startIndex    <    size)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
191	[BUG]  [BUGGY]  int  strLen  =  size[thisBuf[i  +  j]  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  size[thisBuf[i  +  j]  -  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  size[thisBuf[i  +  j]  -  1;	  int    strLen    =    thisBuf[i    +    j]    -    1;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
192	[BUG]  [BUGGY]  int  strLen  =  size[i  +  j]  -  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  size[i  +  j]  -  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  size[i  +  j]  -  1;	  int    strLen    =    thisBuf[i    +    j]    -    1;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
193	[BUG]  [BUGGY]  int  strLen  =  thisBuf[j  +  i]  &  0xff;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[j  +  i]  &  0xff;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[j  +  i]  &  0xff;	  int    strLen    =    thisBuf[i    +    j]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
194	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf.get(i  +  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf.get(i  +  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf.get(i  +  len);	  chars[]    buf    =(char)thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
195	[BUG]  [BUGGY]  if(str.charAt(j)  <  =  thisBuf[i  +  j]  ||  i  >  size)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)  <  =  thisBuf[i  +  j]  ||  i  >  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)  <  =  thisBuf[i  +  j]  ||  i  >  size)  {	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    i    >    size)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
196	[BUG]  [BUGGY]  int  strLen  =  buffer[i];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  buffer[i];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  buffer[i];	  int    strLen    =    thisBuf[i];    	non-compiled	[CE]  <identifier>  expected	36	None	replace
197	[BUG]  [BUGGY]  if  (str.charAt(j)  >=  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if  (str.charAt(j)  >=  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (str.charAt(j)  >=  thisBuf[i  +  j]  ||  startIndex  >=  size)  {	  if    (str.charAt(j)    >=    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
198	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[j  *  i];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[j  *  i];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[j  *  i];	  char[]    buf    =(char[])thisBuf[i    *    j];    	non-compiled	[CE]  <identifier>  expected	75	None	replace
199	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j],  startIndex);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j],  startIndex);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j],  startIndex);	  int    strLen    =    thisBuf[i    +    j],    len);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
200	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf[buffer[i  +  j]  *  size;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf[buffer[i  +  j]  *  size;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf[buffer[i  +  j]  *  size;	  chars[]    buf    =(char)thisBuf[buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
201	[BUG]  [BUGGY]  char[]  buf  =(char)buffer.get(j);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char)buffer.get(j);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char)buffer.get(j);	  chars[]    buf    =(char)buffer.get(i);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
202	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replaceAll(thisBuf,  0,  startIndex  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).replaceAll(thisBuf,  0,  startIndex  +  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).replaceAll(thisBuf,  0,  startIndex  +  1);	  ((    char)str.charAt(j)).replaceAll(thisBuf,    0,    startIndex);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
203	[BUG]  [BUGGY]  char  strLen  =  str.length()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char  strLen  =  str.length()  +  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char  strLen  =  str.length()  +  1;	  char    strLen    =    str.length();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
204	[BUG]  [BUGGY]  char[]  buf  =(char[])buffer.get(j  -  startIndex);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])buffer.get(j  -  startIndex);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])buffer.get(j  -  startIndex);	  char[]    buf    =(char[])buffer.get(j);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
205	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replaceAll(buffer,  0,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).replaceAll(buffer,  0,  thisBuf.length);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).replaceAll(buffer,  0,  thisBuf.length);	  ((    char)str.charAt(j)).replaceAll(buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
206	[BUG]  [BUGGY]  ((  String)str.charAt(j)).replaceAll(buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).replaceAll(buffer,  0,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).replaceAll(buffer,  0,  len);	  ((    char)str.charAt(j)).replaceAll(buffer,    0,    len);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
207	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[buffer[i  +  j]  *  size;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[buffer[i  +  j]  *  size;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[buffer[i  +  j]  *  size;	  char[]    buf    =(char[])thisBuf[buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
208	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[buffer[i  +  j]  &  0xff;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[buffer[i  +  j]  &  0xff;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[buffer[i  +  j]  &  0xff;	  char[]    buf    =(char[])thisBuf[buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
209	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[buffer[i  +  j]  &  0xFF;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[buffer[i  +  j]  &  0xFF;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[buffer[i  +  j]  &  0xFF;	  char[]    buf    =(char[])thisBuf[buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
210	[BUG]  [BUGGY]  char[]  buf  =  thisBuf[j  +  i];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  thisBuf[j  +  i];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  thisBuf[j  +  i];	  char[]    buf    =    thisBuf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
211	[BUG]  [BUGGY]  int  strLen  =  str.length()  *  startIndex;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  str.length()  *  startIndex;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  str.length()  *  startIndex;	  int    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
212	[BUG]  [BUGGY]  int  strLen  =  str.length()  +  startIndex;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  str.length()  +  startIndex;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  str.length()  +  startIndex;	  int    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
213	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append(thisBuf[i  +  j]).append('0');  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(i)).append(thisBuf[i  +  j]).append('0');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(i)).append(thisBuf[i  +  j]).append('0');	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('0');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
214	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('0')+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('0')+  1;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('0')+  1;	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('0');    	non-compiled	[CE]  <identifier>  expected	23	None	replace
215	[BUG]  [BUGGY]  if  (j  <  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if  (j  <  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (j  <  thisBuf[i  +  j]  ||  startIndex  >=  len)  {	  if    (j    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
216	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[buffer[j  +  j];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[buffer[j  +  j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[buffer[j  +  j];	  char[]    buf    =(char[])thisBuf[j    +    i];    	non-compiled	[CE]  <identifier>  expected	24	None	replace
217	[BUG]  [BUGGY]  char[]  buf  =  buffer.get(j);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  buffer.get(j);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  buffer.get(j);	  char[]    buf    =    buffer.get(i);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
218	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  0,  size);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(buffer,  0,  size);	  ((    char)str.charAt(j)).computeValue(thisBuf,    0,    size);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
219	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf[j  *  i];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf[j  *  i];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf[j  *  i];	  chars[]    buf    =(char)thisBuf[i    *    j];    	non-compiled	[CE]  <identifier>  expected	73	None	replace
220	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf[i  *  2];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf[i  *  2];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf[i  *  2];	  chars[]    buf    =(char)thisBuf[i    *    j];    	non-compiled	[CE]  <identifier>  expected	73	None	replace
221	[BUG]  [BUGGY]  int  strLen  =  thisBuf[j  +  i]  &  0xFF;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[j  +  i]  &  0xFF;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[j  +  i]  &  0xFF;	  int    strLen    =    thisBuf[i    +    j]    &    0xFF;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
222	[BUG]  [BUGGY]  char[]  buf  =  strBuf.get(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  strBuf.get(i);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  strBuf.get(i);	  char[]    buf    =    buffer.get(i);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
223	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  0xff,  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  0xff,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j]  &  0xff,  len);	  int    strLen    =    thisBuf[i    +    j]    &    0xff;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
224	[BUG]  [BUGGY]  ((  char)str.charAt(j)).insert(buffer,  i,  len);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).insert(buffer,  i,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).insert(buffer,  i,  len);	  ((    char)str.charAt(j)).insert(startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
225	[BUG]  [BUGGY]  ((  char)str.charAt(j)).insert(thisBuf,  i,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).insert(thisBuf,  i,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).insert(thisBuf,  i,  len);	  ((    char)str.charAt(j)).insert(startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
226	[BUG]  [BUGGY]  ((  char)str.charAt(j)).insert(i,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).insert(i,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).insert(i,  len);	  ((    char)str.charAt(j)).insert(startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
227	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(thisBuf[i  +  j]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j  +  1)).append(thisBuf[i  +  j]);	  ((    char)str.charAt(j)).append(thisBuf[i    +    len]);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
228	[BUG]  [BUGGY]  int  strLen  =  strBuf.length();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  strBuf.length();  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  strBuf.length();	  int    strLen    =    str.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
229	[BUG]  [BUGGY]  if(j  ==  thisBuf[i  +  j]  ||  startIndex  >  len)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(j  ==  thisBuf[i  +  j]  ||  startIndex  >  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(j  ==  thisBuf[i  +  j]  ||  startIndex  >  len)  {	  if    (j    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
230	[BUG]  [BUGGY]  if(j  >  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(j  >  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(j  >  thisBuf[i  +  j]  ||  startIndex  >=  len)  {	  if    (j    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
231	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  >  len)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  >  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  >  len)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    >    len)    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
232	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >  0)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >  0)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    >    len)    {    	non-compiled	[CE]  <identifier>  expected	67	None	replace
233	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  i]).append('/');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  i]).append('/');  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  i]).append('/');	  ((    char)str.charAt(j)).append(thisBuf[i    +    j]).append('/');    	non-compiled	[CE]  <identifier>  expected	79	None	replace
234	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf.get(i  +  j);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf.get(i  +  j);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf.get(i  +  j);	  char[]    buf    =(char[])thisBuf.get(i);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
235	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  1xFF;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  1xFF;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j]  &  1xFF;	  int    strLen    =    thisBuf[i    +    j]    &    0xFF;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
236	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  0,  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(buffer,  0,  len);	  ((    char)str.charAt(j)).computeValue(thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
237	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  j]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  j]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j  +  1)).append(buffer[i  +  j]);	  ((    char)str.charAt(j)).append(buffer[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
238	[BUG]  [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  thisBuf[i  +  j]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).addToString(buffer,  thisBuf[i  +  j]);	  ((    char)str.charAt(j)).addToString(thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
239	[BUG]  [BUGGY]  ((  char)thisBuf[i]).reset();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)thisBuf[i]).reset();  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)thisBuf[i]).reset();	  ((    char)thisBuf[j]).reset();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
240	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  =  size)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  =  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  =  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    startIndex    <    size)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
241	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  i  +  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  i  +  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(buffer,  i  +  len);	  ((    char)str.charAt(j)).computeValue(buffer,    i);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
242	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  i  +  1,  strLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(buffer,  i  +  1,  strLen);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(buffer,  i  +  1,  strLen);	  ((    char)str.charAt(j)).computeValue(buffer,    i);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
243	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >  len)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >  len)  {	  if    (str.charAt(j)!=    thisBuf[i    +    j]    ||    endIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
244	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length()  -  i;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf.length()  -  i;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf.length()  -  i;	  int    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
245	[BUG]  [BUGGY]  ((  String)str.charAt(j)).replaceAll(thisBuf,  0,  i  +  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).replaceAll(thisBuf,  0,  i  +  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).replaceAll(thisBuf,  0,  i  +  len);	  ((    String)str.charAt(j)).replaceAll(thisBuf,    0,    i);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
246	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length()  +  i;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf.length()  +  i;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf.length()  +  i;	  int    strLen    =    thisBuf.length();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
247	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  0xFFFF,  len;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i  +  j]  &  0xFFFF,  len;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i  +  j]  &  0xFFFF,  len;	  int    strLen    =    thisBuf[i    +    j]    &    0xFFFF;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
248	[BUG]  [BUGGY]  ((  String)str.charAt(j)).computeValue(thisBuf,  i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j)).computeValue(thisBuf,  i);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j)).computeValue(thisBuf,  i);	  ((    String)str.charAt(j)).reset();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
249	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  =  len)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  =  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  =  len)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    startIndex    >    len)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
250	[BUG]  [BUGGY]  int  strLen  =  str.length()  +  i;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  str.length()  +  i;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  str.length()  +  i;	  int    strLen    =    str.length()    +    j;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
251	[BUG]  [BUGGY]  char[]  buf  =  buffer.get(i  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =  buffer.get(i  +  1);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =  buffer.get(i  +  1);	  char[]    buf    =(char[])buffer.get(i    +    1);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
252	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  ==  size)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  ==  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  i  ==  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    i    ==    size)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
253	[BUG]  [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  0,  j);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).computeValue(thisBuf,  0,  j);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).computeValue(thisBuf,  0,  j);	  ((    char)str.charAt(j)).computeValue(thisBuf,    startIndex);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
254	[BUG]  [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  i  +  strLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  i  +  strLen);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).addToString(buffer,  i  +  strLen);	  ((    char)str.charAt(j)).addToString(buffer,    i    +    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
255	[BUG]  [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  i  +  len,  strLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).addToString(buffer,  i  +  len,  strLen);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).addToString(buffer,  i  +  len,  strLen);	  ((    char)str.charAt(j)).addToString(buffer,    i    +    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
256	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[buffer[i  *  j];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[buffer[i  *  j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[buffer[i  *  j];	  char[]    buf    =(char[])thisBuf[buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	54	None	replace
257	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[i  *  2];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[i  *  2];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[i  *  2];	  char[]    buf    =(char[])thisBuf[i    *    j];    	non-compiled	[CE]  <identifier>  expected	75	None	replace
258	[BUG]  [BUGGY]  char[]  buf  =(char[])thisBuf[i  *  4];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  char[]  buf  =(char[])thisBuf[i  *  4];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	char[]  buf  =(char[])thisBuf[i  *  4];	  char[]    buf    =(char[])thisBuf[i    *    j];    	non-compiled	[CE]  <identifier>  expected	75	None	replace
259	[BUG]  [BUGGY]  if(str.charAt(j)  >=  thisBuf[i  +  j]  ||  startIndex  >  len)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)  >=  thisBuf[i  +  j]  ||  startIndex  >  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)  >=  thisBuf[i  +  j]  ||  startIndex  >  len)  {	  if    (str.charAt(j)    >=    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
260	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  i]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  i]);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  i]);	  ((    char)str.charAt(i)).append(thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
261	[BUG]  [BUGGY]  if(str.charAt(j)  <  =  thisBuf[i  +  j]  ||  startIndex  >  len)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)  <  =  thisBuf[i  +  j]  ||  startIndex  >  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)  <  =  thisBuf[i  +  j]  ||  startIndex  >  len)  {	  if    (str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >    len)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
262	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  =  len)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  =  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  =  len)  {	  if    (str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >    len)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
263	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i],  len);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i],  len);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i],  len);	  int    strLen    =    thisBuf[i];    	non-compiled	[CE]  <identifier>  expected	36	None	replace
264	[BUG]  [BUGGY]  int  strLen  =  thisBuf[i]  &  j;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf[i]  &  j;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf[i]  &  j;	  int    strLen    =    thisBuf[i];    	non-compiled	[CE]  <identifier>  expected	36	None	replace
265	[BUG]  [BUGGY]  ((  String)str.charAt(j  +  1)).replaceAll(thisBuf,  0,  strLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)str.charAt(j  +  1)).replaceAll(thisBuf,  0,  strLen);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)str.charAt(j  +  1)).replaceAll(thisBuf,  0,  strLen);	  ((    String)str.charAt(j)).replaceAll(thisBuf,    0,    strLen);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
266	[BUG]  [BUGGY]  ((  String)thisBuf[j]).replaceAll(buffer,  0,  strLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  ((  String)thisBuf[j]).replaceAll(buffer,  0,  strLen);  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	((  String)thisBuf[j]).replaceAll(buffer,  0,  strLen);	  ((    char)thisBuf[j]).replaceAll(str,    0,    strLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
267	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length  +  i;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf.length  +  i;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf.length  +  i;	  int    strLen    =    thisBuf.length;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
268	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length  -  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  int  strLen  =  thisBuf.length  -  2;  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	int  strLen  =  thisBuf.length  -  2;	  int    strLen    =    thisBuf.length;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
269	[BUG]  [BUGGY]  chars[]  buf  =(char)thisBuf[buffer[i  *  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {      [BUGGY]  chars[]  buf  =(char)thisBuf[buffer[i  *  j];  [BUGGY]      if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	chars[]  buf  =(char)thisBuf[buffer[i  *  j];	  chars[]    buf    =(char)thisBuf[buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
