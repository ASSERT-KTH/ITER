bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    char[]  buf  =(char[])thisBuf[i  +  j];  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]    char[]  buf  =(char[])thisBuf[i  +  j];  [BUGGY]  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	    char[]  buf  =(char[])thisBuf[i  +  j];		non-compiled	[CE]  <identifier>  expected	48	None	add
2	[BUG]  [BUGGY]    ((  char)str.charAt(j)).append(thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]    ((  char)str.charAt(j)).append(thisBuf[i  +  j]);  [BUGGY]  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	    ((  char)str.charAt(j)).append(thisBuf[i  +  j]);		non-compiled	[CE]  <identifier>  expected	48	None	add
3	[BUG]  [BUGGY]    chars[]  buf  =(char)i.next();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]    chars[]  buf  =(char)i.next();  [BUGGY]  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	    chars[]  buf  =(char)i.next();		non-compiled	[CE]  <identifier>  expected	48	None	add
4	[BUG]  [BUGGY]    ((  char)str.charAt(j)).replaceAll(thisBuf,  0,  strLen);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]    ((  char)str.charAt(j)).replaceAll(thisBuf,  0,  strLen);  [BUGGY]  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	    ((  char)str.charAt(j)).replaceAll(thisBuf,  0,  strLen);		non-compiled	[CE]  <identifier>  expected	48	None	add
5	[BUG]  [BUGGY]    int  strLen  =  thisBuf[i  +  j];  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]    int  strLen  =  thisBuf[i  +  j];  [BUGGY]  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	    int  strLen  =  thisBuf[i  +  j];		non-compiled	[CE]  <identifier>  expected	48	None	add
6	[BUG]  [BUGGY]  if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]  if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [BUGGY]  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {	if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  	non-compiled	[CE]  <identifier>  expected	47	None	replace
7	[BUG]  [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [BUGGY]  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  len)  {	if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  	non-compiled	[CE]  <identifier>  expected	47	None	replace
8	[BUG]  [BUGGY]  if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >=  size)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]  if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >=  size)  {  [BUGGY]  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >=  size)  {	if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  	non-compiled	[CE]  <identifier>  expected	47	None	replace
9	[BUG]  [BUGGY]    int  strLen  =  str.length();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]    int  strLen  =  str.length();  [BUGGY]  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	    int  strLen  =  str.length();		non-compiled	[CE]  <identifier>  expected	48	None	add
10	[BUG]  [BUGGY]    ((  char)str.charAt(j)).reset();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]    ((  char)str.charAt(j)).reset();  [BUGGY]  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	    ((  char)str.charAt(j)).reset();		non-compiled	[CE]  <identifier>  expected	48	None	add
11	[BUG]  [BUGGY]    char[]  buf  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]    char[]  buf  =  buffer[i  +  j];  [BUGGY]  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	    char[]  buf  =  buffer[i  +  j];		non-compiled	[CE]  <identifier>  expected	48	None	add
12	[BUG]  [BUGGY]    char[]  buf  =(char[])buffer.get(i);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]    char[]  buf  =(char[])buffer.get(i);  [BUGGY]  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	    char[]  buf  =(char[])buffer.get(i);		non-compiled	[CE]  <identifier>  expected	48	None	add
13	[BUG]  [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]  if  (str.charAt(j)  ==  thisBuf[i  +  j])  {  [BUGGY]  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (str.charAt(j)  ==  thisBuf[i  +  j])  {	if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  	non-compiled	[CE]  <identifier>  expected	47	None	replace
14	[BUG]  [BUGGY]  if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]  if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  [BUGGY]  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if  (str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  size)  {	if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  	non-compiled	[CE]  <identifier>  expected	47	None	replace
15	[BUG]  [BUGGY]    ((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('n');  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]    ((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('n');  [BUGGY]  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	    ((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('n');		non-compiled	[CE]  <identifier>  expected	48	None	add
16	[BUG]  [BUGGY]    chars[]  buf  =(char)thisBuf[i  +  j];  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]    chars[]  buf  =(char)thisBuf[i  +  j];  [BUGGY]  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	    chars[]  buf  =(char)thisBuf[i  +  j];		non-compiled	[CE]  <identifier>  expected	48	None	add
17	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >  size)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >  size)  {  [BUGGY]  continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1780	1780	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  i  >  size)  {	if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  	non-compiled	[CE]  <identifier>  expected	47	None	replace
