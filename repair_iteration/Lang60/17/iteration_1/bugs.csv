bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(strLen  >  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  int  indexOf(String  str,  int  startIndex)  {  startIndex  =  (startIndex  <  0  ?  0  :  startIndex);  if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  [BUGGY]  if(strLen  >  0)  {  [BUGGY]  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1766	1766	1	replace	if(strLen  >  0)  {	if  (strLen  ==  1)  {  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
2	[BUG]  [BUGGY]  if(strLen  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  int  indexOf(String  str,  int  startIndex)  {  startIndex  =  (startIndex  <  0  ?  0  :  startIndex);  if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  [BUGGY]  if(strLen  ==  0)  {  [BUGGY]  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1766	1766	1	replace	if(strLen  ==  0)  {	if  (strLen  ==  1)  {  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  int  indexOf(String  str,  int  startIndex)  {  startIndex  =  (startIndex  <  0  ?  0  :  startIndex);  if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  [BUGGY]    [BUGGY]  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1766	1766	1	replace	  	if  (strLen  ==  1)  {  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
4	[BUG]  [BUGGY]    int  strLen  =  str.length();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  int  indexOf(String  str,  int  startIndex)  {  startIndex  =  (startIndex  <  0  ?  0  :  startIndex);  if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  [BUGGY]    int  strLen  =  str.length();  [BUGGY]  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1766	1766	1	replace	    int  strLen  =  str.length();		non-compiled	[CE]  illegal  start  of  expression	34	None	add
5	[BUG]  [BUGGY]    int  strLen  =(str  ==  null?  0  :  str.length());  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  int  indexOf(String  str,  int  startIndex)  {  startIndex  =  (startIndex  <  0  ?  0  :  startIndex);  if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  [BUGGY]    int  strLen  =(str  ==  null?  0  :  str.length());  [BUGGY]  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1766	1766	1	replace	    int  strLen  =(str  ==  null?  0  :  str.length());		non-compiled	[CE]  illegal  start  of  expression	34	None	add
6	[BUG]  [BUGGY]    int  len  =  str.length();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  int  indexOf(String  str,  int  startIndex)  {  startIndex  =  (startIndex  <  0  ?  0  :  startIndex);  if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  [BUGGY]    int  len  =  str.length();  [BUGGY]  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1766	1766	1	replace	    int  len  =  str.length();		non-compiled	[CE]  illegal  start  of  expression	34	None	add
7	[BUG]  [BUGGY]    int  strLen  =(str!=  null?  0  :  str.length());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  public  int  indexOf(String  str,  int  startIndex)  {  startIndex  =  (startIndex  <  0  ?  0  :  startIndex);  if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  [BUGGY]    int  strLen  =(str!=  null?  0  :  str.length());  [BUGGY]  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1766	1766	1	replace	    int  strLen  =(str!=  null?  0  :  str.length());		non-compiled	[CE]  illegal  start  of  expression	34	None	add
8	[BUG]  [BUGGY]    int  strLen  =(str  ==  null?  size  :  str.length());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  public  int  indexOf(String  str,  int  startIndex)  {  startIndex  =  (startIndex  <  0  ?  0  :  startIndex);  if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  [BUGGY]    int  strLen  =(str  ==  null?  size  :  str.length());  [BUGGY]  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1766	1766	1	replace	    int  strLen  =(str  ==  null?  size  :  str.length());		non-compiled	[CE]  illegal  start  of  expression	34	None	add
9	[BUG]  [BUGGY]    int  len  =  strLen.length();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  int  indexOf(String  str,  int  startIndex)  {  startIndex  =  (startIndex  <  0  ?  0  :  startIndex);  if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  [BUGGY]    int  len  =  strLen.length();  [BUGGY]  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1766	1766	1	replace	    int  len  =  strLen.length();		non-compiled	[CE]  illegal  start  of  expression	34	None	add
10	[BUG]  [BUGGY]    int  len  =  strLen;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  int  indexOf(String  str,  int  startIndex)  {  startIndex  =  (startIndex  <  0  ?  0  :  startIndex);  if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  [BUGGY]    int  len  =  strLen;  [BUGGY]  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1766	1766	1	replace	    int  len  =  strLen;		non-compiled	[CE]  illegal  start  of  expression	34	None	add
11	[BUG]  [BUGGY]    int  len  =  strLen  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  public  int  indexOf(String  str,  int  startIndex)  {  startIndex  =  (startIndex  <  0  ?  0  :  startIndex);  if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  [BUGGY]    int  len  =  strLen  +  1;  [BUGGY]  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1766	1766	1	replace	    int  len  =  strLen  +  1;		non-compiled	[CE]  illegal  start  of  expression	34	None	add
12	[BUG]  [BUGGY]  if(strLen  >  size)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  int  indexOf(String  str,  int  startIndex)  {  startIndex  =  (startIndex  <  0  ?  0  :  startIndex);  if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  [BUGGY]  if(strLen  >  size)  {  [BUGGY]  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1766	1766	1	replace	if(strLen  >  size)  {	if  (strLen  ==  1)  {  	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
13	[BUG]  [BUGGY]    int  insertLen  =  str.length();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  public  int  indexOf(String  str,  int  startIndex)  {  startIndex  =  (startIndex  <  0  ?  0  :  startIndex);  if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  [BUGGY]    int  insertLen  =  str.length();  [BUGGY]  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1766	1766	1	replace	    int  insertLen  =  str.length();		non-compiled	[CE]  illegal  start  of  expression	34	None	add
14	[BUG]  [BUGGY]    int  len  =  length();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  public  int  indexOf(String  str,  int  startIndex)  {  startIndex  =  (startIndex  <  0  ?  0  :  startIndex);  if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  [BUGGY]    int  len  =  length();  [BUGGY]  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1766	1766	1	replace	    int  len  =  length();		non-compiled	[CE]  illegal  start  of  expression	34	None	add
