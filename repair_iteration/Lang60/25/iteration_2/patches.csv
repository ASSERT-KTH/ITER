bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  chars[i]  =  buffer.charAt(j  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[i]  =  buffer.charAt(j  +  1);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[i]  =  buffer.charAt(j  +  1);	  chars[i]    =    buffer.charAt(j);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
2	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len  +  startIndex  +  j]).append('n');  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len  +  startIndex  +  j]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  len  +  startIndex  +  j]).append('n');	  ((    char)str.charAt(j)).append(buffer[i    +    startIndex    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	27	None	replace
3	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len  +  1]).append('n');  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len  +  1]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  len  +  1]).append('n');	  ((    char)str.charAt(j)).append(buffer[i    +    startIndex    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	27	None	replace
4	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen  +  1]).append('n');  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen  +  1]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  strLen  +  1]).append('n');	  ((    char)str.charAt(j)).append(buffer[i    +    startIndex    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	27	None	replace
5	[BUG]  [BUGGY]  chars[]  buf  =  buffer.toCharArray(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[]  buf  =  buffer.toCharArray(i);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[]  buf  =  buffer.toCharArray(i);	  chars[]    buf    =    buffer.toCharArray();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
6	[BUG]  [BUGGY]  chars[]  buf  =  buffer.toCharArray(j);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[]  buf  =  buffer.toCharArray(j);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[]  buf  =  buffer.toCharArray(j);	  chars[]    buf    =    buffer.toCharArray();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
7	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  startIndex,  thisBuf,  i  +  1,  strLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  startIndex,  thisBuf,  i  +  1,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  startIndex,  thisBuf,  i  +  1,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    i,    thisBuf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
8	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  thisBuf,  startIndex  +  1,  strLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  thisBuf,  startIndex  +  1,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  thisBuf,  startIndex  +  1,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    i,    thisBuf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  i,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    strLen);    outer    =    buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(buffer,  i,  startIndex,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  i,  startIndex,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  i,  startIndex,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    strLen);    outer    =    buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
11	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  ==  len)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  ==  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  ==  len)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
12	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >=  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  endIndex  >=  len)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
13	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  startIndex]);	  ((    char)str.charAt(j)).append(thisBuf[i    +    startIndex]);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  len);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  len);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  len);  outer  =  buffer[i  +  j];	  if(len    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    outer,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  strLen);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  strLen);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  strLen);  outer  =  buffer[i  +  j];	  if(len    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    outer,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  strLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  strLen);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  strLen);	  if(len    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    outer,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  size);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  size);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  size);  outer  =  buffer[i  +  j];	  if(len    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    outer,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
18	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  j,  thisBuf,  0,  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  j,  thisBuf,  0,  size);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  j,  thisBuf,  0,  size);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    size);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
19	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  startIndex  +  strLen,  buffer,  0,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  startIndex  +  strLen,  buffer,  0,  size);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  startIndex  +  strLen,  buffer,  0,  size);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    size);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
20	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);	  continue    outer:    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
21	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  startIndex,  buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  startIndex,  buffer,  0,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  startIndex,  buffer,  0,  len);	  continue    outer:    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
22	[BUG]  [BUGGY]  rim(buffer,  i,  len,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rim(buffer,  i,  len,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rim(buffer,  i,  len,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];	  rim(buffer,    startIndex,    len,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
23	[BUG]  [BUGGY]  rim(buffer,  startIndex,  len,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rim(buffer,  startIndex,  len,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rim(buffer,  startIndex,  len,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];	  rim(buffer,    startIndex,    len,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
24	[BUG]  [BUGGY]  rim(buffer,  startIndex,  strLen,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rim(buffer,  startIndex,  strLen,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rim(buffer,  startIndex,  strLen,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];	  rim(buffer,    startIndex,    len,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
25	[BUG]  [BUGGY]  if(j  ==  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(j  ==  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(j  ==  thisBuf[i  +  j]  ||  startIndex  >=  len)  {	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
26	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >  len)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >  len)  {	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
27	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  strLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buf,  startIndex,  thisBuf,  i  +  1,  strLen);	  continue    outer:    System.arraycopy(buf,    i,    thisBuf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
28	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  thisBuf,  startIndex  +  1,  strLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  thisBuf,  startIndex  +  1,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buf,  i,  thisBuf,  startIndex  +  1,  strLen);	  continue    outer:    System.arraycopy(buf,    i,    thisBuf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  0,  len);  outer  =  buf[i  +  j];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  0,  len);  outer  =  buf[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  i,  thisBuf,  0,  len);  outer  =  buf[i  +  j];	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	35	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  buf[i  +  j];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  buf[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  buf[i  +  j];	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	35	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  size);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  size);	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	35	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  str[i  +  j];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  str[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  str[i  +  j];	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	35	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  i;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  i;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  i;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  i  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  i  +  1;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  i  +  1;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  outer  =  i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  outer  =  i;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  outer  =  i;	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
36	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  0,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  0,  len);	  continue    outer:    System.arraycopy(buffer,    i,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
37	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  i,  thisBuf,  0,  strLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  i,  thisBuf,  0,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  i,  thisBuf,  0,  strLen);	  continue    outer:    System.arraycopy(buffer,    i,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
38	[BUG]  [BUGGY]  continue  outer(i,  len  -  strLen);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  len  -  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  len  -  strLen);	  continue    outer(i,    size    -    strLen);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
39	[BUG]  [BUGGY]  continue  outer(i,  j  -  strLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  j  -  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  j  -  strLen);	  continue    outer(i,    size    -    strLen);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
40	[BUG]  [BUGGY]  continue  outer(i,  startIndex  -  strLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  startIndex  -  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  startIndex  -  strLen);	  continue    outer(i,    size    -    strLen);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
41	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  startIndex,  thisBuf,  0,  strLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  startIndex,  thisBuf,  0,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  startIndex,  thisBuf,  0,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    i,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
42	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  startIndex,  thisBuf,  0,  size);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  startIndex,  thisBuf,  0,  size);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  startIndex,  thisBuf,  0,  size);	  continue    outer:    System.arraycopy(thisBuf,    i,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
43	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  i,  startIndex,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  i,  startIndex,  thisBuf,  0,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  i,  startIndex,  thisBuf,  0,  len);	  continue    outer:    System.arraycopy(thisBuf,    i,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
44	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  startIndex,  len);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  startIndex,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  i,  startIndex,  len);	  ((    char)str.charAt(j)).replace(buffer,    i,    len);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
45	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  size,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  size,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  i,  size,  len);	  ((    char)str.charAt(j)).replace(buffer,    i,    len);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
46	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i  +  1,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i  +  1,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  i  +  1,  len);	  ((    char)str.charAt(j)).replace(buffer,    i,    len);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
47	[BUG]  [BUGGY]  char[]  buf  =  thisBuf.toCharArray();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  char[]  buf  =  thisBuf.toCharArray();  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	char[]  buf  =  thisBuf.toCharArray();	  char[]    buf    =    buffer.toCharArray();    	non-compiled	[CE]  <identifier>  expected	87	None	replace
48	[BUG]  [BUGGY]  char[]  buf  =  buffer.toCharArray(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  char[]  buf  =  buffer.toCharArray(i);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	char[]  buf  =  buffer.toCharArray(i);	  char[]    buf    =    buffer.toCharArray();    	non-compiled	[CE]  <identifier>  expected	87	None	replace
49	[BUG]  [BUGGY]  char[]  buf  =  buffer.toCharArray(j);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  char[]  buf  =  buffer.toCharArray(j);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	char[]  buf  =  buffer.toCharArray(j);	  char[]    buf    =    buffer.toCharArray();    	non-compiled	[CE]  <identifier>  expected	87	None	replace
50	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  i]).append('n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  i]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  i]).append('n');	  ((    char)str.charAt(j)).append(buffer[i    +    i]).append('n');    	non-compiled	[CE]  <identifier>  expected	75	None	replace
51	[BUG]  [BUGGY]  luate(buffer,  i,  thisBuf,  0,  len);  outer  =  i;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  luate(buffer,  i,  thisBuf,  0,  len);  outer  =  i;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	luate(buffer,  i,  thisBuf,  0,  len);  outer  =  i;	  luate(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
52	[BUG]  [BUGGY]  luate(buffer,  i,  thisBuf,  0,  len);  outer  =  j;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  luate(buffer,  i,  thisBuf,  0,  len);  outer  =  j;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	luate(buffer,  i,  thisBuf,  0,  len);  outer  =  j;	  luate(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
53	[BUG]  [BUGGY]  luate(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  luate(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  i;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	luate(buffer,  startIndex,  thisBuf,  0,  strLen);  outer  =  i;	  luate(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
54	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  size);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  i,  size);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    size);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
55	[BUG]  [BUGGY]  ((  String)str.charAt(j)).replace(buffer,  startIndex,  size);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  String)str.charAt(j)).replace(buffer,  startIndex,  size);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  String)str.charAt(j)).replace(buffer,  startIndex,  size);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    size);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
56	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(thisBuf,  startIndex,  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(thisBuf,  startIndex,  size);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(thisBuf,  startIndex,  size);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    size);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
57	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  size  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  size  +  1);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  startIndex,  size  +  1);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    size);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
58	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  j;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  j;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  j;	  if(len    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    j;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
59	[BUG]  [BUGGY]  if(j  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  j;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(j  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  j;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(j  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  j;  }	  if(len    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    j;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
60	[BUG]  [BUGGY]  rim(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  j;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rim(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  j;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rim(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  j;	  if(len    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    j;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
61	[BUG]  [BUGGY]  continue  i  -  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  i  -  2;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  i  -  2;	  continue    i    -    1;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
62	[BUG]  [BUGGY]  continue  i  /  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  i  /  1;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  i  /  1;	  continue    i    -    1;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
63	[BUG]  [BUGGY]  chars[]  buf  =  thisBuf.toCharArray(i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[]  buf  =  thisBuf.toCharArray(i);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[]  buf  =  thisBuf.toCharArray(i);	  chars[]    buf    =    thisBuf.toCharArray();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
64	[BUG]  [BUGGY]  chars[]  buf  =  thisBuf.toCharArray(j);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[]  buf  =  thisBuf.toCharArray(j);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[]  buf  =  thisBuf.toCharArray(j);	  chars[]    buf    =    thisBuf.toCharArray();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append(buffer[i  +  len]).append('n');  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(i)).append(buffer[i  +  len]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(i)).append(buffer[i  +  len]).append('n');	  ((    char)str.charAt(i)).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
66	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append(buffer[i  +  1]).append('n');  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(i)).append(buffer[i  +  1]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(i)).append(buffer[i  +  1]).append('n');	  ((    char)str.charAt(i)).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
67	[BUG]  [BUGGY]  chars[i]  =  str.charAt(j  +  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[i]  =  str.charAt(j  +  2);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[i]  =  str.charAt(j  +  2);	  chars[i]    =    str.charAt(j    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
68	[BUG]  [BUGGY]  chars[i]  =  thisBuf.charAt(j  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[i]  =  thisBuf.charAt(j  +  1);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[i]  =  thisBuf.charAt(j  +  1);	  chars[i]    =    str.charAt(j    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
69	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  1]);	  ((    char)str.charAt(j)).append(buffer[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
70	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  strLen]);	  ((    char)str.charAt(j)).append(buffer[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
71	[BUG]  [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  i,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  i,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	32	None	replace
72	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  2]).append('n');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  2]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  2]).append('n');	  ((    char)str.charAt(j)).append(buffer[i    +    1]).append('n');    	non-compiled	[CE]  <identifier>  expected	25	None	replace
73	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1],  startIndex,  'n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1],  startIndex,  'n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  1],  startIndex,  'n');	  ((    char)str.charAt(j)).append(buffer[i    +    1]).append('n');    	non-compiled	[CE]  <identifier>  expected	25	None	replace
74	[BUG]  [BUGGY]  continue  outer(i  +  strLen,  size  -  j);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i  +  strLen,  size  -  j);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i  +  strLen,  size  -  j);	  continue    outer(i    +    len,    size    -    j);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
75	[BUG]  [BUGGY]  continue  outer(i  +  j,  size  -  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i  +  j,  size  -  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i  +  j,  size  -  len);	  continue    outer(i    +    len,    size    -    j);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
76	[BUG]  [BUGGY]  continue  outer(i  +  len,  strLen  -  j);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i  +  len,  strLen  -  j);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i  +  len,  strLen  -  j);	  continue    outer(i    +    len,    size    -    j);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
77	[BUG]  [BUGGY]  continue  outer(i  +  len,  size  -  strLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i  +  len,  size  -  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i  +  len,  size  -  strLen);	  continue    outer(i    +    len,    size    -    j);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
78	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(thisBuf[i  +  1]).append('/'));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(thisBuf[i  +  1]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).append(thisBuf[i  +  1]).append('/'));	  ((    char)str.charAt(i    +    1)).append(thisBuf[i    +    1]).append('/'));    	non-compiled	[CE]  <identifier>  expected	96	None	replace
79	[BUG]  [BUGGY]  ((  char)str.charAt(i  +  1)).append(buffer[i  +  1]).append('/'));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(i  +  1)).append(buffer[i  +  1]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(i  +  1)).append(buffer[i  +  1]).append('/'));	  ((    char)str.charAt(i    +    1)).append(thisBuf[i    +    1]).append('/'));    	non-compiled	[CE]  <identifier>  expected	96	None	replace
80	[BUG]  [BUGGY]  ((  String)str.charAt(i  +  1)).append(thisBuf[i  +  1]).append('/'));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  String)str.charAt(i  +  1)).append(thisBuf[i  +  1]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  String)str.charAt(i  +  1)).append(thisBuf[i  +  1]).append('/'));	  ((    char)str.charAt(i    +    1)).append(thisBuf[i    +    1]).append('/'));    	non-compiled	[CE]  <identifier>  expected	96	None	replace
81	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  thisBuf[i  +  j]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  i,  thisBuf[i  +  j]);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
82	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  len,  thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  len,  thisBuf[i  +  j]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  startIndex,  len,  thisBuf[i  +  j]);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
83	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf[i  +  1]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf[i  +  1]);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
84	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf[i  +  len]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf[i  +  len]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf[i  +  len]);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
85	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  thisBuf,  0,  strLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  thisBuf,  0,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  thisBuf,  0,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    startIndex,    thisBuf,    0,    strLen);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
86	[BUG]  [BUGGY]  ®ndreptTo(j,  len)>  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ®ndreptTo(j,  len)>  thisBuf[i  +  j])  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	®ndreptTo(j,  len)>  thisBuf[i  +  j])  {	  îndreptTo(len,    strLen)>    thisBuf[i    +    j])    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
87	[BUG]  [BUGGY]  ®ndreptTo(startIndex,  len)>  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ®ndreptTo(startIndex,  len)>  thisBuf[i  +  j])  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	®ndreptTo(startIndex,  len)>  thisBuf[i  +  j])  {	  îndreptTo(len,    strLen)>    thisBuf[i    +    j])    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
88	[BUG]  [BUGGY]  ®ndreptTo(startIndex,  strLen)>  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ®ndreptTo(startIndex,  strLen)>  thisBuf[i  +  j])  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	®ndreptTo(startIndex,  strLen)>  thisBuf[i  +  j])  {	  îndreptTo(len,    strLen)>    thisBuf[i    +    j])    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
89	[BUG]  [BUGGY]  ®nextTo(len,  strLen)>  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ®nextTo(len,  strLen)>  thisBuf[i  +  j])  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	®nextTo(len,  strLen)>  thisBuf[i  +  j])  {	  îndreptTo(len,    strLen)>    thisBuf[i    +    j])    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
90	[BUG]  [BUGGY]  rackState(j  >  0  ||  str.charAt(j)!=  thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rackState(j  >  0  ||  str.charAt(j)!=  thisBuf[i  +  j]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rackState(j  >  0  ||  str.charAt(j)!=  thisBuf[i  +  j]);	  if(j    >    0    ||    str.charAt(j)!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
91	[BUG]  [BUGGY]  thisBuf[i  +  j]  ||  startIndex  <  len)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  thisBuf[i  +  j]  ||  startIndex  <  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	thisBuf[i  +  j]  ||  startIndex  <  len)  {	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    <    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
92	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  continue  outer;  }	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    <    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
93	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  len)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  len)  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  <  len)  {  continue  outer;  }	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    <    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
94	[BUG]  [BUGGY]  îndreptBounds(i,  startIndex,  strLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  îndreptBounds(i,  startIndex,  strLen);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	îndreptBounds(i,  startIndex,  strLen);	  if(str.charAt(j)!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
95	[BUG]  [BUGGY]  îndreptBounds(i,  startIndex,  strLen));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  îndreptBounds(i,  startIndex,  strLen));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	îndreptBounds(i,  startIndex,  strLen));	  if(str.charAt(j)!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
96	[BUG]  [BUGGY]  îndreptBounds(i,  startIndex  +  strLen,  size  -  startIndex);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  îndreptBounds(i,  startIndex  +  strLen,  size  -  startIndex);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	îndreptBounds(i,  startIndex  +  strLen,  size  -  startIndex);	  if(str.charAt(j)!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
97	[BUG]  [BUGGY]  continue  outer(i,  len  -  startIndex);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  len  -  startIndex);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  len  -  startIndex);	  continue    outer(i,    size    -    startIndex);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
98	[BUG]  [BUGGY]  continue  outer(i,  j  -  startIndex);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  j  -  startIndex);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  j  -  startIndex);	  continue    outer(i,    size    -    startIndex);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
99	[BUG]  [BUGGY]  continue  outer(i,  startIndex  -  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  startIndex  -  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  startIndex  -  len);	  continue    outer(i,    size    -    startIndex);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
100	[BUG]  [BUGGY]  continue  outer(i,  strLen  -  startIndex);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  strLen  -  startIndex);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  strLen  -  startIndex);	  continue    outer(i,    size    -    startIndex);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
101	[BUG]  [BUGGY]  continue(thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue(thisBuf[i  +  j]);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue(thisBuf[i  +  j]);	  continue    thisBuf[i];    	non-compiled	[CE]  <identifier>  expected	36	None	replace
102	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  i]).append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  i]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  i]).append('n');	  ((    char)str.charAt(i)).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	64	None	replace
103	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append(thisBuf[i  +  strLen]).append('n');  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(i)).append(thisBuf[i  +  strLen]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(i)).append(thisBuf[i  +  strLen]).append('n');	  ((    char)str.charAt(i)).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	64	None	replace
104	[BUG]  [BUGGY]  ((  String)str.charAt(i)).append(thisBuf[i  +  j]).append('n');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  String)str.charAt(i)).append(thisBuf[i  +  j]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  String)str.charAt(i)).append(thisBuf[i  +  j]).append('n');	  ((    char)str.charAt(i)).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	64	None	replace
105	[BUG]  [BUGGY]  continue  thisBuf.length  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  thisBuf.length  -  1;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  thisBuf.length  -  1;	  continue    thisBuf.length;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
106	[BUG]  [BUGGY]  continue  thisBuf.length  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  thisBuf.length  +  1;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  thisBuf.length  +  1;	  continue    thisBuf.length;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
107	[BUG]  [BUGGY]  continue  thisBuf.length  -(j  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  thisBuf.length  -(j  +  1);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  thisBuf.length  -(j  +  1);	  continue    thisBuf.length;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
108	[BUG]  [BUGGY]  continue  thisBuf.length  +  j;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  thisBuf.length  +  j;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  thisBuf.length  +  j;	  continue    thisBuf.length;    	non-compiled	[CE]  <identifier>  expected	37	None	replace
109	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  thisBuf,  startIndex  +  1,  len);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  thisBuf,  startIndex  +  1,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buf,  i,  thisBuf,  startIndex  +  1,  len);	  continue    outer:    System.arraycopy(buf,    startIndex,    thisBuf,    i    +    1,    len);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
110	[BUG]  [BUGGY]  chars[i]  =  separator.charAt(j  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[i]  =  separator.charAt(j  +  1);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[i]  =  separator.charAt(j  +  1);	  chars[i]    =    separator.charAt(j);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
111	[BUG]  [BUGGY]  continue  i  +  3;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  i  +  3;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  i  +  3;	  continue    i    +    2;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
112	[BUG]  [BUGGY]  continue  i  +  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  i  +  4;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  i  +  4;	  continue    i    +    2;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
113	[BUG]  [BUGGY]  continue  chars[i  +  len];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  chars[i  +  len];  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  chars[i  +  len];	  continue    chars[i    +    j];    	non-compiled	[CE]  <identifier>  expected	97	None	replace
114	[BUG]  [BUGGY]  continue(chars[i  +  j]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue(chars[i  +  j]);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue(chars[i  +  j]);	  continue    chars[i    +    j];    	non-compiled	[CE]  <identifier>  expected	97	None	replace
115	[BUG]  [BUGGY]  continue  chars[i  +  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  chars[i  +  1];  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  chars[i  +  1];	  continue    chars[i    +    j];    	non-compiled	[CE]  <identifier>  expected	97	None	replace
116	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  i  +  1,  len);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  i  +  1,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  i  +  1,  len);	  continue    outer:    System.arraycopy(thisBuf,    i,    buffer,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
117	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  startIndex,  buffer,  i  +  1,  strLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  startIndex,  buffer,  i  +  1,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  startIndex,  buffer,  i  +  1,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    i,    buffer,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
118	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  i,  thisBuf,  i  +  1,  strLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  i,  thisBuf,  i  +  1,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  i,  thisBuf,  i  +  1,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    i,    buffer,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
119	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  i  +  1,  startIndex);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  i  +  1,  startIndex);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  i  +  1,  startIndex);	  continue    outer:    System.arraycopy(thisBuf,    i,    buffer,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
120	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]).append('/'));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  1]).append('/'));	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('/'));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
121	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen]).append('/'));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  strLen]).append('/'));	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('/'));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
122	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen  -  1]).append('/'));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen  -  1]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  strLen  -  1]).append('/'));	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('/'));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
123	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  startIndex  +  1,  strLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  startIndex  +  1,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  startIndex  +  1,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    i,    buf,    startIndex    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
124	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buf,  startIndex  +  1,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buf,  startIndex  +  1,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  buf,  startIndex  +  1,  len);	  continue    outer:    System.arraycopy(thisBuf,    i,    buf,    startIndex    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
125	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  startIndex  +  1,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  startIndex  +  1,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  startIndex  +  1,  len);	  continue    outer:    System.arraycopy(thisBuf,    i,    buf,    startIndex    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
126	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(thisBuf[i  +  strLen]).append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(thisBuf[i  +  strLen]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).append(thisBuf[i  +  strLen]).append('n');	  ((    char)str.charAt(j    +    1)).append(thisBuf[i    +    len]).append('n');    	non-compiled	[CE]  <identifier>  expected	95	None	replace
127	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(thisBuf[i  +  j]).append('n');  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(thisBuf[i  +  j]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).append(thisBuf[i  +  j]).append('n');	  ((    char)str.charAt(j    +    1)).append(thisBuf[i    +    len]).append('n');    	non-compiled	[CE]  <identifier>  expected	95	None	replace
128	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  len,  thisBuf,  0,  i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  len,  thisBuf,  0,  i);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  len,  thisBuf,  0,  i);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    i);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
129	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  startIndex  +  strLen,  buffer,  0,  i);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  startIndex  +  strLen,  buffer,  0,  i);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  startIndex  +  strLen,  buffer,  0,  i);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    i);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
130	[BUG]  [BUGGY]  chars[i]  =  str.charAt(j  +  i);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[i]  =  str.charAt(j  +  i);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[i]  =  str.charAt(j  +  i);	  chars[i]    =    str.charAt(i    +    j);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
131	[BUG]  [BUGGY]  chars[i]  =  str.charAt(i  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[i]  =  str.charAt(i  +  1);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[i]  =  str.charAt(i  +  1);	  chars[i]    =    str.charAt(i    +    j);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
132	[BUG]  [BUGGY]  chars[i]  =  str.charAt(i  +  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[i]  =  str.charAt(i  +  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[i]  =  str.charAt(i  +  len);	  chars[i]    =    str.charAt(i    +    j);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
133	[BUG]  [BUGGY]  chars[i]  =  str.charAt(i  +  1,  strLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[i]  =  str.charAt(i  +  1,  strLen);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[i]  =  str.charAt(i  +  1,  strLen);	  chars[i]    =    str.charAt(i    +    j);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
134	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  startIndex,  thisBuf,  i  +  1,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  startIndex,  thisBuf,  i  +  1,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  startIndex,  thisBuf,  i  +  1,  len);	  continue    outer:    System.arraycopy(thisBuf,    startIndex,    buf,    i    +    1,    len);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
135	[BUG]  [BUGGY]  if(j  >  0  ||  str.charAt(j  -  1)  ==  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(j  >  0  ||  str.charAt(j  -  1)  ==  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(j  >  0  ||  str.charAt(j  -  1)  ==  thisBuf[i  +  j])  {  continue  outer;  }	  if(j    >    0    ||    str.charAt(j    -    1)!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
136	[BUG]  [BUGGY]  ||  j  >  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  j])  {  continue  outer;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ||  j  >  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  j])  {  continue  outer;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	||  j  >  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  j])  {  continue  outer;	  if(j    >    0    ||    str.charAt(j    -    1)!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
137	[BUG]  [BUGGY]  rackState(j  >  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rackState(j  >  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  j]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rackState(j  >  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  j]);	  if(j    >    0    ||    str.charAt(j    -    1)!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
138	[BUG]  [BUGGY]  continue  outer(i,  len  -  j);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  len  -  j);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  len  -  j);	  continue    outer(i,    size    -    j);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
139	[BUG]  [BUGGY]  continue  outer(i,  strLen  -  j);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  strLen  -  j);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  strLen  -  j);	  continue    outer(i,    size    -    j);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
140	[BUG]  [BUGGY]  continue  outer(i,  j  -  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  j  -  size);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  j  -  size);	  continue    outer(i,    size    -    j);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
141	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len]).append('-');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len]).append('-');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  len]).append('-');	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('-');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
142	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]).append('-');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]).append('-');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  1]).append('-');	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('-');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
143	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen]).append('-');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen]).append('-');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  strLen]).append('-');	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('-');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
144	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen  -  1]).append('-');  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  strLen  -  1]).append('-');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  strLen  -  1]).append('-');	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('-');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
145	[BUG]  [BUGGY]  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	thisBuf[i  +  j]  ||  startIndex  >=  len)  {	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
146	[BUG]  [BUGGY]  ||  startIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ||  startIndex  >=  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	||  startIndex  >=  len)  {	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
147	[BUG]  [BUGGY]  thisBuf[i  +  j]  =  str.charAt(j)  ==  thisBuf[i  +  j];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  thisBuf[i  +  j]  =  str.charAt(j)  ==  thisBuf[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	thisBuf[i  +  j]  =  str.charAt(j)  ==  thisBuf[i  +  j];	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
148	[BUG]  [BUGGY]  thisBuf[i  +  j]  =  str.charAt(j)!=  thisBuf[i  +  j];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  thisBuf[i  +  j]  =  str.charAt(j)!=  thisBuf[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	thisBuf[i  +  j]  =  str.charAt(j)!=  thisBuf[i  +  j];	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
149	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  strLen]).append('n');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  strLen]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).append(buffer[i  +  strLen]).append('n');	  ((    char)str.charAt(j    +    1)).append(buffer[i    +    len]).append('n');    	non-compiled	[CE]  <identifier>  expected	94	None	replace
150	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  1]).append('n');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  1]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).append(buffer[i  +  1]).append('n');	  ((    char)str.charAt(j    +    1)).append(buffer[i    +    len]).append('n');    	non-compiled	[CE]  <identifier>  expected	94	None	replace
151	[BUG]  [BUGGY]  ((  String)str.charAt(j  +  1)).append(buffer[i  +  len]).append('n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  String)str.charAt(j  +  1)).append(buffer[i  +  len]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  String)str.charAt(j  +  1)).append(buffer[i  +  len]).append('n');	  ((    char)str.charAt(j    +    1)).append(buffer[i    +    len]).append('n');    	non-compiled	[CE]  <identifier>  expected	94	None	replace
152	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  j,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  j,  thisBuf,  0,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  j,  thisBuf,  0,  len);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
153	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  startIndex  +  strLen,  buffer,  0,  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  startIndex  +  strLen,  buffer,  0,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  startIndex  +  strLen,  buffer,  0,  len);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
154	[BUG]  [BUGGY]  chars[i]  =  thisBuf[i  +  j];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[i]  =  thisBuf[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[i]  =  thisBuf[i  +  j];	  chars[i]    =    str.charAt(i);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
155	[BUG]  [BUGGY]  continue  i  +  strLen;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  i  +  strLen;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  i  +  strLen;	  continue    i    +    len;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
156	[BUG]  [BUGGY]  continue  i  +  length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  i  +  length;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  i  +  length;	  continue    i    +    len;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
157	[BUG]  [BUGGY]  continue  outer:  len  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  len  +  1;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  len  +  1;	  continue    outer:    len;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
158	[BUG]  [BUGGY]  continue  outer:  j;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  j;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  j;	  continue    outer:    len;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
159	[BUG]  [BUGGY]  continue  outer:  i;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  i;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  i;	  continue    outer:    len;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
160	[BUG]  [BUGGY]  continue  outer:  len  +  j;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  len  +  j;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  len  +  j;	  continue    outer:    len;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
161	[BUG]  [BUGGY]  rim(buffer,  startIndex,  len,  strLen);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rim(buffer,  startIndex,  len,  strLen);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rim(buffer,  startIndex,  len,  strLen);  outer  =  buffer[i  +  j];	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
162	[BUG]  [BUGGY]  rim(buffer,  startIndex,  len,  thisBuf[i  +  j]))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rim(buffer,  startIndex,  len,  thisBuf[i  +  j]))  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rim(buffer,  startIndex,  len,  thisBuf[i  +  j]))  {	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
163	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  thisBuf.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  thisBuf.length);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  i,  thisBuf.length);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
164	[BUG]  [BUGGY]  ((  String)str.charAt(j)).replace(buffer,  startIndex,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  String)str.charAt(j)).replace(buffer,  startIndex,  thisBuf.length);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  String)str.charAt(j)).replace(buffer,  startIndex,  thisBuf.length);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
165	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  len,  thisBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  len,  thisBuf.length);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  startIndex,  len,  thisBuf.length);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
166	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  i]).append('/'));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  i]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  i]).append('/'));	  ((    char)str.charAt(i)).append(thisBuf[i    +    j]).append('/'));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
167	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append(buffer[i  +  j]).append('/'));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(i)).append(buffer[i  +  j]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(i)).append(buffer[i  +  j]).append('/'));	  ((    char)str.charAt(i)).append(thisBuf[i    +    j]).append('/'));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
168	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append(thisBuf[i  +  strLen]).append('/'));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(i)).append(thisBuf[i  +  strLen]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(i)).append(thisBuf[i  +  strLen]).append('/'));	  ((    char)str.charAt(i)).append(thisBuf[i    +    j]).append('/'));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
169	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  startIndex,  thisBuf.length,  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  startIndex,  thisBuf.length,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  i,  startIndex,  thisBuf.length,  len);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf.length,    len);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
170	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  thisBuf.length,  len);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  thisBuf.length,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  i,  thisBuf.length,  len);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf.length,    len);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
171	[BUG]  [BUGGY]  ((  String)str.charAt(j)).replace(buffer,  startIndex,  thisBuf.length,  len);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  String)str.charAt(j)).replace(buffer,  startIndex,  thisBuf.length,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  String)str.charAt(j)).replace(buffer,  startIndex,  thisBuf.length,  len);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf.length,    len);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
172	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  2]);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  2]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  2]);	  ((    char)str.charAt(j)).append(thisBuf[i    +    1]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
173	[BUG]  [BUGGY]  ((  String)str.charAt(j)).append(thisBuf[i  +  1]);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  String)str.charAt(j)).append(thisBuf[i  +  1]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  String)str.charAt(j)).append(thisBuf[i  +  1]);	  ((    char)str.charAt(j)).append(thisBuf[i    +    1]);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
174	[BUG]  [BUGGY]  bucket  =  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  i;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  bucket  =  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  i;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	bucket  =  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  i;	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
175	[BUG]  [BUGGY]  rim(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rim(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  i;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rim(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  i;	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
176	[BUG]  [BUGGY]  ||  str.charAt(j)  ==  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ||  str.charAt(j)  ==  thisBuf[i  +  j])  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	||  str.charAt(j)  ==  thisBuf[i  +  j])  {	  if(j    >    0    ||    str.charAt(j)    ==    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
177	[BUG]  [BUGGY]  chars[i]  =  thisBuf.charAt(i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[i]  =  thisBuf.charAt(i);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[i]  =  thisBuf.charAt(i);	  chars[i]    =    thisBuf.charAt(j);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
178	[BUG]  [BUGGY]  continue  outer(i,  j);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  j);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  j);	  continue    outer(i,    len);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
179	[BUG]  [BUGGY]  continue  outer(i,  len  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  len  +  1);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  len  +  1);	  continue    outer(i,    len);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
180	[BUG]  [BUGGY]  continue  outer(i,  strLen  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  strLen  +  1);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  strLen  +  1);	  continue    outer(i,    len);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
181	[BUG]  [BUGGY]  continue  outer(i,  strLen  -  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  strLen  -  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  strLen  -  len);	  continue    outer(i,    len);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
182	[BUG]  [BUGGY]  chars[]  buf  =  str.toCharArray(j);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[]  buf  =  str.toCharArray(j);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[]  buf  =  str.toCharArray(j);	  chars[]    buf    =    str.toCharArray(i);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
183	[BUG]  [BUGGY]  chars[]  buf  =  str.toCharArray(i  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[]  buf  =  str.toCharArray(i  +  1);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[]  buf  =  str.toCharArray(i  +  1);	  chars[]    buf    =    str.toCharArray(i);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
184	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  1,  thisBuf,  0,  strLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  1,  thisBuf,  0,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  1,  thisBuf,  0,  strLen);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    j,    thisBuf,    0,    strLen);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
185	[BUG]  [BUGGY]  continue  indexOf  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  indexOf  -  1;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  indexOf  -  1;	  continue    indexOf;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
186	[BUG]  [BUGGY]  continue  indexOf(i,  outer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  indexOf(i,  outer);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  indexOf(i,  outer);	  continue    indexOf;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
187	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(thisBuf,  i,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(thisBuf,  i,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(thisBuf,  i,  len);	  ((    char)str.charAt(j)).replace(thisBuf,    startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
188	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(thisBuf,  startIndex,  len  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(thisBuf,  startIndex,  len  +  1);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(thisBuf,  startIndex,  len  +  1);	  ((    char)str.charAt(j)).replace(thisBuf,    startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
189	[BUG]  [BUGGY]  ((  String)str.charAt(j)).replace(thisBuf,  startIndex,  len);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  String)str.charAt(j)).replace(thisBuf,  startIndex,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  String)str.charAt(j)).replace(thisBuf,  startIndex,  len);	  ((    char)str.charAt(j)).replace(thisBuf,    startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
190	[BUG]  [BUGGY]  ((  String)str.charAt(j)).replace(buffer,  i,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  String)str.charAt(j)).replace(buffer,  i,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  String)str.charAt(j)).replace(buffer,  i,  len);	  ((    String)str.charAt(j)).replace(buffer,    startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
191	[BUG]  [BUGGY]  continue  thisBuf[i  +  2];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  thisBuf[i  +  2];  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  thisBuf[i  +  2];	  continue    thisBuf[i    +    1];    	non-compiled	[CE]  <identifier>  expected	7	None	replace
192	[BUG]  [BUGGY]  continue(i  +  len]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue(i  +  len]);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue(i  +  len]);	  continue    thisBuf[i    +    strLen];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
193	[BUG]  [BUGGY]  continue  outer(i,  startIndex  -  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  startIndex  -  size);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  startIndex  -  size);	  continue    outer(i,    size    -    startIndex);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
194	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  size,  thisBuf.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  size,  thisBuf.length);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  startIndex,  size,  thisBuf.length);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
195	[BUG]  [BUGGY]  continue  indexOf(i,  j);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  indexOf(i,  j);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  indexOf(i,  j);	  continue    indexOf;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
196	[BUG]  [BUGGY]  ((  char)str.charAt(i  +  1)).append(buffer[i  +  j]).append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(i  +  1)).append(buffer[i  +  j]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(i  +  1)).append(buffer[i  +  j]).append('n');	  ((    char)str.charAt(i)).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	64	None	replace
197	[BUG]  [BUGGY]  ((  char)str.charAt(i  +  1)).append(thisBuf[i  +  1]).append('n');  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(i  +  1)).append(thisBuf[i  +  1]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(i  +  1)).append(thisBuf[i  +  1]).append('n');	  ((    char)str.charAt(i)).append(thisBuf[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	64	None	replace
198	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  j,  thisBuf,  0,  i);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  j,  thisBuf,  0,  i);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  j,  thisBuf,  0,  i);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    i);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
199	[BUG]  [BUGGY]  chars[i]  =  buffer.charAt(i  +  j);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[i]  =  buffer.charAt(i  +  j);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[i]  =  buffer.charAt(i  +  j);	  chars[i]    =    str.charAt(i    +    j);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
200	[BUG]  [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
201	[BUG]  [BUGGY]  readLine(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  readLine(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	readLine(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
202	[BUG]  [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  i);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  i);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  i);  outer  =  buffer[i  +  j];	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
203	[BUG]  [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  nullText);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  nullText);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rackBlock(buffer,  startIndex,  len,  thisBuf,  nullText);  outer  =  buffer[i  +  j];	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
204	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  size)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
205	[BUG]  [BUGGY]  if(j  >=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(j  >=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(j  >=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {	  if(str.charAt(j)!=    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
206	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  j]).append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  j]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).append(buffer[i  +  j]).append('n');	  ((    char)str.charAt(j    +    1)).append(thisBuf[i    +    len]).append('n');    	non-compiled	[CE]  <identifier>  expected	95	None	replace
207	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(thisBuf[i  +  startIndex]).append('n');  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(thisBuf[i  +  startIndex]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).append(thisBuf[i  +  startIndex]).append('n');	  ((    char)str.charAt(j    +    1)).append(thisBuf[i    +    len]).append('n');    	non-compiled	[CE]  <identifier>  expected	95	None	replace
208	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  i]).append('-');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  i]).append('-');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  i]).append('-');	  ((    char)str.charAt(j)).append(buffer[i    +    i]).append('n');    	non-compiled	[CE]  <identifier>  expected	75	None	replace
209	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  len,  thisBuf,  0,  size);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  len,  thisBuf,  0,  size);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  len,  thisBuf,  0,  size);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    size);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
210	[BUG]  [BUGGY]  ®ndreptTo(j,  strLen)>  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ®ndreptTo(j,  strLen)>  thisBuf[i  +  j])  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	®ndreptTo(j,  strLen)>  thisBuf[i  +  j])  {	  îndreptTo(len,    strLen)>    thisBuf[i    +    j])    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
211	[BUG]  [BUGGY]  continue  outer(i,  size  -  j  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  size  -  j  +  1);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  size  -  j  +  1);	  continue    outer(i,    size    -    j);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
212	[BUG]  [BUGGY]  continue  i  +=  strLen;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  i  +=  strLen;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  i  +=  strLen;	  continue    i    +    len;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
213	[BUG]  [BUGGY]  continue  indexOf(i,  startIndex);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  indexOf(i,  startIndex);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  indexOf(i,  startIndex);	  continue    index;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
214	[BUG]  [BUGGY]  continue  indexOf(i,  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  indexOf(i,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  indexOf(i,  len);	  continue    index;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
215	[BUG]  [BUGGY]  continue  outer(len,  size  -  strLen);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(len,  size  -  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(len,  size  -  strLen);	  continue    outer(i,    size    -    strLen);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
216	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len]).append('/')+  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len]).append('/')+  1);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  len]).append('/')+  1);	  ((    char)str.charAt(j)).append(buffer[i    +    len]).append('/'));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
217	[BUG]  [BUGGY]  chars[i]  =  buffer.charAt(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[i]  =  buffer.charAt(i);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[i]  =  buffer.charAt(i);	  chars[i]    =    str.charAt(i);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
218	[BUG]  [BUGGY]  if(j  >=  0  ||  str.charAt(j)!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(j  >=  0  ||  str.charAt(j)!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(j  >=  0  ||  str.charAt(j)!=  thisBuf[i  +  j])  {  continue  outer;  }	  if(j    >    0    ||    str.charAt(j)!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
219	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  startIndex  +  1]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  startIndex  +  1]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  startIndex  +  1]);	  ((    char)str.charAt(j)).append(thisBuf[i    +    startIndex]);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
220	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    i,    thisBuf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
221	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  i,  thisBuf,  i  +  1,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  i,  thisBuf,  i  +  1,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  i,  thisBuf,  i  +  1,  len);	  continue    outer:    System.arraycopy(thisBuf,    i,    thisBuf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
222	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buffer,  0,  len);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  buffer,  0,  len);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  buffer,  0,  len);  outer  =  buffer[i  +  j];	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    strLen);    outer    =    buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
223	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  len);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  buf,  0,  len);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  buf,  0,  len);  outer  =  buffer[i  +  j];	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    strLen);    outer    =    buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
224	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  j]).append('-');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  j]).append('-');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  j]).append('-');	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('-');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
225	[BUG]  [BUGGY]  readLine(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  i;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  readLine(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  i;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	readLine(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  i;	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
226	[BUG]  [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  i);  outer  =  i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  i);  outer  =  i;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  i);  outer  =  i;	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
227	[BUG]  [BUGGY]  readLine(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  i;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  readLine(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  i;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	readLine(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  i;	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
228	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  0,  len);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  0,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  0,  len);	  ((    char)str.charAt(j)).replace(buffer,    i,    len);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
229	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);	  continue    outer:    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
230	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  i);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  i);	  continue    outer:    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
231	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  j);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  j);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  j);  outer  =  buffer[i  +  j];	  if(len    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    outer,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
232	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  j;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(len  >  0)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  j;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(len  >  0)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  len);  outer  =  j;  }	  if(len    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    j;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
233	[BUG]  [BUGGY]  if(j  >=  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(j  >=  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(j  >=  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  j])  {  continue  outer;  }	  if(j    >    0    ||    str.charAt(j    -    1)!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
234	[BUG]  [BUGGY]  if(j  >  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  len])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(j  >  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  len])  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(j  >  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  len])  {  continue  outer;  }	  if(j    >    0    ||    str.charAt(j    -    1)!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
235	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  startIndex,  thisBuf,  i  +  1,  strLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  startIndex,  thisBuf,  i  +  1,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buf,  i,  startIndex,  thisBuf,  i  +  1,  strLen);	  continue    outer:    System.arraycopy(buf,    i,    thisBuf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
236	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buf,  i  +  1,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buf,  i  +  1,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  buf,  i  +  1,  len);	  continue    outer:    System.arraycopy(buf,    i,    thisBuf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
237	[BUG]  [BUGGY]  continue  outer(i  +  j,  size  -  j);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i  +  j,  size  -  j);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i  +  j,  size  -  j);	  continue    outer(i    +    len,    size    -    j);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
238	[BUG]  [BUGGY]  continue  outer(i  +  startIndex,  size  -  j);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i  +  startIndex,  size  -  j);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i  +  startIndex,  size  -  j);	  continue    outer(i    +    len,    size    -    j);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
239	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len  +  j]).append('n');  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len  +  j]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  len  +  j]).append('n');	  ((    char)str.charAt(j)).append(buffer[i    +    startIndex    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	27	None	replace
240	[BUG]  [BUGGY]  ((  char)str.charAt(i)).append(buffer[i  +  startIndex  +  1]).append('n');  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(i)).append(buffer[i  +  startIndex  +  1]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(i)).append(buffer[i  +  startIndex  +  1]).append('n');	  ((    char)str.charAt(j)).append(buffer[i    +    startIndex    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	27	None	replace
241	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  2]).append('n');  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  2]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  2]).append('n');	  ((    char)str.charAt(j)).append(buffer[i    +    startIndex    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	27	None	replace
242	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf.length,  size);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf.length,  size);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf.length,  size);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf.length,    len);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
243	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf,  0,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf,  0,  len);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf.length,    len);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
244	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf,  len);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  startIndex,  thisBuf,  len);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf.length,    len);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
245	[BUG]  [BUGGY]  continue  thisBuf[i  -  1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  thisBuf[i  -  1];  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  thisBuf[i  -  1];	  continue    thisBuf[i];    	non-compiled	[CE]  <identifier>  expected	36	None	replace
246	[BUG]  [BUGGY]  ((  String)str.charAt(i)).replace(buffer,  startIndex,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  String)str.charAt(i)).replace(buffer,  startIndex,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  String)str.charAt(i)).replace(buffer,  startIndex,  len);	  ((    String)str.charAt(j)).replace(buffer,    startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
247	[BUG]  [BUGGY]  continue(i  +  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue(i  +  j];  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue(i  +  j];	  continue    thisBuf[i    +    startIndex];    	non-compiled	[CE]  <identifier>  expected	85	None	replace
248	[BUG]  [BUGGY]  chars[j]  =  buffer.charAt(i);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[j]  =  buffer.charAt(i);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[j]  =  buffer.charAt(i);	  chars[i]    =    buffer.charAt(j);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
249	[BUG]  [BUGGY]  ((  char)str.charAt(i  +  1)).append(thisBuf[i  +  2]).append('/'));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(i  +  1)).append(thisBuf[i  +  2]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(i  +  1)).append(thisBuf[i  +  2]).append('/'));	  ((    char)str.charAt(i    +    1)).append(thisBuf[i    +    1]).append('/'));    	non-compiled	[CE]  <identifier>  expected	96	None	replace
250	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  1]).append('-');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  1]).append('-');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  1]).append('-');	  ((    char)str.charAt(j)).append(buffer[i    +    startIndex    +    1]).append('n');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
251	[BUG]  [BUGGY]  continue  outer:  thisBuf;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  thisBuf;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  thisBuf;	  continue    outer:    len;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
252	[BUG]  [BUGGY]  continue  outer:  thisBuf.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  thisBuf.length;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  thisBuf.length;	  continue    outer:    len;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
253	[BUG]  [BUGGY]  continue  outer:  size;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  size;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  size;	  continue    outer:    len;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
254	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  continue  outer;  }	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    <    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
255	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >=  len)  {  continue  outer;  }	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    <    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
256	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  size)  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  size)  {  continue  outer;  }	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    <    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
257	[BUG]  [BUGGY]  ((  char)str.charAt(i  +  1)).append(buffer[i  +  j]).append('/'));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(i  +  1)).append(buffer[i  +  j]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(i  +  1)).append(buffer[i  +  j]).append('/'));	  ((    char)str.charAt(i)).append(thisBuf[i    +    j]).append('/'));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
258	[BUG]  [BUGGY]  continue  outer[i  +  j];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer[i  +  j];  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer[i  +  j];	  continue    thisBuf[i    +    len];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
259	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  size)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >=  size)  {	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
260	[BUG]  [BUGGY]  rim(buffer,  startIndex,  len,  thisBuf,  0,  size);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rim(buffer,  startIndex,  len,  thisBuf,  0,  size);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rim(buffer,  startIndex,  len,  thisBuf,  0,  size);  outer  =  buffer[i  +  j];	  rim(buffer,    startIndex,    len,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
261	[BUG]  [BUGGY]  rim(buffer,  startIndex,  len,  thisBuf,  0,  i);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rim(buffer,  startIndex,  len,  thisBuf,  0,  i);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rim(buffer,  startIndex,  len,  thisBuf,  0,  i);  outer  =  buffer[i  +  j];	  rim(buffer,    startIndex,    len,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	33	None	replace
262	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  startIndex]).append('n');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  startIndex]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).append(buffer[i  +  startIndex]).append('n');	  ((    char)str.charAt(j    +    1)).append(buffer[i    +    len]).append('n');    	non-compiled	[CE]  <identifier>  expected	94	None	replace
263	[BUG]  [BUGGY]  continue  outer(i,  startIndex);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  startIndex);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  startIndex);	  continue    outer(i,    len);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
264	[BUG]  [BUGGY]  continue  outer(i  +  1,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i  +  1,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i  +  1,  len);	  continue    outer(i,    len);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
265	[BUG]  [BUGGY]  continue  outer(i,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  size);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  size);	  continue    outer(i,    len);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
266	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  startIndex,  thisBuf,  i  +  1,  len);	  continue    outer:    System.arraycopy(thisBuf,    startIndex,    thisBuf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
267	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  thisBuf,  startIndex  +  1,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  thisBuf,  startIndex  +  1,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  thisBuf,  startIndex  +  1,  len);	  continue    outer:    System.arraycopy(thisBuf,    startIndex,    thisBuf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
268	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  i,  thisBuf,  0,  startIndex);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  i,  thisBuf,  0,  startIndex);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  i,  thisBuf,  0,  startIndex);	  continue    outer:    System.arraycopy(buffer,    i,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
269	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  thisBuf,  i  +  1,  len);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  thisBuf,  i  +  1,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buf,  i,  thisBuf,  i  +  1,  len);	  continue    outer:    System.arraycopy(thisBuf,    i,    buf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
270	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]).append('0');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  1]).append('0');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  1]).append('0');	  ((    char)str.charAt(j)).append(buffer[i    +    1]).append('n');    	non-compiled	[CE]  <identifier>  expected	25	None	replace
271	[BUG]  [BUGGY]  readInsertion(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  readInsertion(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	readInsertion(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  buffer[i  +  j];	  if(len    >=    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
272	[BUG]  [BUGGY]  continue  chars[startIndex  +  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  chars[startIndex  +  j];  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  chars[startIndex  +  j];	  continue    chars[i    +    j];    	non-compiled	[CE]  <identifier>  expected	97	None	replace
273	[BUG]  [BUGGY]  luate(buffer,  startIndex,  thisBuf,  0,  j);  outer  =  i;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  luate(buffer,  startIndex,  thisBuf,  0,  j);  outer  =  i;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	luate(buffer,  startIndex,  thisBuf,  0,  j);  outer  =  i;	  luate(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
274	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  size,  thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  startIndex,  size,  thisBuf[i  +  j]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  startIndex,  size,  thisBuf[i  +  j]);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
275	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  startIndex,  thisBuf,  len  +  1,  strLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  startIndex,  thisBuf,  len  +  1,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buf,  i,  startIndex,  thisBuf,  len  +  1,  strLen);	  continue    outer:    System.arraycopy(thisBuf,    i,    buf,    startIndex    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
276	[BUG]  [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  outer  =  buf[i  +  j];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  outer  =  buf[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  startIndex,  thisBuf,  0,  size);  outer  =  buf[i  +  j];	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buf[i    +    j];    	non-compiled	[CE]  <identifier>  expected	35	None	replace
277	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  j]).append('/')+  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  j]).append('/')+  1);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  j]).append('/')+  1);	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('/'));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
278	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buf,  startIndex,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buf,  startIndex,  thisBuf,  0,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buf,  startIndex,  thisBuf,  0,  len);	  continue    outer:    System.arraycopy(buf,    startIndex,    thisBuf,    i    +    1,    len);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
279	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  thisBuf,  0,  strLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  thisBuf,  0,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buf,  i,  thisBuf,  0,  strLen);	  continue    outer:    System.arraycopy(buf,    i,    thisBuf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
280	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >  len)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >  len)  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >  len)  {	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
281	[BUG]  [BUGGY]  chars[i]  =  str.charAt(i  +  1,  j);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[i]  =  str.charAt(i  +  1,  j);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[i]  =  str.charAt(i  +  1,  j);	  chars[i]    =    str.charAt(i    +    j);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
282	[BUG]  [BUGGY]  continue  indexOf(buffer,  i  +  len,  strLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  indexOf(buffer,  i  +  len,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  indexOf(buffer,  i  +  len,  strLen);	  continue    index;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
283	[BUG]  [BUGGY]  continue  indexOf(buffer,  i  +  1,  len);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  indexOf(buffer,  i  +  1,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  indexOf(buffer,  i  +  1,  len);	  continue    index;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
284	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  startIndex,  len,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  startIndex,  len,  size);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  buffer,  startIndex,  len,  size);	  continue    outer:    System.arraycopy(thisBuf,    i,    startIndex,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
285	[BUG]  [BUGGY]  ((  char)str.charAt(i  +  1)).append(buffer[i  +  len]).append('n');  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(i  +  1)).append(buffer[i  +  len]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(i  +  1)).append(buffer[i  +  len]).append('n');	  ((    char)str.charAt(i)).append(buffer[i    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	76	None	replace
286	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  len]);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  len]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).append(buffer[i  +  len]);	  ((    char)str.charAt(j)).append(buffer[i    +    len]);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
287	[BUG]  [BUGGY]  continue(i  +  j]);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue(i  +  j]);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue(i  +  j]);	  continue    thisBuf[i    +    strLen];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
288	[BUG]  [BUGGY]  if(j  ==  0  ||  str.charAt(j)!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(j  ==  0  ||  str.charAt(j)!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(j  ==  0  ||  str.charAt(j)!=  thisBuf[i  +  j])  {  continue  outer;  }	  if(j    >    0    ||    str.charAt(j)!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
289	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  len)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  len)  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  len)  {  continue  outer;  }	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    <    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
290	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  =  size)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  =  size)  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  <  =  size)  {  continue  outer;  }	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    <    size)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
291	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).replace(buffer,  startIndex,  thisBuf.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).replace(buffer,  startIndex,  thisBuf.length);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).replace(buffer,  startIndex,  thisBuf.length);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf.length);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
292	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  i  +  strLen,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  i  +  strLen,  thisBuf,  0,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  i  +  strLen,  thisBuf,  0,  len);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    len);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
293	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len  +  strLen  +  j]).append('n');  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len  +  strLen  +  j]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  len  +  strLen  +  j]).append('n');	  ((    char)str.charAt(j)).append(buffer[i    +    startIndex    +    j]).append('n');    	non-compiled	[CE]  <identifier>  expected	27	None	replace
294	[BUG]  [BUGGY]  ||  j  >  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ||  j  >  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	||  j  >  0  ||  str.charAt(j  -  1)!=  thisBuf[i  +  j])  {  continue  outer;  }	  if(j    >    0    ||    str.charAt(j    -    1)!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
295	[BUG]  [BUGGY]  ®ndreptTo(len,  j)>  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ®ndreptTo(len,  j)>  thisBuf[i  +  j])  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	®ndreptTo(len,  j)>  thisBuf[i  +  j])  {	  îndreptTo(len,    strLen)>    thisBuf[i    +    j])    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
296	[BUG]  [BUGGY]  ®ndreptTo(len,  len)>  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ®ndreptTo(len,  len)>  thisBuf[i  +  j])  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	®ndreptTo(len,  len)>  thisBuf[i  +  j])  {	  îndreptTo(len,    strLen)>    thisBuf[i    +    j])    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
297	[BUG]  [BUGGY]  ®ndreptTo(len,  strLen)>  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ®ndreptTo(len,  strLen)>  thisBuf[i  +  j])  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	®ndreptTo(len,  strLen)>  thisBuf[i  +  j])  {	  îndreptTo(len,    strLen)>    thisBuf[i    +    j])    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
298	[BUG]  [BUGGY]  ®ndreptTo(len,  i)>  thisBuf[i  +  j])  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ®ndreptTo(len,  i)>  thisBuf[i  +  j])  {  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	®ndreptTo(len,  i)>  thisBuf[i  +  j])  {	  îndreptTo(len,    strLen)>    thisBuf[i    +    j])    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
299	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  i  +  strLen,  thisBuf,  0,  strLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  i  +  strLen,  thisBuf,  0,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  i  +  strLen,  thisBuf,  0,  strLen);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    j,    thisBuf,    0,    strLen);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
300	[BUG]  [BUGGY]  chars[j]  =  str.charAt(j);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[j]  =  str.charAt(j);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[j]  =  str.charAt(j);	  chars[i]    =    thisBuf.charAt(j);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
301	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  len]).append('-');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  len]).append('-');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).append(buffer[i  +  len]).append('-');	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('-');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
302	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('-');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('-');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(thisBuf[i  +  j]).append('-');	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('-');    	non-compiled	[CE]  <identifier>  expected	67	None	replace
303	[BUG]  [BUGGY]  System.arraycopy(buffer,  i,  len,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  System.arraycopy(buffer,  i,  len,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	System.arraycopy(buffer,  i,  len,  thisBuf,  0,  strLen);  outer  =  buffer[i  +  j];	  System.arraycopy(buffer,    startIndex,    thisBuf,    0,    strLen);    outer    =    buffer[i    +    j];    	non-compiled	[CE]  <identifier>  expected	34	None	replace
304	[BUG]  [BUGGY]  chars[]  buf  =  str.toCharArray(i  +  len);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[]  buf  =  str.toCharArray(i  +  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[]  buf  =  str.toCharArray(i  +  len);	  chars[]    buf    =    str.toCharArray(i);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
305	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  len  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  len  +  1);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  i,  len  +  1);	  ((    char)str.charAt(j)).replace(buffer,    i,    len);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
306	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  len,  thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  i,  len,  thisBuf[i  +  j]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  i,  len,  thisBuf[i  +  j]);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
307	[BUG]  [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  len,  thisBuf[i  +  j]);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).replace(buffer,  len,  thisBuf[i  +  j]);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).replace(buffer,  len,  thisBuf[i  +  j]);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    thisBuf[i    +    j]);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
308	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  i  +  strLen,  thisBuf,  0,  size);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  i  +  strLen,  thisBuf,  0,  size);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  i  +  strLen,  thisBuf,  0,  size);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    i);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
309	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  len  +  1]).append('n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  len  +  1]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).append(buffer[i  +  len  +  1]).append('n');	  ((    char)str.charAt(j)).append(buffer[i    +    startIndex    +    1]).append('n');    	non-compiled	[CE]  <identifier>  expected	50	None	replace
310	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(thisBuf[i  +  len]).append('/'));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(thisBuf[i  +  len]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).append(thisBuf[i  +  len]).append('/'));	  ((    char)str.charAt(j)).append(thisBuf[i    +    len]).append('/'));    	non-compiled	[CE]  <identifier>  expected	31	None	replace
311	[BUG]  [BUGGY]  ((  char)str.charAt(i  +  1)).append(buf[i  +  1]).append('/'));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(i  +  1)).append(buf[i  +  1]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(i  +  1)).append(buf[i  +  1]).append('/'));	  ((    char)str.charAt(i    +    1)).append(thisBuf[i    +    1]).append('/'));    	non-compiled	[CE]  <identifier>  expected	96	None	replace
312	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buf,  i,  thisBuf,  0,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buf,  i,  thisBuf,  0,  len);	  continue    outer:    System.arraycopy(buf,    startIndex,    thisBuf,    i    +    1,    len);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
313	[BUG]  [BUGGY]  ((  char)str.charAt(i  +  len)).append(thisBuf[i  +  j]).append('/'));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(i  +  len)).append(thisBuf[i  +  j]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(i  +  len)).append(thisBuf[i  +  j]).append('/'));	  ((    char)str.charAt(i)).append(thisBuf[i    +    j]).append('/'));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
314	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  len])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  len])  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)!=  thisBuf[i  +  len])  {  continue  outer;  }	  if(str.charAt(j)!=    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
315	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len]).append('/');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  len]).append('/');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  len]).append('/');	  ((    char)str.charAt(j)).append(buffer[i    +    len]).append('n');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
316	[BUG]  [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  i;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  i;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rackBlock(buffer,  startIndex,  len,  thisBuf,  0,  len);  outer  =  i;	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
317	[BUG]  [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  null);  outer  =  i;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  null);  outer  =  i;  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rackBlock(buffer,  startIndex,  len,  thisBuf,  null);  outer  =  i;	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
318	[BUG]  [BUGGY]  luate(buffer,  i,  thisBuf,  0,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  luate(buffer,  i,  thisBuf,  0,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	luate(buffer,  i,  thisBuf,  0,  len);	  luate(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    i;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
319	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  thisBuf,  i  +  1,  len);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(thisBuf,  i,  thisBuf,  i  +  1,  len);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(thisBuf,  i,  thisBuf,  i  +  1,  len);	  continue    outer:    System.arraycopy(thisBuf,    i,    thisBuf,    i    +    1,    strLen);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
320	[BUG]  [BUGGY]  chars[j]  =  str.charAt(i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[j]  =  str.charAt(i);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[j]  =  str.charAt(i);	  chars[i]    =    str.charAt(i);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
321	[BUG]  [BUGGY]  if(j  >  0  ||  str.charAt(j  +  1)  ==  thisBuf[i  +  j])  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(j  >  0  ||  str.charAt(j  +  1)  ==  thisBuf[i  +  j])  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(j  >  0  ||  str.charAt(j  +  1)  ==  thisBuf[i  +  j])  {  continue  outer;  }	  if(j    >    0    ||    str.charAt(j)    ==    thisBuf[i    +    j])    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
322	[BUG]  [BUGGY]  if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  buffer,  0,  len);  outer  =  buffer[i  +  j];  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  buffer,  0,  len);  outer  =  buffer[i  +  j];  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  buffer,  0,  len);  outer  =  buffer[i  +  j];  }	  if(len    >=    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
323	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  len]).append('/'));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(buffer[i  +  len]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).append(buffer[i  +  len]).append('/'));	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('/'));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
324	[BUG]  [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  1]).append('/'));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  1]).append('/'));  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j)).append(buffer[i  +  startIndex  +  1]).append('/'));	  ((    char)str.charAt(j)).append(buffer[i    +    j]).append('/'));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
325	[BUG]  [BUGGY]  continue  indexOf(i  +  1,  strLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  indexOf(i  +  1,  strLen);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  indexOf(i  +  1,  strLen);	  continue    indexOf;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
326	[BUG]  [BUGGY]  ((  String)str.charAt(j  +  1)).replace(buffer,  startIndex,  len);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  String)str.charAt(j  +  1)).replace(buffer,  startIndex,  len);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  String)str.charAt(j  +  1)).replace(buffer,  startIndex,  len);	  ((    String)str.charAt(j)).replace(buffer,    startIndex,    len);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
327	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).append(buf[i  +  j]).append('n');  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).append(buf[i  +  j]).append('n');  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).append(buf[i  +  j]).append('n');	  ((    char)str.charAt(j    +    1)).append(thisBuf[i    +    len]).append('n');    	non-compiled	[CE]  <identifier>  expected	95	None	replace
328	[BUG]  [BUGGY]  continue  outer:  len  +  i;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  len  +  i;  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  len  +  i;	  continue    outer:    len;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
329	[BUG]  [BUGGY]  char[]  buf  =  str.toCharArray();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  char[]  buf  =  str.toCharArray();  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	char[]  buf  =  str.toCharArray();	  char[]    buf    =    buffer.toCharArray();    	non-compiled	[CE]  <identifier>  expected	87	None	replace
330	[BUG]  [BUGGY]  continue  outer(i,  len  +  j);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(i,  len  +  j);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(i,  len  +  j);	  continue    outer(i,    len);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
331	[BUG]  [BUGGY]  continue  outer(len,  size  -  startIndex);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer(len,  size  -  startIndex);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer(len,  size  -  startIndex);	  continue    outer(i,    size    -    startIndex);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
332	[BUG]  [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >  len)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >  len)  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)  ==  thisBuf[i  +  j]  ||  startIndex  >  len)  {  continue  outer;  }	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
333	[BUG]  [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >  len)  {  continue  outer;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >  len)  {  continue  outer;  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(str.charAt(j)!=  thisBuf[i  +  j]  ||  startIndex  >  len)  {  continue  outer;  }	  if(str.charAt(j)    ==    thisBuf[i    +    j]    ||    startIndex    >=    len)    {    continue    outer;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
334	[BUG]  [BUGGY]  ((  char)str.charAt(j  +  1)).replace(buffer,  startIndex,  size);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  ((  char)str.charAt(j  +  1)).replace(buffer,  startIndex,  size);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	((  char)str.charAt(j  +  1)).replace(buffer,  startIndex,  size);	  ((    char)str.charAt(j)).replace(buffer,    startIndex,    size);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
335	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  thisBuf,  0,  size  -  startIndex);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  thisBuf,  0,  size  -  startIndex);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  thisBuf,  0,  size  -  startIndex);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    size);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
336	[BUG]  [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  thisBuf,  0,  size  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  thisBuf,  0,  size  -  1);  [BUGGY]      }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	continue  outer:  System.arraycopy(buffer,  startIndex  +  strLen,  thisBuf,  0,  size  -  1);	  continue    outer:    System.arraycopy(buffer,    startIndex    +    strLen,    thisBuf,    0,    size);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
337	[BUG]  [BUGGY]  if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  strLen);  outer  =  buffer[i  +  j];  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  strLen);  outer  =  buffer[i  +  j];  }  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	if(len  >  size)  {  System.arraycopy(buffer,  startIndex,  thisBuf,  0,  outer,  strLen);  outer  =  buffer[i  +  j];  }	  if(len    >    size)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    outer,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
338	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  [Delete]  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	[Delete]	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
339	[BUG]  [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  null);  outer  =  buffer[i  +  j];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  null);  outer  =  buffer[i  +  j];  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rackBlock(buffer,  startIndex,  len,  thisBuf,  null);  outer  =  buffer[i  +  j];	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
340	[BUG]  [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  outer);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  rackBlock(buffer,  startIndex,  len,  thisBuf,  outer);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	rackBlock(buffer,  startIndex,  len,  thisBuf,  outer);	  if(len    >    0)    {    System.arraycopy(buffer,    startIndex,    thisBuf,    0,    len);    outer    =    buffer[i    +    j];    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
341	[BUG]  [BUGGY]  chars[i]  =  separator.charAt(i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {      [BUGGY]  chars[i]  =  separator.charAt(i);  [BUGGY]      continue  outer;  }  }  return  i;  }  return  -1;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1781	1781	1	replace	chars[i]  =  separator.charAt(i);	  chars[i]    =    separator.charAt(j);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
