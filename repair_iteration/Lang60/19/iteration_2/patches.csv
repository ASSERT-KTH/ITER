bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf(',',  size);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf(',',  size);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf(',',  size);	  Integer    strLen    =    str.indexOf(',',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
2	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf(',',  startIndex  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf(',',  startIndex  +  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf(',',  startIndex  +  1);	  Integer    strLen    =    str.indexOf(',',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
3	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf(',',  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf(',',  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf(',',  1);	  Integer    strLen    =    str.indexOf(',',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
4	[BUG]  [BUGGY]  Integer  strLen  =  str.lastIndexOf(',',  startIndex);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.lastIndexOf(',',  startIndex);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.lastIndexOf(',',  startIndex);	  Integer    strLen    =    str.indexOf(',',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
5	[BUG]  [BUGGY]  if(strLen  <  size)  {  if(strLen  ==  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  size)  {  if(strLen  ==  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  size)  {  if(strLen  ==  size)  {  return  -1;  }	  if(strLen    <    =    size)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  Integer  strLen  =  str.length();  if(strLen  ==  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.length();  if(strLen  ==  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.length();  if(strLen  ==  size)  {  return  -1;  }	  Integer    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
7	[BUG]  [BUGGY]  Integer  strLen  =  str.length();  if(strLen  >  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.length();  if(strLen  >  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.length();  if(strLen  >  0)  {  return  -1;  }	  Integer    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
8	[BUG]  [BUGGY]  Integer  strLen  =  str.length();  if(strLen!=  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.length();  if(strLen!=  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.length();  if(strLen!=  size)  {  return  -1;  }	  Integer    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
9	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('/',  startIndex  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('/',  startIndex  +  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('/',  startIndex  +  1);	  Integer    strLen    =    str.indexOf('/',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
10	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('/',  size);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('/',  size);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('/',  size);	  Integer    strLen    =    str.indexOf('/',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
11	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('/',  startIndex  +  1,  strLen);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('/',  startIndex  +  1,  strLen);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('/',  startIndex  +  1,  strLen);	  Integer    strLen    =    str.indexOf('/',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
12	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('/',  startIndex  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('/',  startIndex  -  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('/',  startIndex  -  1);	  Integer    strLen    =    str.indexOf('/',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
13	[BUG]  [BUGGY]  if(strLen  <  size)  {  if(strLen  >  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  size)  {  if(strLen  >  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  size)  {  if(strLen  >  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    >    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  if(strLen  <  =  size)  {  if(strLen  >  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  =  size)  {  if(strLen  >  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  =  size)  {  if(strLen  >  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    >    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  if(strLen  >  0)  {  if(strLen  <  =  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  0)  {  if(strLen  <  =  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0)  {  if(strLen  <  =  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    >    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  int  len  =  str.length()  -  startIndex  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  len  =  str.length()  -  startIndex  +  1;  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  len  =  str.length()  -  startIndex  +  1;	  int    len    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
17	[BUG]  [BUGGY]  int  len  =  str.length()  /  startIndex;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  len  =  str.length()  /  startIndex;  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  len  =  str.length()  /  startIndex;	  int    len    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
18	[BUG]  [BUGGY]  int  strLen  =  str.length();  if(strLen  >  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  str.length();  if(strLen  >  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length();  if(strLen  >  0)  {  return  -1;  }	  if(strLen    >    size)    {    int    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
19	[BUG]  [BUGGY]  int  strLen  =  str.length();  if(strLen  ==  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  str.length();  if(strLen  ==  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length();  if(strLen  ==  size)  {  return  -1;  }	  if(strLen    >    size)    {    int    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
20	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('uff',  startIndex);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('uff',  startIndex);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('uff',  startIndex);	  Integer    strLen    =    str.indexOf('uff',    strLen);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
21	[BUG]  [BUGGY]  Integer  strLen  =  str.lastIndexOf('uff',  strLen);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.lastIndexOf('uff',  strLen);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.lastIndexOf('uff',  strLen);	  Integer    strLen    =    str.indexOf('uff',    strLen);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
22	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('u',  strLen);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('u',  strLen);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('u',  strLen);	  Integer    strLen    =    str.indexOf('uff',    strLen);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
23	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('uff',  size);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('uff',  size);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('uff',  size);	  Integer    strLen    =    str.indexOf('uff',    strLen);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
24	[BUG]  [BUGGY]  char[]  buf  =  this.buffer.toCharArray(startIndex);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  char[]  buf  =  this.buffer.toCharArray(startIndex);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char[]  buf  =  this.buffer.toCharArray(startIndex);	  char[]    buf    =    this.buffer.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
25	[BUG]  [BUGGY]  int  len  =  strLen  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  len  =  strLen  +  1;  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  len  =  strLen  +  1;	  int    len    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  char  len  =  str.length();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  char  len  =  str.length();  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char  len  =  str.length();	  int    len    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  char[]  buf  =  thisBuf.getBuffer();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  char[]  buf  =  thisBuf.getBuffer();  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char[]  buf  =  thisBuf.getBuffer();	  char[]    buf    =    thisBuf.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
28	[BUG]  [BUGGY]  if(strLen  >  0  ||  strLen  >=  size)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  0  ||  strLen  >=  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0  ||  strLen  >=  size)  {	  if(strLen    >    0    ||    strLen    <    size)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
29	[BUG]  [BUGGY]  if(strLen  >  0  ||  strLen  ==  size)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  0  ||  strLen  ==  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0  ||  strLen  ==  size)  {	  if(strLen    >    0    ||    strLen    <    size)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
30	[BUG]  [BUGGY]  int  strLen  =  thisBuf.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  thisBuf.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  thisBuf.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }	  int    strLen    =    str.length();    for(int    i    =    startIndex;    i    <    strLen;    i++)    {    buffer[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
31	[BUG]  [BUGGY]  long  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  long  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	long  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }	  int    strLen    =    str.length();    for(int    i    =    startIndex;    i    <    strLen;    i++)    {    buffer[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
32	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('-',  startIndex  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('-',  startIndex  +  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('-',  startIndex  +  1);	  Integer    strLen    =    str.indexOf('-',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
33	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('-',  size);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('-',  size);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('-',  size);	  Integer    strLen    =    str.indexOf('-',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
34	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('-',  startIndex  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('-',  startIndex  -  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('-',  startIndex  -  1);	  Integer    strLen    =    str.indexOf('-',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
35	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('-',  startIndex  +  1,  strLen);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('-',  startIndex  +  1,  strLen);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('-',  startIndex  +  1,  strLen);	  Integer    strLen    =    str.indexOf('-',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
36	[BUG]  [BUGGY]  Integer  strLen  =  str.lastIndexOf('  ',  startIndex  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.lastIndexOf('  ',  startIndex  +  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.lastIndexOf('  ',  startIndex  +  1);	  Integer    strLen    =    str.lastIndexOf('    ',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
37	[BUG]  [BUGGY]  Integer  strLen  =  str.lastIndexOf('  ',  startIndex  +  1,  strLen);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.lastIndexOf('  ',  startIndex  +  1,  strLen);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.lastIndexOf('  ',  startIndex  +  1,  strLen);	  Integer    strLen    =    str.lastIndexOf('    ',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
38	[BUG]  [BUGGY]  Integer  strLen  =  str.lastIndexOf('  ',  startIndex  +  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.lastIndexOf('  ',  startIndex  +  2);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.lastIndexOf('  ',  startIndex  +  2);	  Integer    strLen    =    str.lastIndexOf('    ',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
39	[BUG]  [BUGGY]  String  strLen  =  str.length();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  String  strLen  =  str.length();  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	String  strLen  =  str.length();	  char    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
40	[BUG]  [BUGGY]  if(strLen  <  =  size)  {  if(strLen  >=  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  =  size)  {  if(strLen  >=  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  =  size)  {  if(strLen  >=  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    >=    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
41	[BUG]  [BUGGY]  if(strLen  >  size)  {  if(strLen  >=  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  size)  {  if(strLen  >=  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  size)  {  if(strLen  >=  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    >=    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
42	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('  ',  size  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('  ',  size  +  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('  ',  size  +  1);	  Integer    strLen    =    str.indexOf('    ',    startIndex    +    1);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
43	[BUG]  [BUGGY]  int  len  =  strLen  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  len  =  strLen  -  1;  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  len  =  strLen  -  1;	  int    len    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
44	[BUG]  [BUGGY]  if(strLen  >  0  ||  strLen  >  size)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  0  ||  strLen  >  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0  ||  strLen  >  size)  {	  if(strLen    >    0    ||    size    >    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
45	[BUG]  [BUGGY]  if(size  >  0  ||  strLen  >  size)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(size  >  0  ||  strLen  >  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(size  >  0  ||  strLen  >  size)  {	  if(strLen    >    0    ||    size    >    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
46	[BUG]  [BUGGY]  char[]  buf  =  buffer.toCharArray(strLen);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  char[]  buf  =  buffer.toCharArray(strLen);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char[]  buf  =  buffer.toCharArray(strLen);	  char[]    buf    =    buffer.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
47	[BUG]  [BUGGY]  int  strLen  =  str.length();  if(strLen  >=  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  str.length();  if(strLen  >=  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length();  if(strLen  >=  size)  {  return  -1;  }	  int    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
48	[BUG]  [BUGGY]  int  strLen  =  str.length();  if(strLen!=  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  str.length();  if(strLen!=  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length();  if(strLen!=  size)  {  return  -1;  }	  int    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
49	[BUG]  [BUGGY]  if(strLen  <  =  size)  {  if(strLen  ==  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  =  size)  {  if(strLen  ==  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  =  size)  {  if(strLen  ==  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    ==    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  if(strLen  <  size)  {  if(strLen  ==  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  size)  {  if(strLen  ==  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  size)  {  if(strLen  ==  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    ==    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
51	[BUG]  [BUGGY]  if(size  >  0)  {  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(size  >  0)  {  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(size  >  0)  {  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }	  if(strLen    >    0)    {    int    strLen    =    str.length();    for(int    i    =    startIndex;    i    <    strLen;    i++)    {    buffer[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
52	[BUG]  [BUGGY]  Integer  strLen  =  str.lastIndexOf('  ',  size);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.lastIndexOf('  ',  size);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.lastIndexOf('  ',  size);	  Integer    strLen    =    str.indexOf('    ',    size);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
53	[BUG]  [BUGGY]  int  strLen  =  str.indexOf('  ',  startIndex);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  str.indexOf('  ',  startIndex);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.indexOf('  ',  startIndex);	  Integer    strLen    =    str.indexOf('    ',    size);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
54	[BUG]  [BUGGY]  Integer  strLen  =  this.str.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  this.str.length()  -  1;  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  this.str.length()  -  1;	  Integer    strLen    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
55	[BUG]  [BUGGY]  Integer  strLen  =  this.str.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  this.str.length()  +  1;  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  this.str.length()  +  1;	  Integer    strLen    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
56	[BUG]  [BUGGY]  int  strLen  =  str.length();  if(strLen  <  1)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  str.length();  if(strLen  <  1)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length();  if(strLen  <  1)  {  return  -1;  }	  int    strLen    =    str.length();    if(strLen    <    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
57	[BUG]  [BUGGY]  Long  strLen  =  str.length();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Long  strLen  =  str.length();  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Long  strLen  =  str.length();	  Integer    strLen    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
58	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  length);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  length);	  Integer    strLen    =    str.indexOf('    ',    startIndex    +    1,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
59	[BUG]  [BUGGY]  int  strLen  =  str.indexOf('  ',  startIndex  +  1,  strLen);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  str.indexOf('  ',  startIndex  +  1,  strLen);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.indexOf('  ',  startIndex  +  1,  strLen);	  Integer    strLen    =    str.indexOf('    ',    startIndex    +    1,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
60	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  buffer.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  buffer.length);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  buffer.length);	  Integer    strLen    =    str.indexOf('    ',    startIndex    +    1,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
61	[BUG]  [BUGGY]  if(strLen  ==  0)  {  if(strLen  ==  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  0)  {  if(strLen  ==  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  0)  {  if(strLen  ==  size)  {  return  -1;  }	  if(strLen    >=    size)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
62	[BUG]  [BUGGY]  if(strLen  >  size)  {  if(strLen  >=  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  size)  {  if(strLen  >=  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  size)  {  if(strLen  >=  size)  {  return  -1;  }	  if(strLen    >=    size)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
63	[BUG]  [BUGGY]  if(strLen  ==  0)  {  if(strLen  >  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  0)  {  if(strLen  >  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  0)  {  if(strLen  >  size)  {  return  -1;  }	  if(strLen    ==    size)    {    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
64	[BUG]  [BUGGY]  if(strLen  >  0)  {  if(strLen  <  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  0)  {  if(strLen  <  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0)  {  if(strLen  <  size)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
65	[BUG]  [BUGGY]  if(strLen  >  0)  {  if(strLen  <  =  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  0)  {  if(strLen  <  =  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0)  {  if(strLen  <  =  size)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
66	[BUG]  [BUGGY]  if(strLen  ==  size)  {  if(strLen  >  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  size)  {  if(strLen  >  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  size)  {  if(strLen  >  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
67	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  size  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  size  -  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  size  -  1);	  Integer    strLen    =    str.indexOf('    ',    startIndex    +    1,    size);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
68	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  startIndex  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  str.length()  -  startIndex  +  1;  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length()  -  startIndex  +  1;	  int    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
69	[BUG]  [BUGGY]  int  strLen  =  str.length()  +  startIndex;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  str.length()  +  startIndex;  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length()  +  startIndex;	  int    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
70	[BUG]  [BUGGY]  if(strLen  <  =  size)  {  if(strLen  <  =  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  =  size)  {  if(strLen  <  =  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  =  size)  {  if(strLen  <  =  size)  {  return  -1;  }	  if(strLen    >    size)    {    if(strLen    <    =    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
71	[BUG]  [BUGGY]  if(strLen  ==  size)  {  if(strLen  <  =  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  size)  {  if(strLen  <  =  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  size)  {  if(strLen  <  =  size)  {  return  -1;  }	  if(strLen    >    size)    {    if(strLen    <    =    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
72	[BUG]  [BUGGY]  if(strLen  <  size)  {  if(strLen  <  =  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  size)  {  if(strLen  <  =  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  size)  {  if(strLen  <  =  size)  {  return  -1;  }	  if(strLen    >    size)    {    if(strLen    <    =    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
73	[BUG]  [BUGGY]  int  strLen  =  this.str.length()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  this.str.length()  -  1;  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  this.str.length()  -  1;	  int    strLen    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
74	[BUG]  [BUGGY]  int  strLen  =  this.str.length()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  this.str.length()  +  1;  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  this.str.length()  +  1;	  int    strLen    =    this.str.length();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
75	[BUG]  [BUGGY]  if(strLen  >  0  ||  startIndex  <  strLen)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  0  ||  startIndex  <  strLen)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0  ||  startIndex  <  strLen)  {	  if(strLen    >    0    ||    startIndex    <    size)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
76	[BUG]  [BUGGY]  if(strLen  <  size)  {  if(strLen  >  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  size)  {  if(strLen  >  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  size)  {  if(strLen  >  size)  {  return  -1;  }	  if(strLen    <    =    size)    {    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
77	[BUG]  [BUGGY]  if(strLen  <  size)  {  if(strLen  >  length)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  size)  {  if(strLen  >  length)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  size)  {  if(strLen  >  length)  {  return  -1;  }	  if(strLen    <    =    size)    {    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
78	[BUG]  [BUGGY]  if(strLen  ==  0)  {  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  0)  {  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  0)  {  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }	  if(strLen    ==    size)    {    int    strLen    =    str.length();    for(int    i    =    startIndex;    i    <    strLen;    i++)    {    buffer[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
79	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('.',  startIndex  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('.',  startIndex  +  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('.',  startIndex  +  1);	  Integer    strLen    =    str.indexOf('.',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
80	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('.',  startIndex  +  1,  strLen);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('.',  startIndex  +  1,  strLen);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('.',  startIndex  +  1,  strLen);	  Integer    strLen    =    str.indexOf('.',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
81	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('.',  size);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('.',  size);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('.',  size);	  Integer    strLen    =    str.indexOf('.',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
82	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('.',  startIndex  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('.',  startIndex  -  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('.',  startIndex  -  1);	  Integer    strLen    =    str.indexOf('.',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
83	[BUG]  [BUGGY]  int  len  =  strLen  -  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  len  =  strLen  -  2;  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  len  =  strLen  -  2;	  int    len    =    str.length()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
84	[BUG]  [BUGGY]  if(strLen  ==  0  ||  strLen  ==  0)  {  if(strLen  ==  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  0  ||  strLen  ==  0)  {  if(strLen  ==  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  0  ||  strLen  ==  0)  {  if(strLen  ==  size)  {  return  -1;  }	  if(strLen    ==    size)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
85	[BUG]  [BUGGY]  if(strLen  <  =  0  ||  strLen  >  size)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  =  0  ||  strLen  >  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  =  0  ||  strLen  >  size)  {	  if(strLen    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
86	[BUG]  [BUGGY]  if(strLen!=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen!=  0)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen!=  0)  {	  if(strLen    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
87	[BUG]  [BUGGY]  char[]  buf  =  new  char[buffer.length  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  char[]  buf  =  new  char[buffer.length  +  1];  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char[]  buf  =  new  char[buffer.length  +  1];	  char[]    buf    =    new    char[strLen    +    1];    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
88	[BUG]  [BUGGY]  char[]  buf  =  new  char[size  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  char[]  buf  =  new  char[size  +  1];  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char[]  buf  =  new  char[size  +  1];	  char[]    buf    =    new    char[strLen    +    1];    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
89	[BUG]  [BUGGY]  char[]  buf  =  new  char[strLen  +  2];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  char[]  buf  =  new  char[strLen  +  2];  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char[]  buf  =  new  char[strLen  +  2];	  char[]    buf    =    new    char[strLen    +    1];    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
90	[BUG]  [BUGGY]  if(strLen  ==  0  ||  size  >  strLen)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  0  ||  size  >  strLen)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  0  ||  size  >  strLen)  {	  if(strLen    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
91	[BUG]  [BUGGY]  Integer  strLen  =  thisBuf.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  thisBuf.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  thisBuf.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }	  Integer    strLen    =    str.length();    for(int    i    =    startIndex;    i    <    strLen;    i++)    {    buffer[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
92	[BUG]  [BUGGY]  Integer  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  size;  i++)  {  buffer[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  size;  i++)  {  buffer[i]  =  null;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  size;  i++)  {  buffer[i]  =  null;  }	  Integer    strLen    =    str.length();    for(int    i    =    startIndex;    i    <    strLen;    i++)    {    buffer[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
93	[BUG]  [BUGGY]  if(strLen  >  0)  {  if(strLen  >=  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  0)  {  if(strLen  >=  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0)  {  if(strLen  >=  size)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
94	[BUG]  [BUGGY]  if(strLen  ==  0  ||  startIndex  <  size)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  0  ||  startIndex  <  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  0  ||  startIndex  <  size)  {	  if(strLen    >    0    ||    startIndex    <    size)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
95	[BUG]  [BUGGY]  if(strLen  >=  0  ||  startIndex  <  size)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >=  0  ||  startIndex  <  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >=  0  ||  startIndex  <  size)  {	  if(strLen    >    0    ||    startIndex    <    size)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
96	[BUG]  [BUGGY]  if(strLen  >  0  &&  startIndex  <  size)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  0  &&  startIndex  <  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0  &&  startIndex  <  size)  {	  if(strLen    >    0    ||    startIndex    <    size)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
97	[BUG]  [BUGGY]  int  strLen  =  str.length();  if(strLen  ==  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  str.length();  if(strLen  ==  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length();  if(strLen  ==  0)  {  return  -1;  }	  int    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
98	[BUG]  [BUGGY]  if(strLen  >  0  ||  startIndex  >  strLen)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  0  ||  startIndex  >  strLen)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0  ||  startIndex  >  strLen)  {	  if(strLen    >    0    ||    size    >    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
99	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf(',',  buffer.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf(',',  buffer.length);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf(',',  buffer.length);	  Integer    strLen    =    str.indexOf(',',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
100	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf(',',  startIndex  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf(',',  startIndex  -  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf(',',  startIndex  -  1);	  Integer    strLen    =    str.indexOf(',',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
101	[BUG]  [BUGGY]  char[]  buf  =  thisBuf.toCharArray(startIndex);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  char[]  buf  =  thisBuf.toCharArray(startIndex);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char[]  buf  =  thisBuf.toCharArray(startIndex);	  char[]    buf    =    thisBuf.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
102	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('-',  startIndex  +  1,  size);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('-',  startIndex  +  1,  size);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('-',  startIndex  +  1,  size);	  Integer    strLen    =    str.indexOf('-',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
103	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  len);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  len);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  len);	  Integer    strLen    =    str.indexOf('    ',    startIndex    +    1,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
104	[BUG]  [BUGGY]  int  strLen  =  str.indexOf('  ',  startIndex  +  1,  size);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  str.indexOf('  ',  startIndex  +  1,  size);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.indexOf('  ',  startIndex  +  1,  size);	  Integer    strLen    =    str.indexOf('    ',    startIndex    +    1,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
105	[BUG]  [BUGGY]  if(strLen  ==  size)  {  if(strLen  >=  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  size)  {  if(strLen  >=  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  size)  {  if(strLen  >=  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    >=    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
106	[BUG]  [BUGGY]  if(size  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(size  >  0)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(size  >  0)  {	  if(strLen    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
107	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  size  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  size  +  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  size  +  1);	  Integer    strLen    =    str.indexOf('    ',    startIndex    +    1,    size);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
108	[BUG]  [BUGGY]  int  size  =  str.length();  for(int  i  =  startIndex;  i  <  size;  i++)  {  buffer[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  size  =  str.length();  for(int  i  =  startIndex;  i  <  size;  i++)  {  buffer[i]  =  null;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  size  =  str.length();  for(int  i  =  startIndex;  i  <  size;  i++)  {  buffer[i]  =  null;  }	  if(strLen    >    0)    {    int    strLen    =    str.length();    for(int    i    =    startIndex;    i    <    strLen;    i++)    {    buffer[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
109	[BUG]  [BUGGY]  if(strLen  <  =  0  ||  size  >  strLen)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  =  0  ||  size  >  strLen)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  =  0  ||  size  >  strLen)  {	  if(strLen    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
110	[BUG]  [BUGGY]  if(strLen  ==  size)  {  if(strLen  ==  1)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  size)  {  if(strLen  ==  1)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  size)  {  if(strLen  ==  1)  {  return  -1;  }	  if(strLen    >=    size)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
111	[BUG]  [BUGGY]  if(strLen  ==  size)  {  if(strLen  ==  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  size)  {  if(strLen  ==  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  size)  {  if(strLen  ==  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    ==    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
112	[BUG]  [BUGGY]  int  strLen  =  str.indexOf('  ',  startIndex  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  str.indexOf('  ',  startIndex  +  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.indexOf('  ',  startIndex  +  1);	  Integer    strLen    =    str.indexOf('    ',    startIndex    +    2);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
113	[BUG]  [BUGGY]  Integer  len  =  str.length();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  len  =  str.length();  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  len  =  str.length();	  int    len    =    str.length()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
114	[BUG]  [BUGGY]  Integer  strLen  =  size.indexOf('  ',  strLen);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  size.indexOf('  ',  strLen);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  size.indexOf('  ',  strLen);	  Integer    strLen    =    str.indexOf('    ',    size);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
115	[BUG]  [BUGGY]  if(strLen  ==  0)  {  if(strLen  >  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  0)  {  if(strLen  >  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  0)  {  if(strLen  >  0)  {  return  -1;  }	  if(strLen    ==    size)    {    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
116	[BUG]  [BUGGY]  char[]  buf  =  new  char[bufferLen  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  char[]  buf  =  new  char[bufferLen  +  1];  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char[]  buf  =  new  char[bufferLen  +  1];	  char[]    buf    =    new    char[strLen    +    1];    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
117	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('/',  startIndex  +  1,  size);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('/',  startIndex  +  1,  size);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('/',  startIndex  +  1,  size);	  Integer    strLen    =    str.indexOf('/',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
118	[BUG]  [BUGGY]  char  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  char  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }	  int    strLen    =    str.length();    if(strLen    <    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
119	[BUG]  [BUGGY]  int  strLen  =  str.length();  if(strLen  >=  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  str.length();  if(strLen  >=  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length();  if(strLen  >=  0)  {  return  -1;  }	  int    strLen    =    str.length();    if(strLen    <    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
120	[BUG]  [BUGGY]  Integer  strLen  =  str.length();  if(strLen  >=  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.length();  if(strLen  >=  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.length();  if(strLen  >=  size)  {  return  -1;  }	  Integer    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
121	[BUG]  [BUGGY]  Integer  strLen  =  str.lastIndexOf('  ',  startIndex  +  1,  size);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.lastIndexOf('  ',  startIndex  +  1,  size);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.lastIndexOf('  ',  startIndex  +  1,  size);	  Integer    strLen    =    str.lastIndexOf('    ',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
122	[BUG]  [BUGGY]  if(strLen  >  0  &&  strLen  <  size)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  0  &&  strLen  <  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0  &&  strLen  <  size)  {	  if(strLen    >    0    ||    strLen    <    size)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
123	[BUG]  [BUGGY]  if(strLen  ==  0  ||  strLen  <  size)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  0  ||  strLen  <  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  0  ||  strLen  <  size)  {	  if(strLen    >    0    ||    strLen    <    size)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
124	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('.',  startIndex  +  1,  size);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('.',  startIndex  +  1,  size);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('.',  startIndex  +  1,  size);	  Integer    strLen    =    str.indexOf('.',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
125	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('.',  startIndex  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('.',  startIndex  +  2);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('.',  startIndex  +  2);	  Integer    strLen    =    str.indexOf('.',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
126	[BUG]  [BUGGY]  Integer  strLen  =  str.charAt(0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.charAt(0);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.charAt(0);	  Integer    strLen    =    str.length()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
127	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('u',  startIndex);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('u',  startIndex);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('u',  startIndex);	  Integer    strLen    =    str.indexOf('uff',    strLen);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
128	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('-',  strLen);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('-',  strLen);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('-',  strLen);	  Integer    strLen    =    str.indexOf('uff',    strLen);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
129	[BUG]  [BUGGY]  if(strLen  ==  size)  {  if(strLen  ==  0)  {  return  startIndex;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  size)  {  if(strLen  ==  0)  {  return  startIndex;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  size)  {  if(strLen  ==  0)  {  return  startIndex;  }	  if(strLen    >    0)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
130	[BUG]  [BUGGY]  char[]  buf  =  buffer.toCharArray(startIndex);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  char[]  buf  =  buffer.toCharArray(startIndex);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char[]  buf  =  buffer.toCharArray(startIndex);	  char[]    buf    =    buffer.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
131	[BUG]  [BUGGY]  char  strLen  =  str.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  char  strLen  =  str.length()  +  1;  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char  strLen  =  str.length()  +  1;	  char    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
132	[BUG]  [BUGGY]  if(strLen  ==  0)  {  if(strLen  ==  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  0)  {  if(strLen  ==  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  0)  {  if(strLen  ==  0)  {  return  -1;  }	  if(strLen    ==    size)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
133	[BUG]  [BUGGY]  if(strLen  >  0  &&  strLen  <  =  size)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  0  &&  strLen  <  =  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0  &&  strLen  <  =  size)  {	  if(strLen    >    0    ||    strLen    <    =    size)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
134	[BUG]  [BUGGY]  if(strLen  ==  0  ||  strLen  <  =  size)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  0  ||  strLen  <  =  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  0  ||  strLen  <  =  size)  {	  if(strLen    >    0    ||    strLen    <    =    size)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
135	[BUG]  [BUGGY]  if(strLen  >=  0)  {  if(strLen  ==  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >=  0)  {  if(strLen  ==  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >=  0)  {  if(strLen  ==  size)  {  return  -1;  }	  if(strLen    ==    size)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
136	[BUG]  [BUGGY]  if(strLen  ==  strLen)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  strLen)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  strLen)  {	  if(strLen!=    size)    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
137	[BUG]  [BUGGY]  if(strLen  >  size)  {  if(strLen  ==  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  size)  {  if(strLen  ==  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  size)  {  if(strLen  ==  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    ==    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
138	[BUG]  [BUGGY]  if(strLen  >=  size)  {  if(strLen  ==  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >=  size)  {  if(strLen  ==  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >=  size)  {  if(strLen  ==  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    ==    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
139	[BUG]  [BUGGY]  if(strLen  ==  0)  {  if(strLen  >=  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  0)  {  if(strLen  >=  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  0)  {  if(strLen  >=  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    >=    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
140	[BUG]  [BUGGY]  if(strLen  >=  size)  {  if(strLen  >=  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >=  size)  {  if(strLen  >=  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >=  size)  {  if(strLen  >=  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    >=    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
141	[BUG]  [BUGGY]  if(strLen  <  =  size)  {  int  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  =  size)  {  int  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  =  size)  {  int  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }	  if(strLen    >    size)    {    int    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
142	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('/',  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('/',  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('/',  1);	  Integer    strLen    =    str.indexOf('/',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
143	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('/',  index);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('/',  index);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('/',  index);	  Integer    strLen    =    str.indexOf('/',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
144	[BUG]  [BUGGY]  if(strLen  <  =  0  ||  startIndex  <  size)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  =  0  ||  startIndex  <  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  =  0  ||  startIndex  <  size)  {	  if(strLen    >    0    ||    startIndex    <    size)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
145	[BUG]  [BUGGY]  if(strLen  >  size)  {  int  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  size)  {  int  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  size)  {  int  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }	  int    strLen    =    str.length();    if(strLen    <    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
146	[BUG]  [BUGGY]  if(strLen  <  =  size)  {  int  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  <  =  size)  {  int  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  =  size)  {  int  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }	  int    strLen    =    str.length();    if(strLen    <    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
147	[BUG]  [BUGGY]  if(strLen  ==  size)  {  int  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  size)  {  int  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  size)  {  int  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }	  int    strLen    =    str.length();    if(strLen    <    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
148	[BUG]  [BUGGY]  if(strLen  >  size)  {  if(strLen  >  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  size)  {  if(strLen  >  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  size)  {  if(strLen  >  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    >    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
149	[BUG]  [BUGGY]  if(strLen  >=  size)  {  if(strLen  >  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >=  size)  {  if(strLen  >  0)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >=  size)  {  if(strLen  >  0)  {  return  -1;  }	  if(strLen    >    0)    {    if(strLen    >    0)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
150	[BUG]  [BUGGY]  Integer  strLen  =  str.length();  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.length();  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.length();  if(strLen  >  0)  {  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }	  Integer    strLen    =    str.length();    for(int    i    =    startIndex;    i    <    strLen;    i++)    {    buffer[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
151	[BUG]  [BUGGY]  Integer  strLen  =  str.length();  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.length();  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.length();  if(strLen  >  size)  {  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }	  Integer    strLen    =    str.length();    for(int    i    =    startIndex;    i    <    strLen;    i++)    {    buffer[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
152	[BUG]  [BUGGY]  if(strLen  >  0  ||  size  >  strLen  +  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >  0  ||  size  >  strLen  +  1)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0  ||  size  >  strLen  +  1)  {	  if(strLen    >    0    ||    size    >    strLen)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
153	[BUG]  [BUGGY]  char[]  buf  =  new  char[strLen  *  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  char[]  buf  =  new  char[strLen  *  1];  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char[]  buf  =  new  char[strLen  *  1];	  char[]    buf    =    new    char[strLen    +    1];    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
154	[BUG]  [BUGGY]  int  strLen  =  str.length()  *  startIndex;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  int  strLen  =  str.length()  *  startIndex;  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length()  *  startIndex;	  int    strLen    =    str.length()    -    startIndex;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
155	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('  ',  size  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('  ',  size  -  1);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('  ',  size  -  1);	  Integer    strLen    =    str.indexOf('    ',    size);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
156	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('  ',  len);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('  ',  len);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('  ',  len);	  Integer    strLen    =    str.indexOf('    ',    size);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
157	[BUG]  [BUGGY]  if(strLen  >=  0  ||  strLen  <  =  size)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >=  0  ||  strLen  <  =  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >=  0  ||  strLen  <  =  size)  {	  if(strLen    >    0    ||    strLen    <    =    size)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
158	[BUG]  [BUGGY]  if(strLen  >=  size)  {  if(strLen  <  =  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >=  size)  {  if(strLen  <  =  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >=  size)  {  if(strLen  <  =  size)  {  return  -1;  }	  if(strLen    >    size)    {    if(strLen    <    =    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
159	[BUG]  [BUGGY]  if(strLen  >=  0  ||  strLen  <  size)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >=  0  ||  strLen  <  size)  {  [BUGGY]      return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >=  0  ||  strLen  <  size)  {	  if(strLen    >    0    ||    strLen    <    size)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
160	[BUG]  [BUGGY]  if(strLen  >=  0)  {  if(strLen  >  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  >=  0)  {  if(strLen  >  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >=  0)  {  if(strLen  >  size)  {  return  -1;  }	  if(strLen    >=    size)    {    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
161	[BUG]  [BUGGY]  if(strLen  ==  size)  {  int  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  if(strLen  ==  size)  {  int  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  size)  {  int  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }	  int    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
162	[BUG]  [BUGGY]  t  len  =  str.length();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  t  len  =  str.length();  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	t  len  =  str.length();	  int    len    =    str.length()    -    2;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
163	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('  ',  size  +  1,  strLen);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('  ',  size  +  1,  strLen);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('  ',  size  +  1,  strLen);	  Integer    strLen    =    str.indexOf('    ',    startIndex    +    1,    strLen);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
164	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf(',',  len);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf(',',  len);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf(',',  len);	  Integer    strLen    =    str.indexOf(',',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
165	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('-',  index);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }      [BUGGY]  Integer  strLen  =  str.indexOf('-',  index);  [BUGGY]      if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('-',  index);	  Integer    strLen    =    str.indexOf('-',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
