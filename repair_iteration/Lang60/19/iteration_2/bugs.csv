bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  int  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }	      if(strLen    ==    0)    {    int    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  int  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  int  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length();  if(strLen  <  size)  {  return  -1;  }	      if(strLen    ==    0)    {    int    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  int  len  =  str.length()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  int  len  =  str.length()  -  1;  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  len  =  str.length()  -  1;	      int    len    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  int  len  =  str.length()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  int  len  =  str.length()  +  1;  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  len  =  str.length()  +  1;	      int    len    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  int  len  =  str.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  int  len  =  str.length()  -  2;  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  len  =  str.length()  -  2;	      int    len    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  if(strLen  ==  size)  {  if(strLen  ==  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  ==  size)  {  if(strLen  ==  size)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  size)  {  if(strLen  ==  size)  {  return  -1;  }	      if(strLen    >    size)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  if(strLen  <  =  size)  {  if(strLen  ==  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  <  =  size)  {  if(strLen  ==  size)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  =  size)  {  if(strLen  ==  size)  {  return  -1;  }	      if(strLen    >    size)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  if(strLen  >  0)  {  if(strLen  ==  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >  0)  {  if(strLen  ==  0)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0)  {  if(strLen  ==  0)  {  return  -1;  }	      if(strLen    >    size)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  if(strLen  >  0)  {  if(strLen  ==  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >  0)  {  if(strLen  ==  size)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0)  {  if(strLen  ==  size)  {  return  -1;  }	      if(strLen    >    size)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  if(strLen  <  =  size)  {  if(strLen  >  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  <  =  size)  {  if(strLen  >  size)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  =  size)  {  if(strLen  >  size)  {  return  -1;  }	      if(strLen    >    size)    {    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  if(strLen  ==  size)  {  if(strLen  >  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  ==  size)  {  if(strLen  >  size)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  size)  {  if(strLen  >  size)  {  return  -1;  }	      if(strLen    >    size)    {    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  if(strLen  >  0)  {  if(strLen  >  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >  0)  {  if(strLen  >  0)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0)  {  if(strLen  >  0)  {  return  -1;  }	      if(strLen    >    size)    {    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
13	[BUG]  [BUGGY]  if(strLen  >  0)  {  if(strLen  >  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >  0)  {  if(strLen  >  size)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0)  {  if(strLen  >  size)  {  return  -1;  }	      if(strLen    >    size)    {    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
14	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  int  strLen  =  str.length()  -  1;  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length()  -  1;	      int    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  int  strLen  =  str.length()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  int  strLen  =  str.length()  +  1;  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length()  +  1;	      int    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  char  strLen  =  str.length();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  char  strLen  =  str.length();  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char  strLen  =  str.length();	      int    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  if(strLen  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  ==  0)  {  [BUGGY]    return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  0)  {	  if    (strLen    ==    size)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('.',  startIndex);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.indexOf('.',  startIndex);  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('.',  startIndex);	      Integer    strLen    =    str.indexOf('ufffd',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
19	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf(',',  startIndex);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.indexOf(',',  startIndex);  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf(',',  startIndex);	      Integer    strLen    =    str.indexOf('ufffd',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('uff',  strLen);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.indexOf('uff',  strLen);  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('uff',  strLen);	      Integer    strLen    =    str.indexOf('ufffd',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }	      if(strLen    >    size)    {    int    strLen    =    str.length();    for(int    i    =    startIndex;    i    <    strLen;    i++)    {    buffer[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  if(strLen  >  0)  {  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >  0)  {  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0)  {  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }	      if(strLen    >    size)    {    int    strLen    =    str.length();    for(int    i    =    startIndex;    i    <    strLen;    i++)    {    buffer[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  if(strLen  ==  size)  {  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  ==  size)  {  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  size)  {  int  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }	      if(strLen    >    size)    {    int    strLen    =    str.length();    for(int    i    =    startIndex;    i    <    strLen;    i++)    {    buffer[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  Integer  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.length();  for(int  i  =  startIndex;  i  <  strLen;  i++)  {  buffer[i]  =  null;  }	      if(strLen    >    size)    {    int    strLen    =    str.length();    for(int    i    =    startIndex;    i    <    strLen;    i++)    {    buffer[i]    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  if(strLen  >  0  ||  size  >  strLen)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >  0  ||  size  >  strLen)  {  [BUGGY]    return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0  ||  size  >  strLen)  {	  if(strLen    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  if(strLen  >  0  ||  strLen  <  size)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >  0  ||  strLen  <  size)  {  [BUGGY]    return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0  ||  strLen  <  size)  {	  if(strLen    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  if(strLen  >  0  ||  strLen  <  =  size)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >  0  ||  strLen  <  =  size)  {  [BUGGY]    return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0  ||  strLen  <  =  size)  {	  if(strLen    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  if(strLen  <  size)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  <  size)  {  [BUGGY]    return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  size)  {	  if(strLen    <    =    size)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  Integer  strLen  =  str.length()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.length()  +  1;  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.length()  +  1;	      Integer    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  Integer  strLen  =  str.length()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.length()  -  1;  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.length()  -  1;	      Integer    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  Integer  strLen  =  this.str.length();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  this.str.length();  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  this.str.length();	      Integer    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1);  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('  ',  startIndex  +  1);	      Integer    strLen    =    str.indexOf('    ',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('  ',  size);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.indexOf('  ',  size);  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('  ',  size);	      Integer    strLen    =    str.indexOf('    ',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  strLen);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  strLen);  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  strLen);	      Integer    strLen    =    str.indexOf('    ',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  Integer  strLen  =  str.lastIndexOf('  ',  startIndex);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.lastIndexOf('  ',  startIndex);  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.lastIndexOf('  ',  startIndex);	      Integer    strLen    =    str.indexOf('    ',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  char[]  buf  =  buffer.toCharArray();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  char[]  buf  =  buffer.toCharArray();  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char[]  buf  =  buffer.toCharArray();	      char[]    buf    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  char[]  buf  =  thisBuf.toCharArray();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  char[]  buf  =  thisBuf.toCharArray();  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char[]  buf  =  thisBuf.toCharArray();	      char[]    buf    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  size);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  size);  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('  ',  startIndex  +  1,  size);	      Integer    strLen    =    str.indexOf('    ',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  2);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.indexOf('  ',  startIndex  +  2);  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('  ',  startIndex  +  2);	      Integer    strLen    =    str.indexOf('    ',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  if(strLen  >  0)  {  if(strLen  >=  0)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >  0)  {  if(strLen  >=  0)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0)  {  if(strLen  >=  0)  {  return  -1;  }	      if(strLen    >    size)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  int  strLen  =  str.length()  -  startIndex;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  int  strLen  =  str.length()  -  startIndex;  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  str.length()  -  startIndex;	      int    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  if(strLen!=  size)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen!=  size)  {  [BUGGY]    return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen!=  size)  {	  if(strLen    <    =    size)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
43	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('-',  startIndex);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.indexOf('-',  startIndex);  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('-',  startIndex);	      Integer    strLen    =    str.indexOf('ufffd',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  int  len  =  str.length()  -  startIndex;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  int  len  =  str.length()  -  startIndex;  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  len  =  str.length()  -  startIndex;	      int    len    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  if(strLen  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  <  =  0)  {  [BUGGY]    return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  <  =  0)  {	  if(strLen    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
46	[BUG]  [BUGGY]  if(strLen  >  0  ||  startIndex  <  size)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >  0  ||  startIndex  <  size)  {  [BUGGY]    return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  0  ||  startIndex  <  size)  {	  if(strLen    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  if(strLen  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >=  0)  {  [BUGGY]    return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >=  0)  {	  if(strLen    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  char[]  buf  =  new  char[strLen  +  1];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  char[]  buf  =  new  char[strLen  +  1];  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char[]  buf  =  new  char[strLen  +  1];	      char[]    buf    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  Integer  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }	      if(strLen    ==    0)    {    int    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  if(strLen  >=  size)  {  if(strLen  ==  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >=  size)  {  if(strLen  ==  size)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >=  size)  {  if(strLen  ==  size)  {  return  -1;  }	      if(strLen    >    size)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
51	[BUG]  [BUGGY]  if(strLen  >  size)  {  if(strLen  <  =  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >  size)  {  if(strLen  <  =  size)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  size)  {  if(strLen  <  =  size)  {  return  -1;  }	      if(strLen    >    size)    {    if(strLen    ==    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
52	[BUG]  [BUGGY]  int  strLen  =  this.str.length();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  int  strLen  =  this.str.length();  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	int  strLen  =  this.str.length();	      int    strLen    =    str.length();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
53	[BUG]  [BUGGY]  if(strLen  >  size)  {  int  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >  size)  {  int  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >  size)  {  int  strLen  =  str.length();  if(strLen  >  size)  {  return  -1;  }	      if(strLen    ==    0)    {    int    strLen    =    str.length();    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
54	[BUG]  [BUGGY]  if(strLen  >=  size)  {  if(strLen  >  size)  {  return  -1;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  >=  size)  {  if(strLen  >  size)  {  return  -1;  }  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  >=  size)  {  if(strLen  >  size)  {  return  -1;  }	      if(strLen    >    size)    {    if(strLen    >    size)    {    return    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  Integer  strLen  =  str.indexOf('/',  startIndex);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  Integer  strLen  =  str.indexOf('/',  startIndex);  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	Integer  strLen  =  str.indexOf('/',  startIndex);	      Integer    strLen    =    str.indexOf('ufffd',    startIndex);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
56	[BUG]  [BUGGY]  if(strLen  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  if(strLen  ==  1)  {  [BUGGY]    return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	if(strLen  ==  1)  {	  if    (strLen    ==    size)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
57	[BUG]  [BUGGY]  char[]  buf  =  this.buffer.toCharArray();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    if  (str  ==  null  ||  startIndex  >=  size)  {  return  -1;  }  int  strLen  =  str.length();  if  (strLen  ==  1)  {  return  indexOf(str.charAt(0),  startIndex);  }  if  (strLen  ==  0)  {  return  startIndex;  }    [BUGGY]  char[]  buf  =  this.buffer.toCharArray();  [BUGGY]    if  (strLen  >  size)  {  return  -1;  }  char[]  thisBuf  =  buffer;  int  len  =  size  -  strLen  +  1;  outer:  for  (int  i  =  startIndex;  i  <  len;  i++)  {  for  (int  j  =  0;  j  <  strLen;  j++)  {  if  (str.charAt(j)  !=  thisBuf[i  +  j])  {  continue  outer;  }  [CLASS]  StrBuilder  StrBuilderTokenizer  StrBuilderReader  StrBuilderWriter  [METHOD]  indexOf  [RETURN_TYPE]  int  String  str  int  startIndex  [VARIABLES]  String  insertStr  newLine  nullText  replaceStr  searchStr  separator  str  boolean  int  CAPACITY  capacity  destinationIndex  endIndex  from  half  i  index  initialCapacity  insertLen  j  leftIdx  len  length  mark  newEnd  newSize  offset  oldEnd  padLen  pos  removeLen  replaceCount  replaceLen  rightIdx  searchLen  size  start  startIndex  strLen  to  value  width  long  serialVersionUID  value  char[]  buf  buffer  chars  destination  old  thisBuf  	projects/Lang60/src/java/org/apache/commons/lang/text/StrBuilder.java	0.31622776601683794	1772	1772	1	replace	char[]  buf  =  this.buffer.toCharArray();	      char[]    buf    =    str.toCharArray();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
