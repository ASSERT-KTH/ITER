bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  ==  'n')?  END_OF_STREAM  :  END_OF_STREAM;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	16	22	replace
2	[BUG]  [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  END_OF_STREAM;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  ==  'n')?  END_OF_STREAM  :  END_OF_STREAM;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	16	22	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  ==  'n')?  END_OF_STREAM  :  current;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	16	2	replace
4	[BUG]  [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  ==  'n')?  END_OF_STREAM  :  current;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	16	2	replace
5	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  ==  'n')?  END_OF_STREAM  :  1;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	timeout	16	1	replace
6	[BUG]  [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  1;  timeout  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  ==  'n')?  END_OF_STREAM  :  1;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	timeout	16	1	replace
7	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  UNDEFINED;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  ==  'n')?  END_OF_STREAM  :  UNDEFINED;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	timeout	16	1	replace
8	[BUG]  [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  UNDEFINED;  timeout  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  UNDEFINED;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  ==  'n')?  END_OF_STREAM  :  UNDEFINED;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	timeout	16	1	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  >=  'n')?  END_OF_STREAM  :  END_OF_STREAM;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	16	22	replace
10	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  END_OF_STREAM;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >=  'n')?  END_OF_STREAM  :  END_OF_STREAM;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	16	22	replace
11	[BUG]  [BUGGY]  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  0;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  ==  'n')?  END_OF_STREAM  :  0;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	timeout	16	1	replace
12	[BUG]  [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  0;  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  0;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  ==  'n')?  END_OF_STREAM  :  0;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	timeout	16	1	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  lastChar  =  current  *  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM    +    1;    lastChar  =  current  *  END_OF_STREAM  +  1;	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
14	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  lastChar  =  current  *  END_OF_STREAM  +  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  lastChar  =  current  *  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    lastChar  =  current  *  END_OF_STREAM  +  1;	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  if(current  >  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  if(current  >  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
16	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  if(current  >  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  if(current  >  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  if(current  >  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
18	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
20	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  if(current  >  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  2;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  if(current  >  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  2;  }	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
22	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  if(current  >  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  2;  }  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  if(current  >  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  2;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  if(current  >  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  2;  }	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
23	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  int  lastChar  =  current  *  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM    +    1;    int  lastChar  =  current  *  END_OF_STREAM  +  1;	  timeout    	compilable	timeout	24	1	add
24	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  int  lastChar  =  current  *  END_OF_STREAM  +  1;  timeout  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  int  lastChar  =  current  *  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    int  lastChar  =  current  *  END_OF_STREAM  +  1;	  timeout    	compilable	timeout	24	1	add
25	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	  [FE]  IllegalArgumentException  	24	23	add
26	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	  [FE]  IllegalArgumentException  	24	23	add
27	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  ArrayStoreException  	24	23	add
28	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [FE]  ArrayStoreException  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  ArrayStoreException  	24	23	add
29	[BUG]  [BUGGY]      lastChar  =  current.read();  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      lastChar  =  current.read();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	        lastChar  =  current.read();	  timeout    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	add
30	[BUG]  [BUGGY]      lastChar  =  getLastChar();  [CE]  cannot  find  symbol  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      lastChar  =  getLastChar();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	        lastChar  =  getLastChar();	  timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	add
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      lastChar  =(lastChar  ==  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	        lastChar  =(lastChar  ==  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;	  timeout    	compilable	  [FE]  AssertionError  	13	1	add
32	[BUG]  [BUGGY]      lastChar  =(lastChar  ==  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      lastChar  =(lastChar  ==  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	        lastChar  =(lastChar  ==  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;	  timeout    	compilable	  [FE]  AssertionError  	13	1	add
33	[BUG]  [BUGGY]      lastChar  =  END_OF_STREAM.read();  [CE]  int  cannot  be  dereferenced  [FE]                            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      lastChar  =  END_OF_STREAM.read();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	        lastChar  =  END_OF_STREAM.read();	  timeout    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	add
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      lastChar  =(lastChar  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	        lastChar  =(lastChar  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;	  timeout    	compilable	  [FE]  AssertionError  	13	1	add
35	[BUG]  [BUGGY]      lastChar  =(lastChar  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]                              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      lastChar  =(lastChar  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	        lastChar  =(lastChar  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;	  timeout    	compilable	  [FE]  AssertionError  	13	1	add
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      lastChar  =(lastChar  ==  END_OF_STREAM)?  current  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	        lastChar  =(lastChar  ==  END_OF_STREAM)?  current  :  END_OF_STREAM;	  timeout    	compilable	  [FE]  AssertionError  	13	1	add
37	[BUG]  [BUGGY]      lastChar  =(lastChar  ==  END_OF_STREAM)?  current  :  END_OF_STREAM;  [FE]  AssertionError  [FE]                                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      lastChar  =(lastChar  ==  END_OF_STREAM)?  current  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	        lastChar  =(lastChar  ==  END_OF_STREAM)?  current  :  END_OF_STREAM;	  timeout    	compilable	  [FE]  AssertionError  	13	1	add
38	[BUG]  [BUGGY]      lastChar  =  System.read(current,  END_OF_STREAM);  [CE]  cannot  find  symbol  [FE]                                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      lastChar  =  System.read(current,  END_OF_STREAM);  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	        lastChar  =  System.read(current,  END_OF_STREAM);	  timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	add
39	[BUG]  [BUGGY]      lastChar  =  System.read(current);  [CE]  cannot  find  symbol  [FE]                                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      lastChar  =  System.read(current);  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	        lastChar  =  System.read(current);	  timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	add
40	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  -=  current  +  1;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
41	[BUG]  [BUGGY]  lastChar  -=  current  +  1;  timeout  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  -=  current  +  1;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
42	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  -=  1;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
43	[BUG]  [BUGGY]  lastChar  -=  1;  timeout  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  -=  1;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
44	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current  *  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  -=  current  *  2;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
45	[BUG]  [BUGGY]  lastChar  -=  current  *  2;  timeout  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current  *  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  -=  current  *  2;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
46	[BUG]  [BUGGY]  lastChar  -=  current.length;  [CE]  int  cannot  be  dereferenced  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current.length;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  -=  current.length;	  lastChar    -=    current;    	non-compiled	[CE]  int  cannot  be  dereferenced	23	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current  *  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  -=  current  *  1;	  lastChar    -=    current;    	compilable	  [FE]  AssertionError  	23	22	replace
48	[BUG]  [BUGGY]  lastChar  -=  current  *  1;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current  *  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  -=  current  *  1;	  lastChar    -=    current;    	compilable	  [FE]  AssertionError  	23	22	replace
49	[BUG]  [BUGGY]  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current  *  4;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  -=  current  *  4;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
50	[BUG]  [BUGGY]  lastChar  -=  current  *  4;  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current  *  4;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  -=  current  *  4;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  ==  'n')?  -1  :  current;	  lastChar    =(current    >=    'n')?    -1    :    current;    	compilable	  [FE]  AssertionError  	21	2	replace
52	[BUG]  [BUGGY]  lastChar  =(current  ==  'n')?  -1  :  current;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  ==  'n')?  -1  :  current;	  lastChar    =(current    >=    'n')?    -1    :    current;    	compilable	  [FE]  AssertionError  	21	2	replace
53	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  ==  'n')?  1  :  current;	  lastChar    =(current    >=    'n')?    -1    :    current;    	compilable	  [FE]  AssertionError  	21	2	replace
54	[BUG]  [BUGGY]  lastChar  =(current  ==  'n')?  1  :  current;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  ==  'n')?  1  :  current;	  lastChar    =(current    >=    'n')?    -1    :    current;    	compilable	  [FE]  AssertionError  	21	2	replace
55	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current!=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current!=  'n')?  -1  :  current;	  lastChar    =(current    >=    'n')?    -1    :    current;    	compilable	  [FE]  AssertionError  	21	22	replace
56	[BUG]  [BUGGY]  lastChar  =(current!=  'n')?  -1  :  current;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current!=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current!=  'n')?  -1  :  current;	  lastChar    =(current    >=    'n')?    -1    :    current;    	compilable	  [FE]  AssertionError  	21	22	replace
57	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  -1  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  ==  'n')?  -1  :  1;	  lastChar    =(current    >=    'n')?    -1    :    current;    	compilable	timeout	21	1	replace
58	[BUG]  [BUGGY]  lastChar  =(current  ==  'n')?  -1  :  1;  timeout  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  'n')?  -1  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  ==  'n')?  -1  :  1;	  lastChar    =(current    >=    'n')?    -1    :    current;    	compilable	timeout	21	1	replace
59	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  'n')?  -1  :  current;	  lastChar    =(current    >=    'n')?    -1    :    current;    	compilable	  [FE]  AssertionError  	21	22	replace
60	[BUG]  [BUGGY]  lastChar  =(current  <  'n')?  -1  :  current;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  'n')?  -1  :  current;	  lastChar    =(current    >=    'n')?    -1    :    current;    	compilable	  [FE]  AssertionError  	21	22	replace
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  lastChar  =(current  >=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    -1    :    current;    lastChar  =(current  >=  'n')?  -1  :  current;	  	compilable	  [FE]  AssertionError  	20	1	add
62	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  lastChar  =(current  >=  'n')?  -1  :  current;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  lastChar  =(current  >=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    -1    :    current;    lastChar  =(current  >=  'n')?  -1  :  current;	  	compilable	  [FE]  AssertionError  	20	1	add
63	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  lastChar  =(current  >>  'n')?  -1  :  current;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  lastChar  =(current  >>  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    -1    :    current;    lastChar  =(current  >>  'n')?  -1  :  current;	  	non-compiled	[CE]  incompatible  types	20	None	add
64	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  lastChar  =(current  ==  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    -1    :    current;    lastChar  =(current  ==  'n')?  -1  :  current;	  	compilable	  [FE]  AssertionError  	20	1	add
65	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  lastChar  =(current  ==  'n')?  -1  :  current;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  lastChar  =(current  ==  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    -1    :    current;    lastChar  =(current  ==  'n')?  -1  :  current;	  	compilable	  [FE]  AssertionError  	20	1	add
66	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  current  =(current  >=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    -1    :    current;    current  =(current  >=  'n')?  -1  :  current;	  	compilable	  [FE]  AssertionError  	20	18	add
67	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  current  =(current  >=  'n')?  -1  :  current;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  current  =(current  >=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    -1    :    current;    current  =(current  >=  'n')?  -1  :  current;	  	compilable	  [FE]  AssertionError  	20	18	add
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  lastChar  =(current!=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    -1    :    current;    lastChar  =(current!=  'n')?  -1  :  current;	  	compilable	  [FE]  AssertionError  	20	1	add
69	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  lastChar  =(current!=  'n')?  -1  :  current;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  lastChar  =(current!=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    -1    :    current;    lastChar  =(current!=  'n')?  -1  :  current;	  	compilable	  [FE]  AssertionError  	20	1	add
70	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  int  current  =(current  >=  'n')?  -1  :  current;  [CE]  variable  current  is  already  defined  in  method  read()  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  int  current  =(current  >=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    -1    :    current;    int  current  =(current  >=  'n')?  -1  :  current;	  	non-compiled	[CE]  variable  current  is  already  defined  in  method  read()	20	None	add
71	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  (current  >=  'n')?  -1  :  current;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  (current  >=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    -1    :    current;    (current  >=  'n')?  -1  :  current;	  	non-compiled	[CE]  not  a  statement	20	None	add
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	15	1	add
73	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	15	1	add
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    lastChar  =(current  ==  'n')?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	15	1	add
75	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  lastChar  =(current  ==  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    lastChar  =(current  ==  'n')?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	15	1	add
76	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  lastChar  =(current  >>  'n')?  END_OF_STREAM  :  current;  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  lastChar  =(current  >>  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    lastChar  =(current  >>  'n')?  END_OF_STREAM  :  current;	  	non-compiled	[CE]  incompatible  types	15	None	add
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  lastChar  =(current!=  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    lastChar  =(current!=  'n')?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	15	1	add
78	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  lastChar  =(current!=  'n')?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  lastChar  =(current!=  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    lastChar  =(current!=  'n')?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	15	1	add
79	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  current  =(current  >=  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    current  =(current  >=  'n')?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	15	18	add
80	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  current  =(current  >=  'n')?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  current  =(current  >=  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    current  =(current  >=  'n')?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	15	18	add
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  this.lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    this.lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	15	1	add
82	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  this.lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  this.lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    this.lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	15	1	add
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  int  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    int  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	15	13	add
84	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  int  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  int  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    int  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	15	13	add
85	[BUG]  [BUGGY]  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  *  END_OF_STREAM  -  1;	  lastChar    =    current    -    1;    timeout    	compilable	timeout	8	1	replace
86	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  -  1;  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  *  END_OF_STREAM  -  1;	  lastChar    =    current    -    1;    timeout    	compilable	timeout	8	1	replace
87	[BUG]  [BUGGY]  timeout  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  END_OF_STREAM  -  1;	  lastChar    =    current    -    1;    timeout    	compilable	timeout	8	1	replace
88	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  -  1;  timeout  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  END_OF_STREAM  -  1;	  lastChar    =    current    -    1;    timeout    	compilable	timeout	8	1	replace
89	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM.length  -  1;  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM.length  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  *  END_OF_STREAM.length  -  1;	  lastChar    =    current    -    1;    timeout    	non-compiled	[CE]  int  cannot  be  dereferenced	8	None	replace
90	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  lineCounter  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  lineCounter  -  1;	  lastChar    =    current    -    1;    timeout    	compilable	timeout	8	1	replace
91	[BUG]  [BUGGY]  lastChar  =  lineCounter  -  1;  timeout  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  lineCounter  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  lineCounter  -  1;	  lastChar    =    current    -    1;    timeout    	compilable	timeout	8	1	replace
92	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    -    1;    lastChar  =  current  -  1;	  timeout    	compilable	  [FE]  AssertionError  	7	1	add
93	[BUG]  [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    lastChar  =  current  -  1;	  timeout    	compilable	  [FE]  AssertionError  	7	1	add
94	[BUG]  [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  lineCounter);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  lineCounter);  }	  timeout    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	7	None	add
95	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    -    1;    if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	  [FE]  IllegalArgumentException  	7	23	add
96	[BUG]  [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	  [FE]  IllegalArgumentException  	7	23	add
97	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    -    1;    if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  ArrayStoreException  	7	23	add
98	[BUG]  [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  0,  lineCounter);  }  [FE]  ArrayStoreException  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  ArrayStoreException  	7	23	add
99	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  0,  current);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    -    1;    if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  0,  current);  }	  timeout    	compilable	  [FE]  ArrayStoreException  	7	23	add
100	[BUG]  [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  0,  current);  }  [FE]  ArrayStoreException  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  0,  current);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  0,  current);  }	  timeout    	compilable	  [FE]  ArrayStoreException  	7	23	add
101	[BUG]  [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  current);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  current);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  current);  }	  timeout    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	7	None	add
102	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    -    1;    if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  ArrayStoreException  	7	23	add
103	[BUG]  [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);  }  [FE]  ArrayStoreException  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  ArrayStoreException  	7	23	add
104	[BUG]  [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    if(current  >  0)  {  lastChar  =  current  -  1;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar);  }	  timeout    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	7	None	add
105	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	17	1	add
106	[BUG]  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	17	1	add
107	[BUG]  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  lastChar  =(current  >>  END_OF_STREAM)?  END_OF_STREAM  :  current;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  lastChar  =(current  >>  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    lastChar  =(current  >>  END_OF_STREAM)?  END_OF_STREAM  :  current;	  	non-compiled	[CE]  incompatible  types	17	None	add
108	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	17	1	add
109	[BUG]  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	17	1	add
110	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  lastChar  =(current!=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    lastChar  =(current!=  END_OF_STREAM)?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	17	1	add
111	[BUG]  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  lastChar  =(current!=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  lastChar  =(current!=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    lastChar  =(current!=  END_OF_STREAM)?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	17	1	add
112	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  current  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    current  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	17	22	add
113	[BUG]  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  current  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  current  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    current  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	17	22	add
114	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  int  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    int  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	17	22	add
115	[BUG]  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  int  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  int  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    int  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;	  	compilable	  [FE]  AssertionError  	17	22	add
116	[BUG]  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  (current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [CE]  not  a  statement  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  (current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    (current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;	  	non-compiled	[CE]  not  a  statement	17	None	add
117	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  lastChar  =  current  *  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    lastChar  =  current  *  END_OF_STREAM;	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
118	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  lastChar  =  current  *  END_OF_STREAM;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  lastChar  =  current  *  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    lastChar  =  current  *  END_OF_STREAM;	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
120	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
121	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
122	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
123	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
124	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);  }  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
125	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
126	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
127	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
128	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [FE]  AssertionError  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
129	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(lineCounter,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(lineCounter,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
130	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(lineCounter,  0,  lastChar,  0,  lineCounter);  }  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(lineCounter,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(lineCounter,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
131	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(this.lineCounter,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(this.lineCounter,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
132	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(this.lineCounter,  0,  lastChar,  0,  lineCounter);  }  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(this.lineCounter,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(this.lineCounter,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
133	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1L;  [CE]  possible  loss  of  precision  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1L;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  END_OF_STREAM  +  1L;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
134	[BUG]  [BUGGY]  timeout  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  -=  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
135	[BUG]  [BUGGY]  lastChar  -=  END_OF_STREAM  +  1;  timeout  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  -=  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
136	[BUG]  [BUGGY]  lastChar  =  this.end_OF_STREAM  +  1;  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.end_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  this.end_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	12	None	replace
137	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  *  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  END_OF_STREAM  *  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	  [FE]  AssertionError  	12	22	replace
138	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  *  1;  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  *  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  END_OF_STREAM  *  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	  [FE]  AssertionError  	12	22	replace
139	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	1	replace
140	[BUG]  [BUGGY]  lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  current;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	1	replace
141	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	22	replace
142	[BUG]  [BUGGY]  lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	22	replace
143	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  1;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	22	replace
144	[BUG]  [BUGGY]  lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  ==  END_OF_STREAM)?  END_OF_STREAM  :  1;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	22	replace
145	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  1;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	22	replace
146	[BUG]  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  1;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	22	replace
147	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	22	replace
148	[BUG]  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	22	replace
149	[BUG]  [BUGGY]  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  1;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	timeout	18	1	replace
150	[BUG]  [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  1;  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  1;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	timeout	18	1	replace
151	[BUG]  [BUGGY]  timeout  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  /  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  /  END_OF_STREAM;	  lastChar    =    current    *    END_OF_STREAM;    timeout    	compilable	timeout	6	1	replace
152	[BUG]  [BUGGY]  lastChar  =  current  /  END_OF_STREAM;  timeout  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  /  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  /  END_OF_STREAM;	  lastChar    =    current    *    END_OF_STREAM;    timeout    	compilable	timeout	6	1	replace
153	[BUG]  [BUGGY]  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  -  END_OF_STREAM;	  lastChar    =    current    *    END_OF_STREAM;    timeout    	compilable	timeout	6	1	replace
154	[BUG]  [BUGGY]  lastChar  =  current  -  END_OF_STREAM;  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  -  END_OF_STREAM;	  lastChar    =    current    *    END_OF_STREAM;    timeout    	compilable	timeout	6	1	replace
155	[BUG]  [BUGGY]  timeout  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  %  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  %  END_OF_STREAM;	  lastChar    =    current    *    END_OF_STREAM;    timeout    	compilable	timeout	6	1	replace
156	[BUG]  [BUGGY]  lastChar  =  current  %  END_OF_STREAM;  timeout  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  %  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  %  END_OF_STREAM;	  lastChar    =    current    *    END_OF_STREAM;    timeout    	compilable	timeout	6	1	replace
157	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  +  END_OF_STREAM;	  lastChar    =    current    *    END_OF_STREAM;    timeout    	compilable	timeout	6	1	replace
158	[BUG]  [BUGGY]  lastChar  =  current  +  END_OF_STREAM;  timeout  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  +  END_OF_STREAM;	  lastChar    =    current    *    END_OF_STREAM;    timeout    	compilable	timeout	6	1	replace
159	[BUG]  [BUGGY]  lastChar  =  System.currentTimeMillis()  -  1;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  System.currentTimeMillis()  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  System.currentTimeMillis()  -  1;	  lastChar    =    System.currentTimeMillis();    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
160	[BUG]  [BUGGY]  lastChar  =  System.currentTimeMillis()  +  1;  [CE]  possible  loss  of  precision  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  System.currentTimeMillis()  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  System.currentTimeMillis()  +  1;	  lastChar    =    System.currentTimeMillis();    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
161	[BUG]  [BUGGY]  lastChar  =  System.currentTimeMillis()  -  2;  [CE]  possible  loss  of  precision  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  System.currentTimeMillis()  -  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  System.currentTimeMillis()  -  2;	  lastChar    =    System.currentTimeMillis();    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
162	[BUG]  [BUGGY]  lastChar  =  System.currentTimeMillis()  /  2;  [CE]  possible  loss  of  precision  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  System.currentTimeMillis()  /  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  System.currentTimeMillis()  /  2;	  lastChar    =    System.currentTimeMillis();    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
163	[BUG]  [BUGGY]  lastChar  =  System.currentTimeMillis()  -  current;  [CE]  possible  loss  of  precision  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  System.currentTimeMillis()  -  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  System.currentTimeMillis()  -  current;	  lastChar    =    System.currentTimeMillis();    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
164	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  lastChar  =  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    lastChar  =  END_OF_STREAM;	  	compilable	  [FE]  AssertionError  	3	1	add
165	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  lastChar  =  END_OF_STREAM;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  lastChar  =  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    lastChar  =  END_OF_STREAM;	  	compilable	  [FE]  AssertionError  	3	1	add
166	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current;  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
167	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current;  }  [FE]  ArrayStoreException  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current;  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
168	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current  +  1;  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
169	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current  +  1;  }  [FE]  ArrayStoreException  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current  +  1;  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
170	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }	  	compilable	  [FE]  AssertionError  	3	1	add
171	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }	  	compilable	  [FE]  AssertionError  	3	1	add
172	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
173	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [FE]  ArrayStoreException  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
174	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current++;  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
175	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current++;  }  [FE]  ArrayStoreException  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current++;  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
176	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	3	23	add
177	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	3	23	add
178	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current  +  1;  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
179	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current  +  1;  }  [FE]  ArrayStoreException  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current  +  1;  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
180	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  lastChar  =  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM    +    1;    lastChar  =  END_OF_STREAM  +  1;	  timeout    	compilable	  [FE]  AssertionError  	11	1	add
181	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  lastChar  =  END_OF_STREAM  +  1;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  lastChar  =  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    lastChar  =  END_OF_STREAM  +  1;	  timeout    	compilable	  [FE]  AssertionError  	11	1	add
182	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	11	23	add
183	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current;  }  [FE]  ArrayStoreException  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	11	23	add
184	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	11	1	add
185	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	11	1	add
186	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  ArrayStoreException  	11	23	add
187	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [FE]  ArrayStoreException  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  ArrayStoreException  	11	23	add
188	[BUG]  [BUGGY]  timeout  [FE]                            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  int  lastChar  =  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM    +    1;    int  lastChar  =  END_OF_STREAM  +  1;	  timeout    	compilable	timeout	11	1	add
189	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  int  lastChar  =  END_OF_STREAM  +  1;  timeout  [FE]                            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  int  lastChar  =  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    int  lastChar  =  END_OF_STREAM  +  1;	  timeout    	compilable	timeout	11	1	add
190	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current++;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	11	23	add
191	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current++;  }  [FE]  ArrayStoreException  [FE]                              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current++;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	11	23	add
192	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	  [FE]  IllegalArgumentException  	11	23	add
193	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	  [FE]  IllegalArgumentException  	11	23	add
194	[BUG]  [BUGGY]  lastChar  =  current.length();  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current.length();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current.length();	  lastChar    =    END_OF_STREAM.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	10	None	replace
195	[BUG]  [BUGGY]  lastChar  =  this.end_OF_STREAM.length();  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.end_OF_STREAM.length();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  this.end_OF_STREAM.length();	  lastChar    =    END_OF_STREAM.length();    	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	10	None	replace
196	[BUG]  [BUGGY]  lastChar  =  this.END_OF_STREAM.length();  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.END_OF_STREAM.length();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  this.END_OF_STREAM.length();	  lastChar    =    END_OF_STREAM.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	10	None	replace
197	[BUG]  [BUGGY]  lastChar  =  lineCounter.length();  [CE]  int  cannot  be  dereferenced  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  lineCounter.length();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  lineCounter.length();	  lastChar    =    END_OF_STREAM.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	10	None	replace
198	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM.length()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM.length()  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  END_OF_STREAM.length()  +  1;	  lastChar    =    END_OF_STREAM.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	10	None	replace
199	[BUG]  [BUGGY]  lastChar  =  nextChar.length();  [CE]  nextChar  has  private  access  in  BufferedReader  [FE]                            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  nextChar.length();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  nextChar.length();	  lastChar    =    END_OF_STREAM.length();    	non-compiled	[CE]  nextChar  has  private  access  in  BufferedReader	10	None	replace
200	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    +    1;    lastChar  =  current  +  1;	  timeout    	compilable	  [FE]  AssertionError  	1	1	add
201	[BUG]  [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    +    1;    lastChar  =  current  +  1;	  timeout    	compilable	  [FE]  AssertionError  	1	1	add
202	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  int  lastChar  =  current  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    +    1;    int  lastChar  =  current  +  1;	  timeout    	compilable	timeout	1	1	add
203	[BUG]  [BUGGY]  lastChar  =  current  +  1;  int  lastChar  =  current  +  1;  timeout  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  int  lastChar  =  current  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    +    1;    int  lastChar  =  current  +  1;	  timeout    	compilable	timeout	1	1	add
204	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  this.lastChar  =  current  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    +    1;    this.lastChar  =  current  +  1;	  timeout    	compilable	  [FE]  AssertionError  	1	1	add
205	[BUG]  [BUGGY]  lastChar  =  current  +  1;  this.lastChar  =  current  +  1;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  this.lastChar  =  current  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    +    1;    this.lastChar  =  current  +  1;	  timeout    	compilable	  [FE]  AssertionError  	1	1	add
206	[BUG]  [BUGGY]  lastChar  =  current  +  1;  nextChar  =  current  +  1;  [CE]  nextChar  has  private  access  in  BufferedReader  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  nextChar  =  current  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    +    1;    nextChar  =  current  +  1;	  timeout    	non-compiled	[CE]  nextChar  has  private  access  in  BufferedReader	1	None	add
207	[BUG]  [BUGGY]  timeout  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  current  =  current  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    +    1;    current  =  current  +  1;	  timeout    	compilable	timeout	1	1	add
208	[BUG]  [BUGGY]  lastChar  =  current  +  1;  current  =  current  +  1;  timeout  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  current  =  current  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    +    1;    current  =  current  +  1;	  timeout    	compilable	timeout	1	1	add
209	[BUG]  [BUGGY]  lastChar  =  current  +  1;  firstChar  =  current  +  1;  [CE]  cannot  find  symbol  firstChar  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  firstChar  =  current  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    +    1;    firstChar  =  current  +  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol  firstChar	1	None	add
210	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    +    1;    lastChar  =  current  -  1;	  timeout    	compilable	  [FE]  AssertionError  	1	1	add
211	[BUG]  [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  -  1;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    +    1;    lastChar  =  current  -  1;	  timeout    	compilable	  [FE]  AssertionError  	1	1	add
212	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  lineCounter  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  lineCounter  +  1;	  lastChar    =    current    +    1;    timeout    	compilable	timeout	2	1	replace
213	[BUG]  [BUGGY]  lastChar  =  lineCounter  +  1;  timeout  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  lineCounter  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  lineCounter  +  1;	  lastChar    =    current    +    1;    timeout    	compilable	timeout	2	1	replace
214	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  +  2;	  lastChar    =    current    +    1;    timeout    	compilable	timeout	2	1	replace
215	[BUG]  [BUGGY]  lastChar  =  current  +  2;  timeout  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  +  2;	  lastChar    =    current    +    1;    timeout    	compilable	timeout	2	1	replace
216	[BUG]  [BUGGY]  lastChar  =  current  +  1L;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1L;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  +  1L;	  lastChar    =    current    +    1;    timeout    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
217	[BUG]  [BUGGY]  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  3;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  +  3;	  lastChar    =    current    +    1;    timeout    	compilable	timeout	2	1	replace
218	[BUG]  [BUGGY]  lastChar  =  current  +  3;  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  3;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  +  3;	  lastChar    =    current    +    1;    timeout    	compilable	timeout	2	1	replace
219	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  /  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  /  1;	  lastChar    =    current    +    1;    timeout    	compilable	  [FE]  AssertionError  	2	1	replace
220	[BUG]  [BUGGY]  lastChar  =  current  /  1;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  /  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  /  1;	  lastChar    =    current    +    1;    timeout    	compilable	  [FE]  AssertionError  	2	1	replace
221	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  /  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  /  END_OF_STREAM  +  1;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	timeout	25	1	replace
222	[BUG]  [BUGGY]  lastChar  =  current  /  END_OF_STREAM  +  1;  timeout  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  /  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  /  END_OF_STREAM  +  1;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	timeout	25	1	replace
223	[BUG]  [BUGGY]  timeout  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  -  END_OF_STREAM  +  1;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	timeout	25	1	replace
224	[BUG]  [BUGGY]  lastChar  =  current  -  END_OF_STREAM  +  1;  timeout  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  -  END_OF_STREAM  +  1;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	timeout	25	1	replace
225	[BUG]  [BUGGY]  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  %  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  %  END_OF_STREAM  +  1;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	timeout	25	1	replace
226	[BUG]  [BUGGY]  lastChar  =  current  %  END_OF_STREAM  +  1;  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  %  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  %  END_OF_STREAM  +  1;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	timeout	25	1	replace
227	[BUG]  [BUGGY]  timeout  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  *  END_OF_STREAM  +  2;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	timeout	25	1	replace
228	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  2;  timeout  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  *  END_OF_STREAM  +  2;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	timeout	25	1	replace
229	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1L;  [CE]  possible  loss  of  precision  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1L;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  *  END_OF_STREAM  +  1L;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	non-compiled	[CE]  possible  loss  of  precision	25	None	replace
230	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  3;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  *  END_OF_STREAM  +  3;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	timeout	25	1	replace
231	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  3;  timeout  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  3;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  *  END_OF_STREAM  +  3;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	timeout	25	1	replace
232	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  lastChar  -=  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    -=    current;    lastChar  -=  current;	  	compilable	  [FE]  AssertionError  	22	1	add
233	[BUG]  [BUGGY]  lastChar  -=  current;  lastChar  -=  current;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  lastChar  -=  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    lastChar  -=  current;	  	compilable	  [FE]  AssertionError  	22	1	add
234	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  ==  'n')  {  lastChar  -=  current;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  lineCounter);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  ==  'n')  {  lastChar  -=  current;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  ==  'n')  {  lastChar  -=  current;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  lineCounter);  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	22	None	add
235	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  ==  'n')  {  lastChar  -=  current;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    -=    current;    if(current  ==  'n')  {  lastChar  -=  current;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	22	23	add
236	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  ==  'n')  {  lastChar  -=  current;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  ==  'n')  {  lastChar  -=  current;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  ==  'n')  {  lastChar  -=  current;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	22	23	add
237	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    -=    current;    if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }	  	compilable	  [FE]  AssertionError  	22	1	add
238	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }	  	compilable	  [FE]  AssertionError  	22	1	add
239	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  ==  'n')  {  lastChar  -=  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    -=    current;    if(current  ==  'n')  {  lastChar  -=  current;  }	  	compilable	  [FE]  AssertionError  	22	1	add
240	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  ==  'n')  {  lastChar  -=  current;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  ==  'n')  {  lastChar  -=  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  ==  'n')  {  lastChar  -=  current;  }	  	compilable	  [FE]  AssertionError  	22	1	add
241	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  ==  END_OF_STREAM)  {  lastChar  -=  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    -=    current;    if(current  ==  END_OF_STREAM)  {  lastChar  -=  current;  }	  	compilable	  [FE]  AssertionError  	22	1	add
242	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  ==  END_OF_STREAM)  {  lastChar  -=  current;  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  ==  END_OF_STREAM)  {  lastChar  -=  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  ==  END_OF_STREAM)  {  lastChar  -=  current;  }	  	compilable	  [FE]  AssertionError  	22	1	add
243	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  ==  'n')  {  lastChar  -=  current;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  ==  'n')  {  lastChar  -=  current;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  ==  'n')  {  lastChar  -=  current;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar);  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	22	None	add
244	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  ==  'n')  {  lastChar  -=  current;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  current);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  ==  'n')  {  lastChar  -=  current;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  current);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  ==  'n')  {  lastChar  -=  current;  }  else  {  System.arraycopy(END_OF_STREAM,  0,  lastChar,  current);  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	22	None	add
245	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  -=  END_OF_STREAM;	  lastChar    =    END_OF_STREAM;    	compilable	  [FE]  AssertionError  	4	22	replace
246	[BUG]  [BUGGY]  lastChar  -=  END_OF_STREAM;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  -=  END_OF_STREAM;	  lastChar    =    END_OF_STREAM;    	compilable	  [FE]  AssertionError  	4	22	replace
247	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  'n';  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  'n';	  lastChar    =    END_OF_STREAM;    	compilable	timeout	4	1	replace
248	[BUG]  [BUGGY]  lastChar  =  'n';  timeout  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  'n';  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  'n';	  lastChar    =    END_OF_STREAM;    	compilable	timeout	4	1	replace
249	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  0;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  0;	  lastChar    =    END_OF_STREAM;    	compilable	timeout	4	1	replace
250	[BUG]  [BUGGY]  lastChar  =  0;  timeout  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  0;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  0;	  lastChar    =    END_OF_STREAM;    	compilable	timeout	4	1	replace
251	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  |  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  END_OF_STREAM  |  1;	  lastChar    =    END_OF_STREAM;    	compilable	  [FE]  AssertionError  	4	22	replace
252	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  |  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  |  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  END_OF_STREAM  |  1;	  lastChar    =    END_OF_STREAM;    	compilable	  [FE]  AssertionError  	4	22	replace
253	[BUG]  [BUGGY]  lastChar  =  current.length;  [CE]  int  cannot  be  dereferenced  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current.length;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current.length;	  lastChar    =    END_OF_STREAM.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
254	[BUG]  [BUGGY]  lastChar  =  this.end_OF_STREAM.length;  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.end_OF_STREAM.length;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  this.end_OF_STREAM.length;	  lastChar    =    END_OF_STREAM.length;    	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	9	None	replace
255	[BUG]  [BUGGY]  lastChar  =  this.END_OF_STREAM.length;  [CE]  int  cannot  be  dereferenced  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.END_OF_STREAM.length;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  this.END_OF_STREAM.length;	  lastChar    =    END_OF_STREAM.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
256	[BUG]  [BUGGY]  lastChar  =  current,  END_OF_STREAM.length;  [CE]  ';'  expected  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current,  END_OF_STREAM.length;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current,  END_OF_STREAM.length;	  lastChar    =    END_OF_STREAM.length;    	non-compiled	[CE]  ';'  expected	9	None	replace
257	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM.length  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM.length  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  END_OF_STREAM.length  +  1;	  lastChar    =    END_OF_STREAM.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
258	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  >=  'n')?  END_OF_STREAM  :  1;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	timeout	16	1	replace
259	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  1;  timeout  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >=  'n')?  END_OF_STREAM  :  1;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	timeout	16	1	replace
260	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  0;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  >=  'n')?  END_OF_STREAM  :  0;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	timeout	16	1	replace
261	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  0;  timeout  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  0;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >=  'n')?  END_OF_STREAM  :  0;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	timeout	16	1	replace
262	[BUG]  [BUGGY]  lastChar  =  this.endOfFrame.length;  [CE]  cannot  find  symbol  endOfFrame  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.endOfFrame.length;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  this.endOfFrame.length;	  lastChar    =    END_OF_STREAM.length;    	non-compiled	[CE]  cannot  find  symbol  endOfFrame	9	None	replace
263	[BUG]  [BUGGY]  lastChar  =  this.endOF_STREAM.length;  [CE]  cannot  find  symbol  endOF_STREAM  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.endOF_STREAM.length;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  this.endOF_STREAM.length;	  lastChar    =    END_OF_STREAM.length;    	non-compiled	[CE]  cannot  find  symbol  endOF_STREAM	9	None	replace
264	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  %  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  %  2;	  lastChar    =    current    -    1;    timeout    	compilable	  [FE]  AssertionError  	8	22	replace
265	[BUG]  [BUGGY]  lastChar  =  current  %  2;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  %  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  %  2;	  lastChar    =    current    -    1;    timeout    	compilable	  [FE]  AssertionError  	8	22	replace
266	[BUG]  [BUGGY]  timeout  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  -  2;	  lastChar    =    current    -    1;    timeout    	compilable	timeout	8	1	replace
267	[BUG]  [BUGGY]  lastChar  =  current  -  2;  timeout  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  -  2;	  lastChar    =    current    -    1;    timeout    	compilable	timeout	8	1	replace
268	[BUG]  [BUGGY]  lastChar  =  current  -  1L;  [CE]  possible  loss  of  precision  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1L;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  -  1L;	  lastChar    =    current    -    1;    timeout    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
269	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	5	23	add
270	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  lastChar  =  current  *  END_OF_STREAM;  }  [FE]  ArrayStoreException  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	5	23	add
271	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
272	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
273	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  END_OF_STREAM);  lineCounter++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  END_OF_STREAM);  lineCounter++;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	5	23	add
274	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  END_OF_STREAM);  lineCounter++;  }  [FE]  ArrayStoreException  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  END_OF_STREAM);  lineCounter++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  END_OF_STREAM);  lineCounter++;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	5	23	add
275	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current  +  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current  +  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	5	23	add
276	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current  +  END_OF_STREAM;  }  [FE]  ArrayStoreException  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current  +  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  current  =  current  +  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	5	23	add
277	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
278	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
279	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  END_OF_STREAM,  END_OF_STREAM);  lineCounter++;  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  END_OF_STREAM,  END_OF_STREAM);  lineCounter++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  END_OF_STREAM,  END_OF_STREAM);  lineCounter++;  }	  timeout    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	5	None	add
280	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalStateException( " ");  }	  timeout    	compilable	  [FE]  IllegalStateException  	5	23	add
281	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  >=  'n')  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalStateException( " ");  }	  timeout    	compilable	  [FE]  IllegalStateException  	5	23	add
282	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  4;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  +  4;	  lastChar    =    current    +    1;    timeout    	compilable	timeout	2	1	replace
283	[BUG]  [BUGGY]  lastChar  =  current  +  4;  timeout  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  4;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  +  4;	  lastChar    =    current    +    1;    timeout    	compilable	timeout	2	1	replace
284	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  *  1;	  lastChar    =    current    +    1;    timeout    	compilable	  [FE]  AssertionError  	2	1	replace
285	[BUG]  [BUGGY]  lastChar  =  current  *  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  *  1;	  lastChar    =    current    +    1;    timeout    	compilable	  [FE]  AssertionError  	2	1	replace
286	[BUG]  [BUGGY]      lastChar  =  current  +  END_OF_STREAM.length();  [CE]  int  cannot  be  dereferenced  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      lastChar  =  current  +  END_OF_STREAM.length();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	        lastChar  =  current  +  END_OF_STREAM.length();	  timeout    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	add
287	[BUG]  [BUGGY]      int  lastChar  =  current.read();  [CE]  int  cannot  be  dereferenced  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      int  lastChar  =  current.read();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	        int  lastChar  =  current.read();	  timeout    	non-compiled	[CE]  int  cannot  be  dereferenced	13	None	add
288	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current);  lastChar  -=  current;  }  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current);  lastChar  -=  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current);  lastChar  -=  current;  }	  	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	22	None	add
289	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current);  lineCounter++;  }  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current);  lineCounter++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current);  lineCounter++;  }	  	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	22	None	add
290	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  end_OF_STREAM,  lastChar);  lastChar  -=  current;  }  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  end_OF_STREAM,  lastChar);  lastChar  -=  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  end_OF_STREAM,  lastChar);  lastChar  -=  current;  }	  	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	22	None	add
291	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current);  lineCounter  +=  current;  }  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current);  lineCounter  +=  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current);  lineCounter  +=  current;  }	  	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	22	None	add
292	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  lineCounter,  current);  lastChar  -=  current;  }  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  lineCounter,  current);  lastChar  -=  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  lineCounter,  current);  lastChar  -=  current;  }	  	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	22	None	add
293	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  end_OF_STREAM,  lastChar);  lineCounter++;  }  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  end_OF_STREAM,  lastChar);  lineCounter++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  <  'n'  ||  current  >  'r')  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  end_OF_STREAM,  lastChar);  lineCounter++;  }	  	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	22	None	add
294	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  return  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    -=    current;    if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  return  END_OF_STREAM;  }	  	compilable	  [FE]  AssertionError  	22	22	add
295	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  return  END_OF_STREAM;  }  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  return  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  return  END_OF_STREAM;  }	  	compilable	  [FE]  AssertionError  	22	22	add
296	[BUG]  [BUGGY]  lastChar  =  this.endOfStructure.length();  [CE]  cannot  find  symbol  endOfStructure  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.endOfStructure.length();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  this.endOfStructure.length();	  lastChar    =    END_OF_STREAM.length();    	non-compiled	[CE]  cannot  find  symbol  endOfStructure	10	None	replace
297	[BUG]  [BUGGY]  lastChar  =  this.endOfFrame.length();  [CE]  cannot  find  symbol  endOfFrame  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.endOfFrame.length();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  this.endOfFrame.length();	  lastChar    =    END_OF_STREAM.length();    	non-compiled	[CE]  cannot  find  symbol  endOfFrame	10	None	replace
298	[BUG]  [BUGGY]  lastChar  =  this.endOfStrEAM.length();  [CE]  cannot  find  symbol  endOfStrEAM  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.endOfStrEAM.length();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  this.endOfStrEAM.length();	  lastChar    =    END_OF_STREAM.length();    	non-compiled	[CE]  cannot  find  symbol  endOfStrEAM	10	None	replace
299	[BUG]  [BUGGY]  lastChar  =  System.currentTimeMillis()  &  END_OF_STREAM;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  System.currentTimeMillis()  &  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  System.currentTimeMillis()  &  END_OF_STREAM;	  lastChar    =    System.currentTimeMillis();    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
300	[BUG]  [BUGGY]  lastChar  =  System.currentTimeMillis()  *  END_OF_STREAM;  [CE]  possible  loss  of  precision  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  System.currentTimeMillis()  *  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  System.currentTimeMillis()  *  END_OF_STREAM;	  lastChar    =    System.currentTimeMillis();    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
301	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  END_OF_STREAM;	  lastChar    =    END_OF_STREAM;    	compilable	  [FE]  AssertionError  	4	22	replace
302	[BUG]  [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  END_OF_STREAM;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  END_OF_STREAM;	  lastChar    =    END_OF_STREAM;    	compilable	  [FE]  AssertionError  	4	22	replace
303	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  0  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  END_OF_STREAM)?  0  :  END_OF_STREAM;	  lastChar    =    END_OF_STREAM;    	compilable	  [FE]  AssertionError  	4	22	replace
304	[BUG]  [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  0  :  END_OF_STREAM;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  0  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  END_OF_STREAM)?  0  :  END_OF_STREAM;	  lastChar    =    END_OF_STREAM;    	compilable	  [FE]  AssertionError  	4	22	replace
305	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  0;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  0;	  lastChar    =    END_OF_STREAM;    	compilable	  [FE]  AssertionError  	4	22	replace
306	[BUG]  [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  0;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  0;	  lastChar    =    END_OF_STREAM;    	compilable	  [FE]  AssertionError  	4	22	replace
307	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  -1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  -1;	  lastChar    =    END_OF_STREAM;    	compilable	  [FE]  AssertionError  	4	22	replace
308	[BUG]  [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  -1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  -1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  :  -1;	  lastChar    =    END_OF_STREAM;    	compilable	  [FE]  AssertionError  	4	22	replace
309	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  this.lastChar  =  current  *  END_OF_STREAM  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  this.lastChar  =  current  *  END_OF_STREAM  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
310	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  this.lastChar  =  current  *  END_OF_STREAM  +  1;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  this.lastChar  =  current  *  END_OF_STREAM  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  this.lastChar  =  current  *  END_OF_STREAM  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
311	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  int  lastChar  =  current  *  END_OF_STREAM  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  int  lastChar  =  current  *  END_OF_STREAM  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
312	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  int  lastChar  =  current  *  END_OF_STREAM  +  1;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  int  lastChar  =  current  *  END_OF_STREAM  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  int  lastChar  =  current  *  END_OF_STREAM  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
313	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  int  lastChar  =  current  *  END_OF_STREAM  +  1;  lineCounter++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  int  lastChar  =  current  *  END_OF_STREAM  +  1;  lineCounter++;  }	  timeout    	compilable	  [FE]  AssertionError  	24	3	add
314	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  int  lastChar  =  current  *  END_OF_STREAM  +  1;  lineCounter++;  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  int  lastChar  =  current  *  END_OF_STREAM  +  1;  lineCounter++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM  +  1;  }  else  {  int  lastChar  =  current  *  END_OF_STREAM  +  1;  lineCounter++;  }	  timeout    	compilable	  [FE]  AssertionError  	24	3	add
315	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  this.lastChar  =  current  *  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM    +    1;    this.lastChar  =  current  *  END_OF_STREAM  +  1;	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
316	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  this.lastChar  =  current  *  END_OF_STREAM  +  1;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  this.lastChar  =  current  *  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    this.lastChar  =  current  *  END_OF_STREAM  +  1;	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
317	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  >  END_OF_STREAM)?  END_OF_STREAM  :  current;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	22	replace
318	[BUG]  [BUGGY]  lastChar  =(current  >  END_OF_STREAM)?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >  END_OF_STREAM)?  END_OF_STREAM  :  current;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	22	replace
319	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  UNDEFINED;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  UNDEFINED;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	22	replace
320	[BUG]  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  UNDEFINED;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  UNDEFINED;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  UNDEFINED;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	22	replace
321	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  0;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  0;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	22	replace
322	[BUG]  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  0;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  0;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  0;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	18	22	replace
323	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
324	[BUG]  [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;  timeout  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
325	[BUG]  [BUGGY]  timeout  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
326	[BUG]  [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM;  timeout  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
327	[BUG]  [BUGGY]  timeout  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >=  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  'n'  ||  current  >=  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
328	[BUG]  [BUGGY]  lastChar  =(current  <  'n'  ||  current  >=  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;  timeout  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >=  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  'n'  ||  current  >=  'r')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
329	[BUG]  [BUGGY]  timeout  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  0;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  0;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
330	[BUG]  [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  0;  timeout  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  0;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  'n'  ||  current  >  'r')?  END_OF_STREAM  +  1  :  0;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
331	[BUG]  [BUGGY]  timeout  [FE]                            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'n')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  'n'  ||  current  >  'n')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
332	[BUG]  [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'n')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;  timeout  [FE]                            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n'  ||  current  >  'n')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  'n'  ||  current  >  'n')?  END_OF_STREAM  +  1  :  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
333	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  if(current  >=  END_OF_STREAM)  {  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    if(current  >=  END_OF_STREAM)  {  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  }	  	compilable	  [FE]  AssertionError  	17	1	add
334	[BUG]  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  if(current  >=  END_OF_STREAM)  {  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  if(current  >=  END_OF_STREAM)  {  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    if(current  >=  END_OF_STREAM)  {  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  }	  	compilable	  [FE]  AssertionError  	17	1	add
335	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
336	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }  [FE]  ArrayStoreException  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
337	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current;  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
338	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current;  }  [FE]  ArrayStoreException  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current;  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
339	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n'  ||  current  ==  'r')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    if(current  ==  'n'  ||  current  ==  'r')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
340	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n'  ||  current  ==  'r')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }  [FE]  ArrayStoreException  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n'  ||  current  ==  'r')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    if(current  ==  'n'  ||  current  ==  'r')  {  lastChar  =  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }	  	compilable	  [FE]  ArrayStoreException  	3	23	add
341	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n'  ||  current  ==  'r')  {  lastChar  =  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    if(current  ==  'n'  ||  current  ==  'r')  {  lastChar  =  END_OF_STREAM;  }	  	compilable	  [FE]  AssertionError  	3	1	add
342	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n'  ||  current  ==  'r')  {  lastChar  =  END_OF_STREAM;  }  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  if(current  ==  'n'  ||  current  ==  'r')  {  lastChar  =  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    if(current  ==  'n'  ||  current  ==  'r')  {  lastChar  =  END_OF_STREAM;  }	  	compilable	  [FE]  AssertionError  	3	1	add
343	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  int  lastChar  =(current  >=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    -1    :    current;    int  lastChar  =(current  >=  'n')?  -1  :  current;	  	compilable	  [FE]  AssertionError  	20	13	add
344	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  int  lastChar  =(current  >=  'n')?  -1  :  current;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  int  lastChar  =(current  >=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    -1    :    current;    int  lastChar  =(current  >=  'n')?  -1  :  current;	  	compilable	  [FE]  AssertionError  	20	13	add
345	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    -1    :    current;    if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }	  	compilable	  [FE]  AssertionError  	20	1	add
346	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    -1    :    current;    if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }	  	compilable	  [FE]  AssertionError  	20	1	add
347	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    -1    :    current;    if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	20	23	add
348	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    -1    :    current;    if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  IllegalStateException  	20	23	add
349	[BUG]  [BUGGY]  [FE]  IOException  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  return  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    -1    :    current;    if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  return  END_OF_STREAM;  }	  	compilable	  [FE]  IOException  	20	21	add
350	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  return  END_OF_STREAM;  }  [FE]  IOException  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  return  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    -1    :    current;    if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  return  END_OF_STREAM;  }	  	compilable	  [FE]  IOException  	20	21	add
351	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    -1    :    current;    if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	20	23	add
352	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    -1    :    current;    if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  -1  :  current;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  IllegalArgumentException  	20	23	add
353	[BUG]  [BUGGY]  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  int  lastChar  =  current  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    -    1;    int  lastChar  =  current  -  1;	  timeout    	compilable	timeout	7	1	add
354	[BUG]  [BUGGY]  lastChar  =  current  -  1;  int  lastChar  =  current  -  1;  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  int  lastChar  =  current  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    int  lastChar  =  current  -  1;	  timeout    	compilable	timeout	7	1	add
355	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  this.lastChar  =  current  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    -    1;    this.lastChar  =  current  -  1;	  timeout    	compilable	  [FE]  AssertionError  	7	1	add
356	[BUG]  [BUGGY]  lastChar  =  current  -  1;  this.lastChar  =  current  -  1;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  this.lastChar  =  current  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    this.lastChar  =  current  -  1;	  timeout    	compilable	  [FE]  AssertionError  	7	1	add
357	[BUG]  [BUGGY]  lastChar  =  current  -  1;  nextChar  =  current  -  1;  [CE]  nextChar  has  private  access  in  BufferedReader  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  nextChar  =  current  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    nextChar  =  current  -  1;	  timeout    	non-compiled	[CE]  nextChar  has  private  access  in  BufferedReader	7	None	add
358	[BUG]  [BUGGY]  lastChar  =  current  -  1;  firstChar  =  current  -  1;  [CE]  cannot  find  symbol  firstChar  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  firstChar  =  current  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    firstChar  =  current  -  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol  firstChar	7	None	add
359	[BUG]  [BUGGY]  lastChar  =  current  -  1;  lastChar  -  1;  [CE]  not  a  statement  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  lastChar  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    lastChar  -  1;	  timeout    	non-compiled	[CE]  not  a  statement	7	None	add
360	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    -    1;    lastChar  =  current  -  2;	  timeout    	compilable	  [FE]  AssertionError  	7	1	add
361	[BUG]  [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  2;  [FE]  AssertionError  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    lastChar  =  current  -  2;	  timeout    	compilable	  [FE]  AssertionError  	7	1	add
362	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  >=  'n')?  -1  :  1;	  lastChar    =(current    >=    'n')?    -1    :    current;    	compilable	timeout	21	1	replace
363	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  1;  timeout  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >=  'n')?  -1  :  1;	  lastChar    =(current    >=    'n')?    -1    :    current;    	compilable	timeout	21	1	replace
364	[BUG]  [BUGGY]  timeout  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  *  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  END_OF_STREAM  *  current;	  lastChar    =    current    *    END_OF_STREAM;    timeout    	compilable	timeout	6	1	replace
365	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  *  current;  timeout  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  *  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  END_OF_STREAM  *  current;	  lastChar    =    current    *    END_OF_STREAM;    timeout    	compilable	timeout	6	1	replace
366	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  -=  current  -  1;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
367	[BUG]  [BUGGY]  lastChar  -=  current  -  1;  timeout  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  -=  current  -  1;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
368	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current  +  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  -=  current  +  2;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
369	[BUG]  [BUGGY]  lastChar  -=  current  +  2;  timeout  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current  +  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  -=  current  +  2;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
370	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  lineCounter;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  -=  lineCounter;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
371	[BUG]  [BUGGY]  lastChar  -=  lineCounter;  timeout  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  lineCounter;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  -=  lineCounter;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
372	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	11	23	add
373	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current;  }  [FE]  ArrayStoreException  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  1,  lineCounter);  current  =  current;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	11	23	add
374	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	11	23	add
375	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }  [FE]  ArrayStoreException  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lineCounter++;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	11	23	add
376	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  lineCounter);  current  =  current;  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  lineCounter);  current  =  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  lineCounter);  current  =  current;  }	  timeout    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	11	None	add
377	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  current,  lineCounter);  current  =  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  current,  lineCounter);  current  =  current;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	11	23	add
378	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  current,  lineCounter);  current  =  current;  }  [FE]  ArrayStoreException  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  current,  lineCounter);  current  =  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    if(current  ==  'n')  {  lastChar  =  END_OF_STREAM  +  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  current,  lineCounter);  current  =  current;  }	  timeout    	compilable	  [FE]  ArrayStoreException  	11	23	add
379	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  4;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  *  END_OF_STREAM  +  4;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	timeout	25	1	replace
380	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  4;  timeout  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  4;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  *  END_OF_STREAM  +  4;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	timeout	25	1	replace
381	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  }	  	compilable	  [FE]  AssertionError  	15	1	add
382	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    if(current  >=  'n')  {  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  }	  	compilable	  [FE]  AssertionError  	15	1	add
383	[BUG]  [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  lastChar  =  current  -  1;  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  lastChar  =  current  -  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    lastChar  =  current  -  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  lastChar  =  current  -  1;  }	  timeout    	non-compiled	[CE]  illegal  start  of  type	7	None	add
384	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    -    1;    lastChar  =  current  -  1;  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);	  timeout    	compilable	  [FE]  ArrayStoreException  	7	23	add
385	[BUG]  [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);  [FE]  ArrayStoreException  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    lastChar  =  current  -  1;  System.arraycopy(lastChar,  0,  lastChar,  0,  lineCounter);	  timeout    	compilable	  [FE]  ArrayStoreException  	7	23	add
386	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    -    1;    lastChar  =  current  -  1;  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);	  timeout    	compilable	  [FE]  ArrayStoreException  	7	23	add
387	[BUG]  [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  [FE]  ArrayStoreException  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    lastChar  =  current  -  1;  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);	  timeout    	compilable	  [FE]  ArrayStoreException  	7	23	add
388	[BUG]  [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  lastChar  =  current  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  lastChar  =  current  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    lastChar  =  current  -  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  lastChar  =  current  -  1;	  timeout    	non-compiled	[CE]  illegal  start  of  type	7	None	add
389	[BUG]  [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lastChar  =  current  -  1;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1;  lastChar  =  current  -  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lastChar  =  current  -  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    -    1;    lastChar  =  current  -  1;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  current);  lastChar  =  current  -  1;  }	  timeout    	non-compiled	[CE]  illegal  start  of  type	7	None	add
390	[BUG]  [BUGGY]  lastChar  =  this.end_Of_STREAM.length();  [CE]  cannot  find  symbol  end_Of_STREAM  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.end_Of_STREAM.length();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  this.end_Of_STREAM.length();	  lastChar    =    END_OF_STREAM.length();    	non-compiled	[CE]  cannot  find  symbol  end_Of_STREAM	10	None	replace
391	[BUG]  [BUGGY]  timeout  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  END_OF_STREAM  ||  current  >  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  END_OF_STREAM  ||  current  >  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
392	[BUG]  [BUGGY]  lastChar  =(current  <  END_OF_STREAM  ||  current  >  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM  +  1;  timeout  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  END_OF_STREAM  ||  current  >  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  END_OF_STREAM  ||  current  >  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
393	[BUG]  [BUGGY]  timeout  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  0  :  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  END_OF_STREAM)?  0  :  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
394	[BUG]  [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  0  :  END_OF_STREAM  +  1;  timeout  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  0  :  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  END_OF_STREAM)?  0  :  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
395	[BUG]  [BUGGY]  timeout  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  END_OF_STREAM  ||  current  >  END_OF_STREAM)?  0  :  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  END_OF_STREAM  ||  current  >  END_OF_STREAM)?  0  :  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
396	[BUG]  [BUGGY]  lastChar  =(current  <  END_OF_STREAM  ||  current  >  END_OF_STREAM)?  0  :  END_OF_STREAM  +  1;  timeout  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  END_OF_STREAM  ||  current  >  END_OF_STREAM)?  0  :  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  END_OF_STREAM  ||  current  >  END_OF_STREAM)?  0  :  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
397	[BUG]  [BUGGY]  timeout  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
398	[BUG]  [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM  +  1;  timeout  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  END_OF_STREAM  +  1;	  lastChar    =    END_OF_STREAM    +    1;    timeout    	compilable	timeout	12	1	replace
399	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  firstChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  [CE]  cannot  find  symbol  firstChar  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  firstChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    firstChar  =(current  >=  'n')?  END_OF_STREAM  :  current;	  	non-compiled	[CE]  cannot  find  symbol  firstChar	15	None	add
400	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  current  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  current  +  1;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	timeout	18	1	replace
401	[BUG]  [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  current  +  1;  timeout  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  current  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  END_OF_STREAM)?  END_OF_STREAM  :  current  +  1;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	compilable	timeout	18	1	replace
402	[BUG]  [BUGGY]  lastChar  =(current  >>  END_OF_STREAM)?  END_OF_STREAM  :  current;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >>  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >>  END_OF_STREAM)?  END_OF_STREAM  :  current;	  lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    	non-compiled	[CE]  incompatible  types	18	None	replace
403	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  end_OF_STREAM,  lastChar);  lastChar  -=  current;  }  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  end_OF_STREAM,  lastChar);  lastChar  -=  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  end_OF_STREAM,  lastChar);  lastChar  -=  current;  }	  	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	22	None	add
404	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current);  lastChar  -=  current;  }  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current);  lastChar  -=  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current);  lastChar  -=  current;  }	  	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	22	None	add
405	[BUG]  [BUGGY]  timeout  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  >  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  return  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    -=    current;    if(current  >  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  return  END_OF_STREAM;  }	  	compilable	timeout	22	1	add
406	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  >  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  return  END_OF_STREAM;  }  timeout  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  >  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  return  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  >  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  return  END_OF_STREAM;  }	  	compilable	timeout	22	1	add
407	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  end_OF_STREAM,  lastChar);  return  END_OF_STREAM;  }  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  end_OF_STREAM,  lastChar);  return  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  end_OF_STREAM,  lastChar);  return  END_OF_STREAM;  }	  	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	22	None	add
408	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current,  lastChar);  lastChar  -=  current;  }  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current,  lastChar);  lastChar  -=  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current,  lastChar);  lastChar  -=  current;  }	  	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	22	None	add
409	[BUG]  [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current,  lineCounter);  lastChar  -=  current;  }  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current;  if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current,  lineCounter);  lastChar  -=  current;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    -=    current;    if(current  <  END_OF_STREAM)  {  lastChar  -=  current;  }  else  {  System.arraycopy(end_OF_STREAM,  0,  current,  lineCounter);  lastChar  -=  current;  }	  	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	22	None	add
410	[BUG]  [BUGGY]      int  lastChar  =  getLastChar();  [CE]  cannot  find  symbol  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      int  lastChar  =  getLastChar();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	        int  lastChar  =  getLastChar();	  timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	add
411	[BUG]  [BUGGY]      int  lastChar  =  getLastChar();  if(lastChar!=  END_OF_STREAM)  {  lastChar  =  current  +  1;  }  [CE]  cannot  find  symbol  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      int  lastChar  =  getLastChar();  if(lastChar!=  END_OF_STREAM)  {  lastChar  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	        int  lastChar  =  getLastChar();  if(lastChar!=  END_OF_STREAM)  {  lastChar  =  current  +  1;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	add
412	[BUG]  [BUGGY]      int  lastChar  =  getLastChar();  if(lastChar!=  'n')  {  lastChar  =  current  +  1;  }  [CE]  cannot  find  symbol  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]      int  lastChar  =  getLastChar();  if(lastChar!=  'n')  {  lastChar  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	        int  lastChar  =  getLastChar();  if(lastChar!=  'n')  {  lastChar  =  current  +  1;  }	  timeout    	non-compiled	[CE]  cannot  find  symbol	13	None	add
413	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n')?  -1  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  'n')?  -1  :  1;	  lastChar    =(current    >=    'n')?    -1    :    current;    	compilable	  [FE]  AssertionError  	21	22	replace
414	[BUG]  [BUGGY]  lastChar  =(current  <  'n')?  -1  :  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n')?  -1  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  'n')?  -1  :  1;	  lastChar    =(current    >=    'n')?    -1    :    current;    	compilable	  [FE]  AssertionError  	21	22	replace
415	[BUG]  [BUGGY]  lastChar  =(current  >>  'n')?  -1  :  current;  [CE]  incompatible  types  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >>  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >>  'n')?  -1  :  current;	  lastChar    =(current    >=    'n')?    -1    :    current;    	non-compiled	[CE]  incompatible  types	21	None	replace
416	[BUG]  [BUGGY]  lastChar  =  this.end_OF_STREAM;  [CE]  cannot  find  symbol  end_OF_STREAM  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.end_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  this.end_OF_STREAM;	  lastChar    =    END_OF_STREAM;    	non-compiled	[CE]  cannot  find  symbol  end_OF_STREAM	4	None	replace
417	[BUG]  [BUGGY]  timeout  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.lineCounter;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  this.lineCounter;	  lastChar    =    END_OF_STREAM;    	compilable	timeout	4	1	replace
418	[BUG]  [BUGGY]  lastChar  =  this.lineCounter;  timeout  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.lineCounter;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  this.lineCounter;	  lastChar    =    END_OF_STREAM;    	compilable	timeout	4	1	replace
419	[BUG]  [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  }  else  if(current  ==  'n'  ||  current  ==  END_OF_STREAM)  {  lastChar  =  current  +  1;  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  }  else  if(current  ==  'n'  ||  current  ==  END_OF_STREAM)  {  lastChar  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    +    1;    lastChar  =  current  +  1;  }  else  if(current  ==  'n'  ||  current  ==  END_OF_STREAM)  {  lastChar  =  current  +  1;  }	  timeout    	non-compiled	[CE]  illegal  start  of  type	1	None	add
420	[BUG]  [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  }  else  if(current  ==  'n')  {  lastChar  =  current  +  1;  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  }  else  if(current  ==  'n')  {  lastChar  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    +    1;    lastChar  =  current  +  1;  }  else  if(current  ==  'n')  {  lastChar  =  current  +  1;  }	  timeout    	non-compiled	[CE]  illegal  start  of  type	1	None	add
421	[BUG]  [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  }  else  if(current  ==  'n'  ||  current  ==  'r')  {  lastChar  =  current  +  1;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  }  else  if(current  ==  'n'  ||  current  ==  'r')  {  lastChar  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    +    1;    lastChar  =  current  +  1;  }  else  if(current  ==  'n'  ||  current  ==  'r')  {  lastChar  =  current  +  1;  }	  timeout    	non-compiled	[CE]  illegal  start  of  type	1	None	add
422	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  if(lastChar  ==  'n')  {  lastChar  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    +    1;    lastChar  =  current  +  1;  if(lastChar  ==  'n')  {  lastChar  =  current  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	1	1	add
423	[BUG]  [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  if(lastChar  ==  'n')  {  lastChar  =  current  +  1;  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  if(lastChar  ==  'n')  {  lastChar  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    +    1;    lastChar  =  current  +  1;  if(lastChar  ==  'n')  {  lastChar  =  current  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	1	1	add
424	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  if(current  ==  'n')  {  lastChar  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    +    1;    lastChar  =  current  +  1;  if(current  ==  'n')  {  lastChar  =  current  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	1	1	add
425	[BUG]  [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  if(current  ==  'n')  {  lastChar  =  current  +  1;  }  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  if(current  ==  'n')  {  lastChar  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    +    1;    lastChar  =  current  +  1;  if(current  ==  'n')  {  lastChar  =  current  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	1	1	add
426	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  if(current  >=  'n')  {  lastChar  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    +    1;    lastChar  =  current  +  1;  if(current  >=  'n')  {  lastChar  =  current  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	1	1	add
427	[BUG]  [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  if(current  >=  'n')  {  lastChar  =  current  +  1;  }  [FE]  AssertionError  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  if(current  >=  'n')  {  lastChar  =  current  +  1;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    +    1;    lastChar  =  current  +  1;  if(current  >=  'n')  {  lastChar  =  current  +  1;  }	  timeout    	compilable	  [FE]  AssertionError  	1	1	add
428	[BUG]  [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  }  else  if(current  ==  'n'  ||  current  ==  END_OF_STREAM)  {  lastChar  =  current  +  2;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  +  1;  lastChar  =  current  +  1;  }  else  if(current  ==  'n'  ||  current  ==  END_OF_STREAM)  {  lastChar  =  current  +  2;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    +    1;    lastChar  =  current  +  1;  }  else  if(current  ==  'n'  ||  current  ==  END_OF_STREAM)  {  lastChar  =  current  +  2;  }	  timeout    	non-compiled	[CE]  illegal  start  of  type	1	None	add
429	[BUG]  [BUGGY]  lastChar  =  System.currentTimeMillis()  -  lineCounter;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  System.currentTimeMillis()  -  lineCounter;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  System.currentTimeMillis()  -  lineCounter;	  lastChar    =    System.currentTimeMillis();    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
430	[BUG]  [BUGGY]  lastChar  =  System.currentTimeMillis()  -  4;  [CE]  possible  loss  of  precision  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  System.currentTimeMillis()  -  4;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  System.currentTimeMillis()  -  4;	  lastChar    =    System.currentTimeMillis();    	non-compiled	[CE]  possible  loss  of  precision	19	None	replace
431	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  this.lastChar  =  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM    +    1;    this.lastChar  =  END_OF_STREAM  +  1;	  timeout    	compilable	  [FE]  AssertionError  	11	1	add
432	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  this.lastChar  =  END_OF_STREAM  +  1;  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  this.lastChar  =  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    this.lastChar  =  END_OF_STREAM  +  1;	  timeout    	compilable	  [FE]  AssertionError  	11	1	add
433	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  lastChar  =  DEFINED_OF_STREAM  +  1;  [CE]  cannot  find  symbol  DEFINED_OF_STREAM  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  lastChar  =  DEFINED_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    lastChar  =  DEFINED_OF_STREAM  +  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol  DEFINED_OF_STREAM	11	None	add
434	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  firstChar  =  END_OF_STREAM  +  1;  [CE]  cannot  find  symbol  firstChar  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  firstChar  =  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    firstChar  =  END_OF_STREAM  +  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol  firstChar	11	None	add
435	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  lastChar  =  END_OF_STREAM  +  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM    +    1;    lastChar  =  END_OF_STREAM  +  2;	  timeout    	compilable	  [FE]  AssertionError  	11	1	add
436	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  lastChar  =  END_OF_STREAM  +  2;  [FE]  AssertionError  [FE]                          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  lastChar  =  END_OF_STREAM  +  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    lastChar  =  END_OF_STREAM  +  2;	  timeout    	compilable	  [FE]  AssertionError  	11	1	add
437	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  lastChar  =  UNDEFINED  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM    +    1;    lastChar  =  UNDEFINED  +  1;	  timeout    	compilable	  [FE]  AssertionError  	11	1	add
438	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  lastChar  =  UNDEFINED  +  1;  [FE]  AssertionError  [FE]                            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  lastChar  =  UNDEFINED  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM    +    1;    lastChar  =  UNDEFINED  +  1;	  timeout    	compilable	  [FE]  AssertionError  	11	1	add
439	[BUG]  [BUGGY]  timeout  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current  *  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  -=  current  *  END_OF_STREAM;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
440	[BUG]  [BUGGY]  lastChar  -=  current  *  END_OF_STREAM;  timeout  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  -=  current  *  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  -=  current  *  END_OF_STREAM;	  lastChar    -=    current;    	compilable	timeout	23	1	replace
441	[BUG]  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  firstChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [CE]  cannot  find  symbol  firstChar  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  firstChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    END_OF_STREAM)?    END_OF_STREAM    :    current;    firstChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;	  	non-compiled	[CE]  cannot  find  symbol  firstChar	17	None	add
442	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n')?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  'n')?  END_OF_STREAM  :  END_OF_STREAM;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	16	22	replace
443	[BUG]  [BUGGY]  lastChar  =(current  <  'n')?  END_OF_STREAM  :  END_OF_STREAM;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n')?  END_OF_STREAM  :  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  'n')?  END_OF_STREAM  :  END_OF_STREAM;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	16	22	replace
444	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n')?  END_OF_STREAM  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  'n')?  END_OF_STREAM  :  1;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	16	22	replace
445	[BUG]  [BUGGY]  lastChar  =(current  <  'n')?  END_OF_STREAM  :  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n')?  END_OF_STREAM  :  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  'n')?  END_OF_STREAM  :  1;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	16	22	replace
446	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  <  'n')?  END_OF_STREAM  :  current;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	16	22	replace
447	[BUG]  [BUGGY]  lastChar  =(current  <  'n')?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  <  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  <  'n')?  END_OF_STREAM  :  current;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	16	22	replace
448	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  >  'n')?  END_OF_STREAM  :  current;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	16	18	replace
449	[BUG]  [BUGGY]  lastChar  =(current  >  'n')?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >  'n')?  END_OF_STREAM  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >  'n')?  END_OF_STREAM  :  current;	  lastChar    =(current    >=    'n')?    END_OF_STREAM    :    current;    	compilable	  [FE]  AssertionError  	16	18	replace
450	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  this.lastChar  =(current  >=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =(current    >=    'n')?    -1    :    current;    this.lastChar  =(current  >=  'n')?  -1  :  current;	  	compilable	  [FE]  AssertionError  	20	1	add
451	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  this.lastChar  =(current  >=  'n')?  -1  :  current;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  this.lastChar  =(current  >=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    -1    :    current;    this.lastChar  =(current  >=  'n')?  -1  :  current;	  	compilable	  [FE]  AssertionError  	20	1	add
452	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  if(current  >=  'n')?  -1  :  current;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  if(current  >=  'n')?  -1  :  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =(current    >=    'n')?    -1    :    current;    if(current  >=  'n')?  -1  :  current;	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
453	[BUG]  [BUGGY]  lastChar  =  this.current  -  1;  [CE]  cannot  find  symbol  current  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  this.current  -  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  this.current  -  1;	  lastChar    =    current    -    1;    timeout    	non-compiled	[CE]  cannot  find  symbol  current	8	None	replace
454	[BUG]  [BUGGY]  timeout  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  -1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  *  -1;	  lastChar    =    current    -    1;    timeout    	compilable	timeout	8	1	replace
455	[BUG]  [BUGGY]  lastChar  =  current  *  -1;  timeout  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  -1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  *  -1;	  lastChar    =    current    -    1;    timeout    	compilable	timeout	8	1	replace
456	[BUG]  [BUGGY]  lastChar  =  lineCounter.length;  [CE]  int  cannot  be  dereferenced  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  lineCounter.length;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  lineCounter.length;	  lastChar    =    END_OF_STREAM.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	9	None	replace
457	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  nextChar  =  current  *  END_OF_STREAM  +  1;  [CE]  nextChar  has  private  access  in  BufferedReader  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  nextChar  =  current  *  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    nextChar  =  current  *  END_OF_STREAM  +  1;	  timeout    	non-compiled	[CE]  nextChar  has  private  access  in  BufferedReader	24	None	add
458	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  firstChar  =  current  *  END_OF_STREAM  +  1;  [CE]  cannot  find  symbol  firstChar  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  firstChar  =  current  *  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    firstChar  =  current  *  END_OF_STREAM  +  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol  firstChar	24	None	add
459	[BUG]  [BUGGY]  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  current  =  current  *  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM    +    1;    current  =  current  *  END_OF_STREAM  +  1;	  timeout    	compilable	timeout	24	1	add
460	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  current  =  current  *  END_OF_STREAM  +  1;  timeout  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  current  =  current  *  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    current  =  current  *  END_OF_STREAM  +  1;	  timeout    	compilable	timeout	24	1	add
461	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  lastChar  =  current  *  END_OF_STREAM  +  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM    +    1;    lastChar  =  current  *  END_OF_STREAM  +  2;	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
462	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  lastChar  =  current  *  END_OF_STREAM  +  2;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  lastChar  =  current  *  END_OF_STREAM  +  2;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM    +    1;    lastChar  =  current  *  END_OF_STREAM  +  2;	  timeout    	compilable	  [FE]  AssertionError  	24	1	add
463	[BUG]  [BUGGY]  timeout  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1  *  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  -  1  *  END_OF_STREAM  +  1;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	timeout	25	1	replace
464	[BUG]  [BUGGY]  lastChar  =  current  -  1  *  END_OF_STREAM  +  1;  timeout  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1  *  END_OF_STREAM  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  -  1  *  END_OF_STREAM  +  1;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	timeout	25	1	replace
465	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  -  1  +  1;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	  [FE]  AssertionError  	25	1	replace
466	[BUG]  [BUGGY]  lastChar  =  current  -  1  +  1;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  -  1  +  1;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  -  1  +  1;	  lastChar    =    current    *    END_OF_STREAM    +    1;    timeout    	compilable	  [FE]  AssertionError  	25	1	replace
467	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  this.lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  this.lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
468	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  this.lastChar  =  current  *  END_OF_STREAM;  }  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  this.lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  this.lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
469	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
470	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
471	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalStateException( " ");  }	  timeout    	compilable	  [FE]  IllegalStateException  	5	23	add
472	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]                AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalStateException( " ");  }	  timeout    	compilable	  [FE]  IllegalStateException  	5	23	add
473	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	  [FE]  IllegalArgumentException  	5	23	add
474	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                  AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  timeout    	compilable	  [FE]  IllegalArgumentException  	5	23	add
475	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
476	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  [FE]  AssertionError  [FE]                    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }	  timeout    	compilable	  [FE]  AssertionError  	5	1	add
477	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    current    *    END_OF_STREAM;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  ArrayStoreException  	5	23	add
478	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [FE]  ArrayStoreException  [FE]                      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  0,  lineCounter);  }	  timeout    	compilable	  [FE]  ArrayStoreException  	5	23	add
479	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  lineCounter);  break;  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  lineCounter);  break;  }  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    current    *    END_OF_STREAM;    if(current  <  END_OF_STREAM)  {  lastChar  =  current  *  END_OF_STREAM;  }  else  {  System.arraycopy(current,  0,  lastChar,  lineCounter);  break;  }	  timeout    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	5	None	add
480	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  int  lastChar  =  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    int  lastChar  =  END_OF_STREAM;	  	compilable	  [FE]  AssertionError  	3	22	add
481	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  int  lastChar  =  END_OF_STREAM;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  int  lastChar  =  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    int  lastChar  =  END_OF_STREAM;	  	compilable	  [FE]  AssertionError  	3	22	add
482	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  this.lastChar  =  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    this.lastChar  =  END_OF_STREAM;	  	compilable	  [FE]  AssertionError  	3	1	add
483	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  this.lastChar  =  END_OF_STREAM;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  this.lastChar  =  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    this.lastChar  =  END_OF_STREAM;	  	compilable	  [FE]  AssertionError  	3	1	add
484	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  lastChar  =  END_OF_STREAM.intValue();  [CE]  int  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  lastChar  =  END_OF_STREAM.intValue();  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    lastChar  =  END_OF_STREAM.intValue();	  	non-compiled	[CE]  int  cannot  be  dereferenced	3	None	add
485	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  firstChar  =  END_OF_STREAM;  [CE]  cannot  find  symbol  firstChar  [FE]          AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  firstChar  =  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    firstChar  =  END_OF_STREAM;	  	non-compiled	[CE]  cannot  find  symbol  firstChar	3	None	add
486	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  nextChar  =  END_OF_STREAM;  [CE]  nextChar  has  private  access  in  BufferedReader  [FE]            AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  nextChar  =  END_OF_STREAM;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    nextChar  =  END_OF_STREAM;	  	non-compiled	[CE]  nextChar  has  private  access  in  BufferedReader	3	None	add
487	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  lastChar  =  END_OF_STREAM;  this.lastChar  =  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar    =    END_OF_STREAM;    lastChar  =  END_OF_STREAM;  this.lastChar  =  current;	  	compilable	  [FE]  AssertionError  	3	1	add
488	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  lastChar  =  END_OF_STREAM;  this.lastChar  =  current;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }    [BUGGY]  lastChar  =  END_OF_STREAM;  lastChar  =  END_OF_STREAM;  this.lastChar  =  current;  [BUGGY]    return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar    =    END_OF_STREAM;    lastChar  =  END_OF_STREAM;  this.lastChar  =  current;	  	compilable	  [FE]  AssertionError  	3	1	add
