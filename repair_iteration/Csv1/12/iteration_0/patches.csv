bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]    AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  current  +  1;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  +  1;	lastChar  =  current;  	compilable	timeout	23	1	replace
2	[BUG]  [BUGGY]  lastChar  =  current  +  1;  timeout  [FE]    AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  current  +  1;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  +  1;	lastChar  =  current;  	compilable	timeout	23	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  END_OF_STREAM;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  END_OF_STREAM;	lastChar  =  current;  	compilable	  [FE]  AssertionError  	23	22	replace
4	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  END_OF_STREAM;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  END_OF_STREAM;	lastChar  =  current;  	compilable	  [FE]  AssertionError  	23	22	replace
5	[BUG]  [BUGGY]  timeout  [FE]        AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  *  END_OF_STREAM;	lastChar  =  current;  	compilable	timeout	23	1	replace
6	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  timeout  [FE]        AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  current  *  END_OF_STREAM;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  *  END_OF_STREAM;	lastChar  =  current;  	compilable	timeout	23	1	replace
7	[BUG]  [BUGGY]  timeout  [FE]          AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  current  -  1;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  -  1;	lastChar  =  current;  	compilable	timeout	23	1	replace
8	[BUG]  [BUGGY]  lastChar  =  current  -  1;  timeout  [FE]          AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  current  -  1;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  -  1;	lastChar  =  current;  	compilable	timeout	23	1	replace
9	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM.length;  [CE]  int  cannot  be  dereferenced  [FE]            AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  END_OF_STREAM.length;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  END_OF_STREAM.length;	lastChar  =  current;  	non-compiled	[CE]  int  cannot  be  dereferenced	23	None	replace
10	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM.length();  [CE]  int  cannot  be  dereferenced  [FE]              AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  END_OF_STREAM.length();  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  END_OF_STREAM.length();	lastChar  =  current;  	non-compiled	[CE]  int  cannot  be  dereferenced	23	None	replace
11	[BUG]  [BUGGY]  timeout  [FE]                AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  END_OF_STREAM  +  1;	lastChar  =  current;  	compilable	timeout	23	1	replace
12	[BUG]  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  timeout  [FE]                AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  END_OF_STREAM  +  1;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  END_OF_STREAM  +  1;	lastChar  =  current;  	compilable	timeout	23	1	replace
13	[BUG]  [BUGGY]  timeout  [FE]                  AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]    [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	  	lastChar  =  current;  	compilable	timeout	23	1	replace
14	[BUG]  [BUGGY]    timeout  [FE]                  AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]    [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	  	lastChar  =  current;  	compilable	timeout	23	1	replace
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;	lastChar  =  current;  	compilable	  [FE]  AssertionError  	23	18	replace
16	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >=  'n')?  END_OF_STREAM  :  current;	lastChar  =  current;  	compilable	  [FE]  AssertionError  	23	18	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;	lastChar  =  current;  	compilable	  [FE]  AssertionError  	23	22	replace
18	[BUG]  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >=  END_OF_STREAM)?  END_OF_STREAM  :  current;	lastChar  =  current;  	compilable	  [FE]  AssertionError  	23	22	replace
19	[BUG]  [BUGGY]  lastChar  =  System.currentTimeMillis();  [CE]  possible  loss  of  precision  [FE]        AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  System.currentTimeMillis();  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  System.currentTimeMillis();	lastChar  =  current;  	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
20	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =(current  >=  'n')?  -1  :  current;	lastChar  =  current;  	compilable	  [FE]  AssertionError  	23	18	replace
21	[BUG]  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  [FE]  AssertionError  [FE]          AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =(current  >=  'n')?  -1  :  current;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =(current  >=  'n')?  -1  :  current;	lastChar  =  current;  	compilable	  [FE]  AssertionError  	23	18	replace
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  -=  current;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  -=  current;	lastChar  =  current;  	compilable	  [FE]  AssertionError  	23	22	replace
23	[BUG]  [BUGGY]  lastChar  -=  current;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  -=  current;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  -=  current;	lastChar  =  current;  	compilable	  [FE]  AssertionError  	23	22	replace
24	[BUG]  [BUGGY]  timeout  [FE]      AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	add	lastChar  =  current  *  END_OF_STREAM  +  1;	lastChar  =  current;  	compilable	timeout	23	1	replace
25	[BUG]  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  timeout  [FE]      AssertionError  [CONTEXT]  public  int  read()  throws  IOException  {  int  current  =  super.read();  if  (current  ==  '\n')  {  lineCounter++;  }  [BUGGY]  lastChar  =  current  *  END_OF_STREAM  +  1;  [BUGGY]  return  lastChar;  }  [CLASS]  ExtendedBufferedReader  [METHOD]  read  [RETURN_TYPE]  int  [VARIABLES]  int  END_OF_STREAM  UNDEFINED  current  lastChar  lineCounter  boolean  	projects/Csv1/src/main/java/org/apache/commons/csv/ExtendedBufferedReader.java	0.20851441405707477	61	61	1	replace	lastChar  =  current  *  END_OF_STREAM  +  1;	lastChar  =  current;  	compilable	timeout	23	1	replace
